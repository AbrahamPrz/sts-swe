CAPÍTULO 26  ESTIMACIÓN PARA PROYECTOS DE SOFTWARE 595 lidad con la que se dividieron las funciones y la naturaleza jerárquica de la información que debe  procesarse. La disponibilidad de información histórica tiene fuerte influencia sobre el riesgo de estima- ción. Al mirar hacia atrás, puede emular las cosas que funcionaron y mejorar las áreas donde surgieron problemas. Cuando hay disponibles métricas de software exhaustivas (capítulo 25) para proyectos anteriores, pueden hacerse estimaciones con mayor precisión, así como estable-cerse calendarios para evitar las dificultades pasadas y el riesgo global se reduce. El riesgo de estimación se mide por el grado de incertidumbre en las estimaciones cuantita- tivas establecidas para recursos, costo y calendario. Si el ámbito del proyecto se comprende pobremente o si los requisitos del proyecto están sujetos a cambio, la incertidumbre y el riesgo en la estimación se vuelven peligrosamente altos. Como planificador, usted y el cliente deben reconocer que la variabilidad en los requisitos del software significa inestabilidad en costo y calendario. Sin embargo, no debe volverse obsesivo acerca de la estimación. Los modernos enfoques de  ingeniería de software (por ejemplo, modelos de proceso evolutivos) toman una visión iterativa del desarrollo. En tales enfoques es posible, aunque no siempre políticamente aceptable, revisi-tar la estimación (conforme se conoce más información) y revisarla cuando el cliente hace cambios a los requisitos.  26.2 E L PROCESO  DE PLANIFICACIÓN  DEL PROYECTO El objetivo de la planificación del proyecto de software es proporcionar un marco conceptual que permita al gerente hacer estimaciones razonables de recursos, costo y calendario. Además, las estimaciones deben intentar definir los escenarios de mejor caso y peor caso, de modo que los resultados del proyecto puedan acotarse. Aunque hay un grado inherente de incertidumbre, el equipo de software se embarca en un plan que se haya establecido como consecuencia de dichas tareas. Por tanto, el plan debe adaptarse y actualizarse conforme avanza el proyecto. En las siguientes secciones se estudia cada una de las acciones asociadas con la planificación del proyecto de software.Cita: “Es distintivo de una mente ins- truida descansar satisfecha con el grado de precisión que la naturaleza del sujeto admite, y no buscar exactitud cuando sólo es posible una aproximación a la verdad.” Aristóteles Mientas más conozca, mejor  estimará. En consecuencia, actualice sus estimaciones conforme avance el proyecto.CONSEJO  26.3 Á MBITO  Y FACTIBILIDAD  DEL SOFTWARE El ámbito del software describe las funciones y características que se entregan a los usuarios fi- nales; los datos que son entrada y salida; el “contenido” que se presenta a los usuarios como  consecuencia de usar el software y el desempeño, las restricciones, las interfaces y la confiabi-lidad que se ligan al sistema. El ámbito se define usando una de dos técnicas:1. Establecer ámbito del proyecto. 2. Determinar la factibilidad.3. Analizar los riesgos (capítulo 28). 4. Definir recursos requeridos. a) Determinar recursos humanos requeridos.  b) Definir recursos de software reutilizables.  c) Identificar recursos ambientales. 5. Estimar costo y esfuerzo. a) Descomponer el problema. b)  Desarrollar dos o más estimaciones usando tamaño, puntos de función, tareas de proceso o casos de uso.  c) Reconciliar las estimaciones. 6. Desarrollar un calendario del proyecto (capítulo 27). a) Establecer un conjunto de tareas significativas.  b) Definir una red de tareas.  c)  Usar herramientas de calendarización para desarrollar un cro-nograma.  d) Definir mecanismos de seguimiento de calendario.CONJUNTO  DE TAREAS Conjunto de tareas para planificación de proyectos 26Pressman(593-619).indd   59526Pressman(593-619).indd   595 21/1/10   10:55:5521/1/10   10:55:55