procesos en diferentes configuraciones y plataformas de forma repetida y continua. La capacidad de prueba, algo natural si aplica las tres leyes de TDD, implica cierto nivel de conectividad, lo que ofrece la compatibilidad necesaria para ejecutar código en distintas configuraciones. La probabilidad de detectar errores mejora si se toma el tiempo necesario para instrumentar su código. Puede hacerlo manualmente o mediante tecnologías automatizadas. Hágalo en las fases iniciales. Es aconsejable ejecutar el código basado en procesos durante el mayor tiempo posible antes de pasarlo a producción. Si adopta un enfoque limpio, aumentarán las probabilidades de hacerlo de forma correcta. Bibliografía [Lea99] :  Concurrent Programming in Java: Design Principles and Patterns , 2d. ed., Doug Lea, Prentice Hall, 1999. [PPP] :  Agile Software Development: Principles, Patterns, and Practices , Robert C. Martin, Prentice Hall, 2002. [PRAG] :  The Pragmatic Programmer , Andrew Hunt, Dave Thomas, Addison-Wesley, 2000. 254