50  Capítulo 2 ■ Procesos de software La diferencia principal entre el modelo en espiral con otros modelos de proceso de soft- ware es su reconocimiento explícito del riesgo. Un ciclo de la espiral comienza por elabo-rar objetivos como rendimiento y funcionalidad. Luego, se numeran formas alternativas de alcanzar dichos objetivos y de lidiar con las restricciones en cada uno de ellos. Cada alternativa se valora contra cada objetivo y se identifican las fuentes de riesgo del pro-yecto. El siguiente paso es resolver dichos riesgos, mediante actividades de recopilación de información, como análisis más detallado, creación de prototipos y simulación. Una vez valorados los riesgos se realiza cierto desarrollo, seguido por una actividad de planeación para la siguiente fase del proceso. De manera informal, el riesgo significa simplemente algo que podría salir mal. Por ejemplo, si la intención es usar un nuevo lenguaje de programación, un riesgo sería que los compiladores disponibles no sean con-fiables o no produzcan un código-objeto suficientemente eficaz. Los riesgos conducen a propuestas de cambios de software y a problemas de proyecto como exceso en las fechas y el costo, de manera que la minimización del riesgo es una actividad muy importante de administración del proyecto. En el capítulo 22 se tratará la gestión del riesgo, una parte esencial de la administración del proyecto.  2.4 El Proceso Unificado Racional El Proceso Unificado Racional (RUP, por las siglas de Rational Unified Process )  (Krutchen, 2003) es un ejemplo de un modelo de proceso moderno que se derivó del tra-bajo sobre el UML y el proceso asociado de desarrollo de software unificado (Rumbaugh et al., 1999; Arlow y Neustadt, 2005). Aquí se incluye una descripción, pues es un buen ejemplo de un modelo de proceso híbrido. Conjunta elementos de todos los modelos de proceso genéricos (sección 2.1), ilustra la buena práctica en especificación y diseño (sec-ción 2.2), y apoya la creación de prototipos y entrega incremental (sección 2.3). El RUP reconoce que los modelos de proceso convencionales presentan una sola visión del proceso. En contraste, el RUP por lo general se describe desde tres perspectivas: 1. Una perspectiva dinámica que muestra las fases del modelo a través del tiempo. 2. Una perspectiva estática que presenta las actividades del proceso que se establecen.3. Una perspectiva práctica que sugiere buenas prácticas a usar durante el proceso.  La mayoría de las descripciones del RUP buscan combinar las perspectivas estática  y dinámica en un solo diagrama (Krutchen, 2003). Esto hace que el proceso resulte más difícil de entender, por lo que en este texto se usan descripciones separadas de cada una de estas perspectivas. El RUP es un modelo en fases que identifica cuatro fases discretas en el proceso de software. Sin embargo, a diferencia del modelo en cascada, donde las fases se igualan con actividades del proceso, las fases en el RUP están más estrechamente vinculadas con la empresa que con las preocupaciones técnicas. La figura 2.11 muestra las fases del RUP. Éstas son: 1. Concepción La meta de la fase de concepción es establecer un caso empresarial  para el sistema. Deben identificarse todas las entidades externas (personas y sistemas)  M02_SOMMERVILLE_INGENIERIA_1ED_SE_027-055.indd   50M02_SOMMERVILLE_INGENIERIA_1ED_SE_027-055.indd   50 3/18/11   4:45:32 PM3/18/11   4:45:32 PM