28  Capítulo 2 ■ Procesos de software Un proceso de software es una serie de actividades relacionadas que conduce a la elabora- ción de un producto de software. Estas actividades pueden incluir el desarrollo de software desde cero en un lenguaje de programación estándar como Java o C. Sin embargo, las aplicaciones de negocios no se desarrollan precisamente de esta forma. El nuevo software empresarial con frecuencia ahora se desarrolla extendiendo y modificando los sistemas existentes, o configurando e integrando el software comercial o componentes del sistema. Existen muchos diferentes procesos de software, pero todos deben incluir cuatro acti-vidades que son fundamentales para la ingeniería de software: 1. Especificación del software Tienen que definirse tanto la funcionalidad del soft- ware como las restricciones de su operación. 2. Diseño e implementación del software Debe desarrollarse el software para cumplir con las especificaciones. 3. Validación del software Hay que validar el software para asegurarse de que cumple lo que el cliente quiere. 4. Evolución del software El software tiene que evolucionar para satisfacer las necesi-dades cambiantes del cliente.  En cierta forma, tales actividades forman parte de todos los procesos de software. Por supuesto, en la práctica éstas son actividades complejas en sí mismas e incluyen subactividades tales como la validación de requerimientos, el diseño arquitectónico, la prueba de unidad, etcétera. También existen actividades de soporte al proceso, como la documentación y el manejo de la configuración del software. Cuando los procesos se discuten y describen, por lo general se habla de actividades como especificar un modelo de datos, diseñar una interfaz de usuario, etcétera, así como del orden de dichas actividades. Sin embargo, al igual que las actividades, también las des-crip ciones de los procesos deben incluir: 1. Productos, que son los resultados de una actividad del proceso. Por ejemplo, el  resultado de la actividad del diseño arquitectónico es un modelo de la arquitectura  de software. 2. Roles, que reflejan las responsabilidades de la gente que interviene en el proceso.  Ejemplos de roles: gerente de proyecto, gerente de configuración, programador, etcétera. 3. Precondiciones y postcondiciones, que son declaraciones válidas antes y después de  que se realice una actividad del proceso o se cree un producto. Por ejemplo, antes de comenzar el diseño arquitectónico, una precondición es que el cliente haya apro-bado todos los requerimientos; después de terminar esta actividad, una postcondición podría ser que se revisen aquellos modelos UML que describen la arquitectura.  Los procesos de software son complejos y, como todos los procesos intelectuales y creativos, se apoyan en personas con capacidad de juzgar y tomar decisiones. No hay un proceso ideal; además, la mayoría de las organizaciones han diseñado sus propios procesos de desarrollo de software. Los procesos han evolucionado para beneficiarse de las capacidades de la gente en una organización y de las características específicas de los  M02_SOMMERVILLE_INGENIERIA_1ED_SE_027-055.indd   28M02_SOMMERVILLE_INGENIERIA_1ED_SE_027-055.indd   28 3/18/11   4:45:30 PM3/18/11   4:45:30 PM