295CAPÍTULO 12DISEÑO BASADO EN PATRONES CONCEPTOS  CLAVE   errores de diseño  . . . . . . . . 305 estructuras . . . . . . . . . . . . . 299fuerzas. . . . . . . . . . . . . . . . 296granularidad . . . . . . . . . . . . 314interfaz de usuario  . . . . . . . 310lenguajes del patrón  . . . . . . 300patrones arquitectónicos  . . . . . . . . . . 306 conductuales . . . . . . . . . . 298 creacional . . . . . . . . . . . . 298 estructural  . . . . . . . . . . . 298 generativo  . . . . . . . . . . . 297 nivel de componentes  . . . 308 webapps  . . . . . . . . . . . . . . 313 ¿Qué es? El diseño basado en patrones crea  una aplicación nueva, encontrando un conjunto de soluciones comprobadas para un conjun-to de problemas delineado con claridad. Cada  problema y su solución está descrito por un patrón de diseño catalogado y analizado por otros ingenieros de software que han encontrado el problema e implantado su solución cuando diseñaban otras aplicaciones. Cada pa-trón de diseño provee un enfoque demostrado para una parte del problema que debe resolverse. ¿Quién lo hace? Un ingeniero de software estudia cada  problema hallado para una nueva aplicación y después trata de encontrar una solución relevante, buscando en un depósito de patrones. ¿Por qué es importante? ¿Ha escuchado el lector la  frase “reinventar la rueda”? Eso pasa todo el tiempo en el desarrollo de software y representa una pérdida de tiempo y energía. Al utilizar patrones de diseño existentes, se ad-quiere una solución probada para un problema específico. A medida que se aplica cada patrón, las soluciones se integran y la aplicación que se va a elaborar se acerca más al diseño final.¿Cuáles son los pasos? El modelo de requerimientos se  estudia con objeto de despejar el conjunto jerárquico de problemas por resolver. Se divide el espacio de problemas de modo que sea posible identificar subconjuntos de pro-blemas asociados con funciones específicas del software. Los problemas también pueden organizarse por tipo: arquitectónicos, en el nivel de componentes, algorítmicos, de interfaz de usuario, etcétera. Una vez definido un sub-conjunto de problemas, se busca uno o más depósitos de patrones a fin de determinar si existe un patrón de diseño previo representado en un nivel de abstracción apropiado. Los patrones aplicables se adaptan a las necesidades espe-cíficas del software que se va a elaborar. La solución específica de problemas se aplica en situaciones en las que no se detectan patrones. ¿Cuál es el producto final? Se desarrolla un modelo del  diseño que ilustra la arquitectura del software, la interfaz de usuario y los detalles en el nivel de componentes. ¿Cómo me aseguro de que lo hice bien?  A medida  que cada patrón de diseño se traduce en cierto elemento del modelo del diseño, se revisan los productos del trabajo respecto de su claridad, corrección, completitud y consis-tencia con los requerimientos y con los demás patrones. UNA  MIRADA   RÁPIDATodos hemos encontrado un problema de diseño y pensamos en silencio: me pregunto si  alguien ha desarrollado una solución para esto… La respuesta casi siempre es sí. El pro- blema es encontrarla; luego, estar seguro de que en verdad se ajusta al problema en  cuestión, entender las limitaciones que restringen su aplicación y, por último, traducir la solu-ción propuesta al ambiente de diseño. Pero, ¿qué pasaría si la solución estuviera codificada de algún modo? ¿Qué ocurriría si hu- biera una manera estandarizada de describir un problema (de modo que destacara) y un método organizado para representar su solución? Con el empleo de un formato estándar, puede obser-varse que los problemas de software han sido codificados y descritos, igual que las soluciones (y sus restricciones) propuestas. Este método codificado se denomina patrones de diseño , se  emplea para describir problemas y sus soluciones y permite que la comunidad de la ingeniería de software aborde el conocimiento de diseño en forma tal que es posible reutilizarlo. La historia de los patrones de software no comienza con un científico de la computación, sino  con un arquitecto constructor, Christopher Alexander, quien reconoció que siempre que se di-señaba un edificio era reconocible un conjunto de problemas recurrentes. Definió éstos y sus soluciones como patrones, y los describió del modo siguiente [Ale77]: Cada patrón describe un problema que ocurre una y otra vez en nuestro ambiente, y luego describe el  núcleo de su solución en forma tal que es posible usarla un millón de veces sin elaborarla dos veces de la misma forma. 12Pressman(295-316).indd   29512Pressman(295-316).indd   295 14/1/10   16:23:3414/1/10   16:23:34