codeanalyzer.java. public class codeanalyzer implements javafileanalysis { private int linecount; private int maxlinewidth; private int widestlinenumber; private linewidthhistogram linewidthhistogram; private int totalchars; public codeanalyzer() { linewidthhistogram = new linewidthhistogram(); } public static list<file> findjavafiles(file parentdirectory) { list<file> files = new arraylist<file>(); findjavafiles(parentdirectory, files); return files; } private static void findjavafiles(file parentdirectory, list<file> files) { for (file file : parentdirectory.listfiles()) { if (file.getname().endswith(“.java”)) files.add(file); else if (file.isdirectory()) findjavafiles(file, files); } } public void analyzefile(file javafile) throws exception { bufferedreader br = new bufferedreader(new filereader(javafile)); string line; while ((line = br.readline()) != null) measureline(line); } private void measureline(string line) { linecount++; int linesize = line.length(); totalchars += linesize; linewidthhistogram.addline(linesize, linecount); recordwidestline(linesize); } private void recordwidestline(int linesize) { if (linesize > maxlinewidth) { maxlinewidth = linesize; widestlinenumber = linecount; } } public int getlinecount() { return linecount; } 132