58 PARTE UNO  EL PROCESO DEL SOFTWARE sombreada), lo que permite que el equipo de software haga cambios en una fase tardía de un  proyecto de software sin que haya un efecto notable en el costo y en el tiempo. El lector ya sabe que el proceso ágil incluye la entrega incremental. Cuando ésta se acopla con otras prácticas ágiles, como las pruebas unitarias continuas y la programación por parejas (que se estudia más adelante, en este capítulo), el costo de hacer un cambio disminuye. Aunque hay debate sobre el grado en el que se aplana la curva de costo, existen evidencias [Coc01a] que sugieren que es posible lograr una reducción significativa del costo.  3.3 ¿Q UÉ ES UN PROCESO  ÁGIL? Cualquier proceso del software ágil se caracteriza por la forma en la que aborda cierto número de suposiciones clave [Fow02] acerca de la mayoría de proyectos de software:  1. Es difícil predecir qué requerimientos de software persistirán y cuáles cambiarán. Tam- bién es difícil pronosticar cómo cambiarán las prioridades del cliente a medida que avanza el proyecto.  2. Para muchos tipos de software, el diseño y la construcción están imbricados. Es decir,  ambas actividades deben ejecutarse en forma simultánea, de modo que los modelos de diseño se prueben a medida que se crean. Es difícil predecir cuánto diseño se necesita antes de que se use la construcción para probar el diseño.  3. El análisis, el diseño, la construcción y las pruebas no son tan predecibles como nos  gustaría (desde un punto de vista de planeación). Dadas estas tres suposiciones, surge una pregunta importante: ¿cómo crear un proceso que pueda manejar lo impredecible? La respuesta, como ya se dijo, está en la adaptabilidad del pro-ceso (al cambio rápido del proyecto y a las condiciones técnicas). Por tanto, un proceso ágil debe ser adaptable. Pero la adaptación continua logra muy poco si no hay avance. Entonces, un proceso de soft- ware ágil debe adaptarse incrementalmente. Para lograr la adaptación incremental, un equipo ágil requiere retroalimentación con el cliente (de modo que sea posible hacer las adaptaciones apropiadas). Un catalizador eficaz para la retroalimentación con el cliente es un prototipo ope-rativo o una porción de un sistema operativo. Así, debe instituirse una estr ategia de desarrollo  incremental. Deben entregarse incrementos de software (prototipos ejecutables o porciones de un  sistema operativo) en periodos cortos de tiempo, de modo que la adaptación vaya a ritmo con el cambio (impredecible). Este enfoque iterativo permite que el cliente evalúe en forma regu-lar el incremento de software, dé la retroalimentación necesaria al equipo de software e influya en las adaptaciones del proceso que se realicen para aprovechar la retroalimentación. 3.3.1  Principios de agilidad La Alianza Ágil (véase [Agi03]), [Fow01]) define 12 principios de agilidad para aquellos que la quieran alcanzar:  1. La prioridad más alta es satisfacer al cliente a través de la entrega pronta y continua de  software valioso.  2. Son bienvenidos los requerimientos cambiantes, aun en una etapa avanzada del desa- rrollo. Los procesos ágiles dominan el cambio para pro vecho de la ventaja competitiva  del cliente.  3. Entregar con frecuencia software que funcione, de dos semanas a un par de meses, de  preferencia lo más pronto que se pueda.PUNTO CLAVE Un proceso ágil reduce el costo del  cambio porque el software se entrega en incrementos y en esta forma el cambio se controla mejor. WebRef En la dirección www.aanpo.org/ articles/index hay una colección completa de artículos sobre el proceso ágil. PUNTO CLAVE Aunque los procesos ágiles aceptan  el cambio, es importante examinar las razones de éste. 03Pressman(055-080).indd   5803Pressman(055-080).indd   58 14/1/10   13:41:0914/1/10   13:41:09