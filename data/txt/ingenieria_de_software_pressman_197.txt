166 parte dos modelado 7.3.1 identificar los eventos con el caso de uso en el capítulo 6 se aprendió que el caso de uso representa una secuencia de actividades que involucra a los actores y al sistema. en general, un evento ocurre siempre que el sistema y un actor intercambian información. en la sección 7.2.3 se dijo que un evento no es la información que se intercambia, sino el hecho de que se intercambió la información. un caso de uso se estudia para efectos del intercambio de información. para ilustrarlo, vol- vamos al caso de uso de una parte de la función de seguridad de casasegura. el propietario utiliza el teclado para escribir un password de cuatro dígitos. el password se compara con el password válido guardado en el sistema. si el password es incorrecto, el panel de control emi-tirá un sonido una vez y se reiniciará para recibir entradas adicionales. si el password es correcto, el panel de control queda en espera de otras acciones. las partes subrayadas del escenario del caso de uso indican eventos. debe identificarse un actor para cada evento, anotarse la información que se intercambia y enlistarse cualesquiera condi-ciones o restricciones. como ejemplo de evento común considere la frase subrayada en el caso de uso “el propieta- rio utiliza el teclado para escribir un password de cuatro dígitos”. en el contexto del modelo de los requerimientos, el objeto propietariodecasa 7 transmite un evento al objeto paneldecon- trol. el evento tal vez se llame password introducido. la información que se transfiere son los cuatro dígitos que constituyen el password, pero ésta no es una parte esencial del modelo de comportamiento. es importante observar que ciertos eventos tienen un efecto explícito en el flujo del control del caso de uso, mientras que otros no lo tienen. por ejemplo, el evento pas- sword introducido no cambia explícitamente el flujo del control del caso de uso, pero los resul-tados del evento password comparado (derivado de la interacción el “password se compara con el password válido guardado en el sistema”) tendrán un efecto explícito en el flujo de informa-ción y control del software casasegura. una vez identificados todos los eventos, se asignan a los objetos involucrados. los objetos son responsables de la generación de eventos (por ejemplo, propietario genera el evento pas- sword introducido) o de reconocer los eventos que hayan ocurrido en cualquier lugar ( panelde- control reconoce el resultado binario del evento password comparado). 7.3.2 representaciones de estado en el contexto del modelado del comportamiento deben considerarse dos caracterizaciones diferentes de los estados: 1) el estado de cada clase cuando el sistema ejecuta su función y 2) el estado del sistema según se observa desde el exterior cuando realiza su función. 8 el estado de una clase tiene características tanto pasivas como activas [cha93]. un estado pasivo es sencillamente el estado actual de todos los atributos de un objeto. por ejemplo, el es- tado pasivo de la clase jugador (en la aplicación de juego de video que se vio en el capítulo 6) incluiría los atributos actuales posición y orientación de jugador, así como otras caracterís- ticas de éste que sean relevantes para el juego (por ejemplo, un atributo que incluya deseos mágicos restantes). el estado activo de un objeto indica el estado actual del objeto conforme pasa por una transformación o procesamiento continuos. la clase jugador tal vez tenga los siguientes estados activos: moverse, en descanso, herido, en curación, atrapado, perdido , etc. debe ocurrir un evento (en ocasiones llamado disparador o trigger) para forzar a un objeto a hacer una transición de un estado activo a otro. 7 en este ejemplo se supone que cada usuario (propietario) que interactúe con casasegura tiene un password de identificación, por lo que es un objeto legítimo. 8 los diagramas de estado presentados en el capítulo 6 y en la sección 7.3.2 ilustran el estado del sistema. en esta sección, nuestro análisis se centrará en el estado de cada clase dentro del modelo del análisis.punto clave el sistema tiene estados que representan un comportamiento específico observable desde el exterior; una clase tiene estados que representan su comportamiento cuando el sistema realiza sus funciones. 07pressman(158-182).indd  16607pressman(158-182).indd  166 14/1/10  14:19:3914/1/10  14:19:39