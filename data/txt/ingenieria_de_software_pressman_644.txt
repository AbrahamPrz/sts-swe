CAPÍTULO 26  ESTIMACIÓN PARA PROYECTOS DE SOFTWARE 613  3a. El esfuerzo requerido por cada tarea se estima por separado. Nota: La estimación puede  basarse en datos históricos, un modelo empírico o la “experiencia”.  3b. De manera alternativa, el “volumen” del escenario puede estimarse en LOC, PF o alguna  otra medida orientada a volumen (por ejemplo, conteo de casos de uso).  4a. Las estimaciones para cada tarea se suman a fin de crear una estimación para el esce- nario.  4b. De manera alternativa, la estimación de volumen para el escenario se traduce en es- fuerzo, usando datos históricos.  5. Las estimaciones de esfuerzo para todos los escenarios que se implementan para un in- cremento de software determinado se suman a fin de desarrollar la estimación del es- fuerzo para el incremento. Puesto que la duración del proyecto requerido para el desarrollo de un incremento de software  es muy corta (por lo general de tres a seis semanas), este enfoque de estimación tiene dos pro-pósitos: 1) asegurarse de que el número de escenarios que se van a incluir en el incremento se ajusta a los recursos disponibles y 2) establecer una base para asignar esfuerzo conforme se desarrolla el incremento. 26.9.2  Estimación para webapp Los webapps adoptan con frecuencia el modelo de proceso ágil. Puede usarse una medida de  punto de función modificada, junto con los pasos que se destacan en la sección 26.9.1, a fin de desarrollar una estimación para la webapp. Roetzheim [Roe00] sugiere el siguiente enfoque  cuando adapta puntos de función para estimación de webapps: •  Entradas son cada pantalla o formulario de entrada (por ejemplo, CGI o Java), cada pantalla de man- tenimiento y, si usa una metáfora de etiquetas de libreta, cualquier etiqueta. •  Salidas son cada página web estática, cada guión de página web dinámica (por ejemplo, ASP, ISAPI u otro guión DHTML) y cada reporte (ya sea basado en web o administrativo por naturaleza). •  Tablas son cada tabla lógica en la base de datos más, si usa XML para almacenar datos en un archivo, cada objeto XML (o colección de atributos XML). •  Las interfaces conservan su definición como archivos lógicos (por ejemplo, formatos de registro  único) dentro de las fronteras del sistema. •  Consultas son cada una de las publicaciones externas o el uso de una interfaz orientada a mensaje. Un ejemplo usual son las referencias externas DCOM o COM. Los puntos de función (interpretados en la forma señalada) son un indicador razonable de vo- lumen para una webapp. Mendes et al.  [Men01] sugieren que el volumen de una webapp se determina mejor al reco- lectar medidas (llamadas “variables predictoras”) asociadas con la aplicación (por ejemplo, conteo de página, conteo de medios, conteo de función), características de su página web (por ejemplo, complejidad de página, complejidad de vinculación, complejidad gráfica), característi-cas de medios (por ejemplo, duración de los medios) y características funcionales (por ejemplo, longitud de código, longitud de código reutilizado). Dichas medidas pueden usarse para desa-rrollar modelos de estimación empíricos para esfuerzo de proyecto total, esfuerzo de autoría de página, esfuerzo de autoría de medios y esfuerzo de guiones. Sin embargo, todavía falta trabajo por hacer antes de que tales modelos puedan usarse con confianza.PUNTO CLAVE En el contexto de la estimación para  proyectos ágiles, “volumen” es una estimación del tamaño global de un escenario de usuario en LOC o PF . 26Pressman(593-619).indd   61326Pressman(593-619).indd   613 21/1/10   10:56:0021/1/10   10:56:00