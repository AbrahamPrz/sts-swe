capítulo 12 diseño basado en patrones 315 12.7 r esumen los patrones de diseño dan un mecanismo codificado para describir problemas y su solución en forma tal que permiten que la comunidad de ingeniería de software diseñe el conocimiento para que sea reutilizado. un patrón describe un problema, indica el contexto y permite que el usuario entienda el ambiente en el que sucede el problema, y enlista un sistema de fuerzas que indican cómo puede interpretarse el problema en su contexto, y el modo en el que se aplica la solución. en el trabajo de la ingeniería de software se identifican y documentan patrones generativos que describen un aspecto importante y repetible de un sistema para después proporcionar la manera de elaborar dicho aspecto dentro de un sistema de fuerzas que es único para un contexto deter-minado. los patrones arquitectónicos describen problemas de diseño amplios que se resuelven con un enfoque estructural. los patrones de datos describen problemas recurrentes orientados a datos y las soluciones para modelar éstos que se utilizan para resolverlos. los patrones de com-ponentes (también conocidos como patrones de diseño) se abocan a problemas asociados con el desarrollo de subsistemas y componentes, la manera en la que se comunican entre sí y su ubicación en una arquitectura mayor. los patrones de diseño de interfaces describen problemas comunes de la interfaz de usuario y su solución con un sistema de fuerzas que incluye las ca-racterísticas específicas de los usuarios finales. los patrones de webapps se enfrentan a un conjunto de problemas que surgen cuando se construyen webapps, y es frecuente que incorpo-ren muchas categorías de los patrones mencionados. una estructura proporciona el marco en el que residen los patrones y los idiomas describen los detalles de implementación específicos del lenguaje de programación para un algoritmo, o parte de él, o para una estructura de datos específica. para hacer las descripciones de patrones, se emplea un formato o plantilla estándar. un lenguaje de patrón incluye un conjunto de patrones, cada uno de los cuales es descrito con el empleo de una plantilla estándar e interrelacionada para que muestre cómo colaboran los patrones para resolver problemas en el dominio de la aplicación. el diseño basado en patrones se utiliza junto con métodos de diseño arquitectónico, en el nivel de componentes y de interfaz de usuario. el enfoque del diseño comienza con el estudio del modelo de requerimientos a fin de detectar los problemas, definir el contexto y describir el sistema de fuerzas. a continuación se buscan los lenguajes de patrón para el dominio del pro-blema con objeto de determinar si existen patrones para los problemas detectados. una vez que se han encontrado los patrones apropiados, se usan como guía para el diseño.  problemas y puntos por evaluar 12.1. analice las tres “partes” de un patrón de diseño y dé un ejemplo concreto de cada uno en algún campo distinto del software. 12.2. ¿cuál es la diferencia entre un patrón no generativo y uno generativo?12.3. ¿en qué difieren los patrones arquitectónicos de los patrones de componentes?12.4. ¿qué es estructura y en qué difiere de un patrón? ¿qué es un idioma y en qué se diferencia de un patrón? 12.5. con el uso de la plantilla de diseño de patrones presentada en la sección 12.1.3, desarrolle la descrip- ción completa de un patrón sugerido por su profesor. 12.6. desarrolle un lenguaje de esqueleto de patrón para un deporte con el que esté familiarizado. co- mience por abordar el contexto, el sistema de fuerzas y los problemas amplios que deban resolver un entre-nador y su equipo. sólo necesita especificar los nombres de los patrones y hacer la descripción frase por frase de cada uno. 12pressman(295-316).indd  31512pressman(295-316).indd  315 14/1/10  16:23:3914/1/10  16:23:39