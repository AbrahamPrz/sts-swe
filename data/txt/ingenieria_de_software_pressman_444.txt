CAPÍTULO 18  PRUEBA DE APLICACIONES CONVENCIONALES 413 Una buena prueba tiene una alta probabilidad de encontrar un error. Para lograr esta meta, el  examinador debe comprender el software e intentar desarrollar una imagen mental de cómo  puede fallar. De manera ideal, se prueban las clases de fallas. Por ejemplo, una clase de fallas potenciales en una interfaz gráfica de usuario es la falla para reconocer la posición adecuada del ratón. Se diseña entonces un conjunto de pruebas para revisar el ratón con la intención de demostrar un error en el reconocimiento de la posición del ratón. Una buena prueba no es redundante. El tiempo y los recursos de la prueba son limitados. No  se trata de realizar una prueba que tenga el mismo propósito que otra. Cada una debe tener un propósito diferente (incluso si es sutilmente diferente). Una buena prueba debe ser “la mejor de la camada”  [Kan93]. En un grupo de pruebas que  tengan una intención similar, las limitaciones de tiempo y recursos pueden mitigar la ejecu-ción de sólo un subconjunto de dichas pruebas. En tales casos, debe usarse la prueba que tenga la mayor probabilidad de descubrir toda una clase de errores. Una buena prueba no debe ser demasiado simple o demasiado compleja.  Aunque en ocasio- nes es posible combinar una serie de pruebas en un caso de prueba, los efectos colaterales posibles asociados con este enfoque pueden enmascarar errores. En general, cada prueba debe ejecutarse por separado.¿Qué es una “buena”  prueba?? La escena: Cubículo de Vinod. Participantes: Vinod y Ed, miembros del equipo  de ingeniería de software CasaSegura.La conversación:Vinod: Así que éstos son los casos de prueba que quieres aplicar  para la operación passwordValidation. Ed: Sí, deben cubrir muchas de las posibilidades para los tipos de  contraseñas que pueda ingresar un usuario. Vinod: Veamos... observas que la contraseña correcta será 8080,  ¿verdad? Ed: Ajá.Vinod: ¿Y especificas las contraseñas 1234 y 6789 para probar el  error en el reconocimiento de las contraseñas inválidas? Ed: Exacto, y también pruebo las contraseñas que están cerca de la  contraseña correcta, a ver... 8081 y 8180.Vinod: Ésos están bien, pero no le veo mucho caso aplicar las entradas 1234 y 6789. Son redundantes... prueban la misma cosa, ¿o no? Ed: Bueno, son valores diferentes.Vinod: Es cierto, pero si 1234 no descubre un error... en otras  palabras... la operación passwordValidation detecta que es una con-traseña inválida, no es probable que 6789 nos muestre algo nuevo. Ed: Ya veo lo que dices.Vinod: No intento ser quisquilloso... es sólo que tenemos tiempo  limitado para hacer las pruebas, así que es buena idea aplicar prue-bas que tengan una alta probabilidad de encontrar nuevos errores. Ed: No hay problema... Pensaré en esto un poco más.CASASEGURA Diseño de pruebas únicas  18.2 V ISIONES  INTERNA  Y EXTERNA  DE LAS PRUEBAS Cualquier producto sometido a ingeniería (y la mayoría de otras cosas) pueden probarse en una  de dos formas: 1) al conocer la función específica que se asignó a un producto para su realiza-ción, pueden llevarse a cabo pruebas que demuestren que cada función es completamente operativa mientras al mismo tiempo se buscan errores en cada función, 2) al conocer el funcio-namiento interno de un producto, pueden realizarse pruebas para garantizar que “todos los engranes embonan”; es decir, que las operaciones internas se realizan de acuerdo con las espe-cificaciones y que todos los componentes internos se revisaron de manera adecuada. El primer Cita: “Sólo hay una regla en el diseño  de casos de prueba: cubrir todas las características, mas no hacer demasiados casos de prueba.” Tsuneo Yamaura 18Pressman(411-436).indd   41318Pressman(411-436).indd   413 21/1/10   10:58:5421/1/10   10:58:54