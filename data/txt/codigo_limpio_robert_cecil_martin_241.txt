el código del servlet sólo use variables locales, es imposible que cause problemas de sincronización. Evidentemente, muchas aplicaciones que usan servlet  se topan con recursos compartidos como conexiones de base de datos. Recomendación :  Intente dividir los datos en subconjuntos independientes que se puedan procesar en procesos independientes, posiblemente en distintos procesadores . Conocer las bibliotecas Java 5 ofrece muchas mejoras para el desarrollo concurrente con respecto a versiones anteriores. Existen diversos aspectos que tener en cuenta a la hora de crear código de procesos en Java 5: Usar las colecciones compatibles con procesos proporcionadas. Usar la estructura de ejecución de tareas no relacionadas. Usar soluciones antibloqueo siempre que sea posible. Varias clases de bibliotecas no son compatibles con procesos. Colecciones compatibles con procesos En los albores de Java, Doug Lea escribió el conocido libro [81]   Concurrent Programming in Java . Al mismo tiempo, desarrolló varias colecciones compatibles con procesos, que posteriormente pasaron a formar parte del JDK en el paquete  java.util.concurrent . Las colecciones de dicho paquete son compatibles con casos de procesos múltiples y tienen un rendimiento adecuado. De hecho, la implementación  ConcurrentHashMap  tiene mejor rendimiento que  HashMap  en la mayoría de los casos. También permite lecturas y escrituras simultáneas, y dispone de métodos que admiten operaciones de composición habituales que en caso contrario serian incompatibles con subprocesos. Si Java 5 es su entorno de desarrollo, comience con  ConcurrentHashMap . 242