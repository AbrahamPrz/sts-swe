CAPÍTULO 20  PRUEBA DE APLICACIONES WEB 467 web a una condición de error. El propósito es descubrir los errores que ocurren durante la ma- nipulación del error (por ejemplo, mensajes de error incorrectos o inexistentes, falla de la web- app como consecuencia del error, salida errónea activada por entrada errónea, efectos colate-rales que se relacionan con el procesamiento de componentes). Cada caso de prueba en el nivel componente especifica todos los valores de entrada y salida  que se espera que proporcione el componente. La salida real producida como consecuencia de la prueba se registra para futuras referencias durante el soporte y el mantenimiento. En muchas situaciones, la ejecución correcta de la función de una webapp se liga a la interfaz  adecuada con una base de datos que puede ser externa a la webapp. Por tanto, la prueba de base  de datos se convierte en parte integral del régimen de prueba de componente.  20.6 P RUEBA  DE NAVEGACIÓN Un usuario viaja a través de una webapp en forma muy parecida a como un visitante camina a través de una tienda o de un museo. Existen muchas rutas que pueden tomarse, muchas paradas que pueden realizarse, muchas cosas que aprender y mirar, actividades por iniciar y decisiones por tomar. Este proceso de navegación es predecible porque cada visitante tiene un conjunto de objetivos cuando llega. Al mismo tiempo, el proceso de navegación puede ser impredecible porque el visitante, influido por algo que ve o aprende, puede elegir una ruta o iniciar una acción que no es usual conforme el objetivo original. La labor de la prueba de navegación es 1) garan-tizar que son funcionales todos los mecanismos que permiten al usuario de la webapp recorrerla  y 2) validar que cada unidad semántica de navegación (USN) pueda lograr la categoría de usua-rio apropiada. 20.6.1  Prueba de sintaxis de navegación La primera fase de la prueba de navegación en realidad comienza durante la prueba de interfaz. Los mecanismos de navegación se prueban para asegurarse de que cada interfaz realiza la función que se le ha encargado. Splaine y Jaskiel [Spl01] sugieren que debe probarse cada uno de los siguientes mecanismos de navegación: • Vínculos de navegación: estos mecanismos incluyen vínculos internos dentro de la webapp, vínculos externos hacia otras webapps y anclas dentro de una página web espe- cífica. Cada vínculo debe ser probado para asegurarse de que se alcanza el contenido o funcionalidad adecuados cuando se elige el vínculo. • Redirecciones: estos vínculos entran en juego cuando un usuario solicita una URL inexis-tente o cuando selecciona un vínculo cuyo contenido se removió o cuyo nombre cambió. Se despliega un mensaje para el usuario y la navegación se redirige hacia otra página (por ejemplo, la página de inicio). Los redireccionamientos deben probarse al solicitar vínculos internos incorrectos o URL externas y debe valorarse cómo maneja la webapp estas solicitudes. • Marcas de página (favoritos, bookmarks): aunque las marcas de página son función del navegador, la webapp debe probarse para garantizar la extracción de un título de página significativo conforme se crea la marca. • Marcos y framesets: cada marco incluye el contenido de una página web específica; un frameset contiene múltiples marcos y habilita el despliegue de múltiples páginas web al mismo tiempo. Puesto que es posible anidar marcos y framesets unos dentro de otros, estos mecanismos de navegación y despliegue deben probarse para que tengan el contenido correcto, la plantilla y tamaño adecuados, rendimiento de descargas y compa-tibilidad de navegador.Cita: “No estamos perdidos. Tenemos  un desafío posicional.” John M. Ford 20Pressman(453-477).indd   46720Pressman(453-477).indd   467 21/1/10   10:58:1021/1/10   10:58:10