102 PARTE DOS  MODELADO Es razonable afirmar que las técnicas que se estudiarán en este capítulo no son una “solu- ción” verdadera para los retos que se mencionaron, pero sí proveen de un enfoque sólido para  enfrentarlos.  5.1 INGENIERÍA  DE REQUERIMIENTOS El diseño y construcción de software de computadora es difícil, creativo y sencillamente diver-tido. En realidad, elaborar software es tan atractivo que muchos desarrolladores de software quieren ir directo a él antes de haber tenido el entendimiento claro de lo que se necesita. Argu-mentan que las cosas se aclararán a medida que lo elaboren, que los participantes en el proyecto podrán comprender sus necesidades sólo después de estudiar las primeras iteraciones del soft-ware, que las cosas cambian tan rápido que cualquier intento de entender los requerimientos en detalle es una pérdida de tiempo, que las utilidades salen de la producción de un programa que funcione y que todo lo demás es secundario. Lo que hace que estos argumentos sean tan seductores es que tienen algunos elementos de verdad. 1 Pero todos son erróneos y pueden llevar  un proyecto de software al fracaso. El espectro amplio de tareas y técnicas que llevan a entender los requerimientos se denomina  ingeniería de requerimientos. Desde la perspectiva del proceso del software, la ingeniería de re-querimientos es una de las acciones importantes de la ingeniería de software que comienza durante la actividad de comunicación y continúa en la de modelado. Debe adaptarse a las ne-cesidades del proceso, del proyecto, del producto y de las personas que hacen el trabajo. La ingeniería de requerimientos tiende un puente para el diseño y la construcción. Pero,  ¿dónde se origina el puente? Podría argumentarse que principia en los pies de los participantes en el proyecto (por ejemplo, gerentes, clientes y usuarios), donde se definen las necesidades del negocio, se describen los escenarios de uso, se delinean las funciones y características y se identifican las restricciones del proyecto. Otros tal vez sugieran que empieza con una definición más amplia del sistema, donde el software no es más que un componente del dominio del sis-tema mayor. Pero sin importar el punto de arranque, el recorrido por el puente lo lleva a uno muy alto sobre el proyecto, lo que le permite examinar el contexto del trabajo de software que debe realizarse; las necesidades específicas que deben abordar el diseño y la construcción; las prioridades que guían el orden en el que se efectúa el trabajo, y la información, las funciones y los comportamientos que tendrán un profundo efecto en el diseño resultante. La ingeniería de requerimientos proporciona el mecanismo apropiado para entender lo que  desea el cliente, analizar las necesidades, evaluar la factibilidad, negociar una solución razona-ble, especificar la solución sin ambigüedades, validar la especificación y administrar los reque-rimientos a medida de que se transforman en un sistema funcional [Tha97]. Incluye siete tareas diferentes: concepción, indagación, elaboración, negociación, especificación, validación y ad-ministración. Es importante notar que algunas de estas tareas ocurren en paralelo y que todas se adaptan a las necesidades del proyecto. Concepción.  ¿Cómo inicia un proyecto de software? ¿Existe un solo evento que se con  vierte  en el catalizador de un nuevo sistema o producto basado en computadora o la necesidad evo-luciona en el tiempo? No hay respuestas definitivas a estas preguntas. En ciertos casos, una conversación casual es todo lo que se necesita para desencadenar un trabajo grande de inge-niería de software. Pero en general, la mayor parte de proyectos comienzan cuando se identifica una necesidad del negocio o se descubre un nuevo mercado o servicio potencial. Los partici- 1 Esto es cierto en particular para los proyectos pequeños (menos de un mes) y muy pequeños, que requieren re- lativamente poco esfuerzo de software sencillo. A medida que el software crece en tamaño y complejidad, estos  argumentos comienzan a ser falsos.Cita: “La parte más difícil al construir  un sistema de software es deci-dir qué construir. Ninguna parte del trabajo invalida tanto al sis-tema resultante si ésta se hace mal. Nada es más difícil de corregir después.” Fred Brooks PUNTO CLAVE La ingeniería de requerimientos  establece una base sólida para el diseño y la construcción. Sin ésta, el software resultante tiene alta probabilidad de no satisfacer las necesidades del cliente. Cita: “Las semillas de los desastres enormes del software por lo general se vislumbran en los tres primeros meses del inicio del proyecto.” Coper JonesEspere hacer un poco de diseño al  recabar los requerimientos, y un poco de requerimientos durante el trabajo de diseño.CONSEJO 05Pressman(101-125).indd   10205Pressman(101-125).indd   102 21/1/10   11:00:1921/1/10   11:00:19