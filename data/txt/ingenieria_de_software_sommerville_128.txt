4.7 ■ Administración de requerimientos  111  Hay algunas técnicas de validación de requerimientos que se usan individualmente o  en conjunto con otras: 1. Revisiones de requerimientos  Los requerimientos se analizan sistemáticamente  usando un equipo de revisores que verifican errores e inconsistencias. 2. Creación de prototipos En esta aproximación a la validación, se muestra un modelo  ejecutable del sistema en cuestión a los usuarios finales y clientes. Así, ellos podrán experimentar con este modelo para constatar si cubre sus necesidades reales. 3. Generación de casos de prueba  Los requerimientos deben ser comprobables. Si  las pruebas para los requerimientos se diseñan como parte del proceso de validación, esto revela con frecuencia problemas en los requerimientos. Si una prueba es difícil o imposible de diseñar, esto generalmente significa que los requerimientos serán difíciles de implementar, por lo que deberían reconsiderarse. El desarrollo de prue-bas a partir de los requerimientos del usuario antes de escribir cualquier código es una pieza integral de la programación extrema.  No hay que subestimar los problemas incluidos en la validación de requerimientos. A final de cuentas, es difícil demostrar que un conjunto de requerimientos, de hecho, no cubre las necesidades de los usuarios. Estos últimos necesitan una imagen del sistema en operación, así como comprender la forma en que dicho sistema se ajustará a su trabajo. Es difícil, incluso para profesionales de la computación experimentados, realizar este tipo de análisis abstracto, y más aún para los usuarios del sistema. Como resultado, rara vez usted encontrará todos los problemas de requerimientos durante el proceso de validación de requerimientos. Es inevitable que haya más cambios en los requerimientos para corregir omisiones y malas interpretaciones, después de acordar el documento de requerimientos.  4.7 Administración de requerimientos Los requerimientos para los grandes sistemas de software siempre cambian. Una razón es que dichos sistemas se desarrollaron por lo general para resolver problemas “horrorosos”: aquellos problemas que no se pueden definir por completo. Como el problema no se logra definir por completo, los requerimientos del software están condenados también a estar incompletos. Durante el proceso de software, la comprensión que los participantes tienen de los problemas cambia constantemente (figura 4.17). Entonces, los requerimientos del sistema también deben evolucionar para reflejar esa visión cambiante del problema.TiempoCambio en la comprensión del problemaComprensión inicial del problema Cambio en  los requerimientosRequerimientos inicialesFigura 4.17  Evolución de los requerimientos M04_SOMMERVILLE_INGENIERIA_1ED_SE_082-117.indd   111M04_SOMMERVILLE_INGENIERIA_1ED_SE_082-117.indd   111 3/18/11   4:47:16 PM3/18/11   4:47:16 PM