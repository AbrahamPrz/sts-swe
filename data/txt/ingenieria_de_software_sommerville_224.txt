Boehm, pionero de la ingeniería de software, expresó de manera breve la diferencia entre  las dos (Boehm, 1979): ■ “Validación: ¿construimos el producto correcto?”. ■ “Verificación: ¿construimos bien el producto?”.  Los procesos de verificación y validación buscan comprobar que el software por desa-rrollar cumpla con sus especificaciones, y brinde la funcionalidad deseada por las perso-nas que pagan por el software. Dichos procesos de comprobación comienzan tan pronto como están disponibles los requerimientos y continúan a través de todas las etapas del proceso de desarrollo. La finalidad de la verificación es comprobar que el software cumpla con su funciona-lidad y con los requerimientos no funcionales establecidos. Sin embargo, la validación es un proceso más general. La meta de la validación es garantizar que el software cumpla con las expectativas del cliente. Va más allá del simple hecho de comprobar la confor-midad con la especificación, para demostrar que el software hace lo que el cliente espera que haga. La validación es esencial pues, como se estudió en el capítulo 4, las especifi-caciones de requerimientos no siempre reflejan los deseos o las necesidades reales de los clientes y usuarios del sistema. El objetivo final de los procesos de verificación y validación es establecer confianza de que el sistema de software es “adecuado”. Esto significa que el sistema tiene que ser lo bas-tante eficaz para su uso esperado. El nivel de confianza adquirido depende tanto del pro pó-si to del sistema y las expectativas de los usuarios del sistema, como del entorno del me rca do actual para el sistema: 1. Propósito del software Cuanto más crítico sea el software, más importante debe  ser su confiabilidad. Por ejemplo, el nivel de confianza requerido para que se use el software en el control de un sistema crítico de seguridad es mucho mayor que el requerido para un prototipo desarrollado para demostrar nuevas ideas del producto. 2. Expectativas del usuario Debido a su experiencia con software no confiable y pla-gado de errores, muchos usuarios tienen pocas expectativas de la calidad del software, por lo que no se sorprenden cuando éste falla. Al instalar un sistema, los usuarios Salida de resultados de pruebaSalidas que revelan presencia dedefectosOeEntrada de datos  de prueba SistemaEntradas que provocancomportamientoanómalo Ie Figura 8.1 Modelo de  entrada y salida de una  prueba de programaCapítulo 8 ■ Pruebas de software  207 M08_SOMMERVILLE_INGENIERIA_1ED_SE_205-233.indd   207M08_SOMMERVILLE_INGENIERIA_1ED_SE_205-233.indd   207 3/18/11   5:39:58 PM3/18/11   5:39:58 PM