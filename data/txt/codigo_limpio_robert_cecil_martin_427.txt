04: public int takenextid() { 05: return nextid++; 06: } 07: } veamos la descripción de una prueba que lo demuestre: recordar el valor actual de nextid . crear dos subprocesos y que cada uno invoque takenextid() una vez. comprobar que el valor de nextid es dos más que el inicial. ejecutar hasta demostrar que nextid sólo se ha incrementado en uno y no en dos. en el listado a-2 se reproduce la prueba: listado a-2 classwiththreadingproblemtest.java. 01: package example; 02: 03: import static org.junit.assert.fail; 04: 05: import org.junit.test; 06: 07: public class classwiththreadingproblemtest { 08: @test 09: public void twothreadsshouldfaileventually() throws exception { 10: final classwiththreadingproblem classwiththreadingproblem = new classwiththreadingproblem(); 11: 12: runnable runnable = new runnable() { 13: public void run() { 14: classwiththreadingproblem.takenextid(); 15: } 16: }; 17: 18: for (int i = 0; i < 50000; ++i) { 19: int startingid = classwiththreadingproblem.lastid; 20: int expectedresult = 2 + startingid; 21: 22: thread t1 = new thread(runnable); 428