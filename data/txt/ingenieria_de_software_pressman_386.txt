capítulo 15 técnicas de revisión 355 15.1 e fecto de los defectos del software en el costo en el contexto del proceso del software, los términos defecto y falla son sinónimos. los dos im- plican un problema de calidad descubierto después de haberse liberado el software a los usua- rios finales (o a otra actividad estructural del proceso del software). en capítulos anteriores se empleó el término error para denotar un problema de calidad descubierto por ingenieros de software (o de otra clase) antes de entregar el software al usuario final (o a alguna actividad estructural del proceso del software).sión. sin embargo, en este libro nos centramos en las revisiones técnicas o por pares, ejemplifi- cadas por las revisiones casuales, walkthroughs e inspecciones. desde el punto de vista del con- trol de calidad, una revisión técnica (rt) es el filtro más eficaz. realizado por ingenieros de software (y de otro tipo) para ingenieros de software, la rt es un medio eficaz para detectar errores y mejorar la calidad. 1 si se considera una mejora en el proceso del software, un problema de calidad que se propague de una actividad estructural del proceso (como el modelado) a otra (como la construcción) también se llama “defecto”, porque debe encontrarse el problema antes de que un producto del trabajo (como un modelo del diseño) se “libere” a la siguiente actividad.la meta del control de calidad del software, y en un senti- do más amplio de la administración de la calidad en gene- ral, es eliminar los problemas de calidad que se encuentren en el soft-ware. se hace referencia a estos problemas con diferentes nombres: equivocaciones, fallas, errores o defectos, por mencionar algunos. ¿son sinónimos estos términos o hay diferencias sutiles entre ellos? en este libro se hace una distinción clara entre un error (problema de calidad que se detecta antes de que el software se entregue a los usuarios finales) y un defecto (problema de calidad que se encuentra después de haber entregado el software a los usuarios finales 1). esta distinción se hace porque los errores y defectos tienen muy distinto efecto económico, empresarial, sicológico y humano. como ingenie-ros de software, queremos encontrar y corregir tantos errores como sea posible antes de que el consumidor o el usuario final los encuen-tren. queremos evitar los defectos porque hacen (justificadamente) que el personal de software se vea mal. sin embargo, es importante observar que la distinción temporal entre errores y defectos que se hace en este libro no constituye la prin-cipal forma de pensar. el consenso general de la comunidad de inge-niería de software es que defectos, errores, fallas y equivocaciones son sinónimos. es decir, el punto en el tiempo en el que se encontró el problema no tiene que ver con el término que se usa para describirlo. parte de la argumentación a favor de este punto de vista es que en ocasiones es difícil hacer una distinción clara entre el antes y el des-pués de la liberación (por ejemplo, considere un proceso incremental en un desarrollo ágil). sin que importe el modo en el que se elija interpretar estos térmi- nos, hay que reconocer que el momento en el que se descubre un problema sí importa, y que los ingenieros de software deben tratar de detectar con ahínco —con mucho ahínco— los problemas antes de que sus clientes y usuarios finales los encuentren. si el lector está más interesado en este tema, puede hallar un análisis razonablemente completo de la terminología acerca de las “equivocaciones” en la dirección www.softwaredevelopment.ca/bugs.shtmlinformación equivocaciones, errores y defectos el objetivo principal de las revisiones técnicas es encontrar errores durante el proceso a fin de que no se conviertan en defectos después de liberar el software. el beneficio obvio de las revisiones técnicas es el descubrimiento temprano de los errores, de modo que no se propaguen a la siguiente etapa del proceso del software. varios estudios de la industria indican que las actividades de diseño introducen de 50 a 65 por ciento de todos los errores (y en realidad de todos los defectos) durante el proceso del soft-ware. sin embargo, las técnicas de revisión han demostrado tener una eficacia de hasta 75 por ciento [jon86] para descubrir fallas del diseño. al detectar y eliminar un gran porcentaje de estos el objetivo principal de una revisión técnica formal es detectar los errores antes de que pasen a otra actividad de la ingeniería de software o de que se entreguen al usuario final.consejo 15pressman(354-367).indd  35515pressman(354-367).indd  355 14/1/10  16:53:4314/1/10  16:53:43