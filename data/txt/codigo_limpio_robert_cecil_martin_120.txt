que en una clase bien diseñada se usan en muchos sino en todos sus métodos. Existen discrepancias sobre la ubicación de las variables de instancia. En C++ suele aplicarse la denominada regla de las tijeras, que sitúa todas las variables de instancia en la parte inferior. En Java, sin embargo, es habitual ubicarlas en la parte superior de la clase. No veo motivos para no hacerlo. Lo importante es declarar las variables de instancia en un punto conocido para que todo el mundo sepa dónde buscarlas. Fíjese en el extraño caso de la clase  TestSuite  de JUnit 4.3.1. He atenuado considerablemente esta clase para ilustrar este concepto. Si se fija en la mitad del listado, verá dos variables de instancia declaradas. Resultaría complicado ocultarlas en un punto mejor. Cualquiera que lea este código tendría que toparse con las declaraciones por casualidad (como me pasó a mí). public class TestSuite implements Test { static public Test createTest(Class<? extends TestCase> theClass, String name) { … } public static Constructor<? extends TestCase> getTestConstructor(Class<? extends TestCase> theClass) throws NoSuchMethodException { … } public static Test warning(final String message) { … } private static String exceptionToString(Throwable t) { … } private String fName; private Vector<Test> fTests = new Vector<Test>(10); public TestSuite() { } public TestSuite(final Class<? extends TestCase> theClass) { … } public TestSuite(Class<? extends TestCase> theClass, String name) { … } 121