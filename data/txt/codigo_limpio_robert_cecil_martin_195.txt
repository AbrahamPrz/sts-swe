int firstindexoflastrowonpage = firstindexonpage + rowsperpage - 1; for (int firstindexinrow = firstindexonpage; firstindexinrow <= firstindexoflastrowonpage; firstindexinrow++) { printrow(firstindexinrow, lastindexonpage, data); printstream.println(“”); } } private void printrow(int firstindexinrow, int lastindexonpage, int[] data) { for (int column = 0; column < columnsperpage; column++) { int index = firstindexinrow + column * rowsperpage; if (index <= lastindexonpage) printstream.format(“%10d”, data[index]); } } private void printpageheader(string pageheader, int pagenumber) { printstream.println(pageheader + “ --- page ” + pagenumber); printstream.println(“”); } public void setoutput(printstream printstream) { this.printstream = printstream; } } listado 10-8 primegenerator.java package literateprimes; import java.util.arraylist; public class primegenerator { private static int[] primes; private static arraylist<integer> multiplesofprimefactors; protected static int[] generate(int n) { primes = new int[n]; multiplesofprimefactors = new arraylist<integer>(); set2asfirstprime(); checkoddnumbersforsubsequentprimes(); return primes; } private static void set2asfirtsprime() { primes[0] = 2; multiplesofprimefactors.add(2); 196