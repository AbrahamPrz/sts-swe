2.1 ■ modelos de proceso de software 29 sistemas que se están desarrollando. para algunos sistemas, como los sistemas críticos, se requiere de un proceso de desarrollo muy estructurado. para los sistemas empresariales, con requerimientos rápidamente cambiantes, es probable que sea más efectivo un pro-ceso menos formal y flexible. en ocasiones, los procesos de software se clasifican como dirigidos por un plan (plan-driven) o como procesos ágiles. los procesos dirigidos por un plan son aquellos donde todas las actividades del proceso se planean por anticipado y el avance se mide contra dicho plan. en los procesos ágiles, que se estudiarán en el capítulo 3, la planeación es incremental y es más fácil modificar el proceso para reflejar los requerimientos cambian-tes del cliente. como plantean boehm y turner (2003), cada enfoque es adecuado para diferentes tipos de software. por lo general, uno necesita encontrar un equilibrio entre procesos dirigidos por un plan y procesos ágiles. aunque no hay un proceso de software “ideal”, en muchas organizaciones sí existe un ámbito para mejorar el proceso de software. los procesos quizás incluyan técnicas obsoletas o tal vez no aprovechen las mejores prácticas en la industria de la ingeniería de software. en efecto, muchas organizaciones aún no sacan ventaja de los métodos de la ingeniería de software en su desarrollo de software. los procesos de software pueden mejorarse con la estandarización de los procesos, donde se reduce la diversidad en los procesos de software en una organización. esto con-duce a mejorar la comunicación, a reducir el tiempo de capacitación, y a que el soporte de los procesos automatizados sea más económico. la estandarización también representa un primer paso importante tanto en la introducción de nuevos métodos y técnicas de ingenie-ría de software, como en sus buenas prácticas. en el capítulo 26 se analiza con más detalle la mejora en el proceso de software. 2.1 modelos de proceso de software como se explicó en el capítulo 1, un modelo de proceso de software es una representa-ción simplificada de este proceso. cada modelo del proceso representa a otro desde una particular perspectiva y, por lo tanto, ofrece sólo información parcial acerca de dicho proceso. por ejemplo, un modelo de actividad del proceso muestra las actividades y su secuencia, pero quizá sin presentar los roles de las personas que intervienen en esas actividades. en esta sección se introducen algunos modelos de proceso muy generales (en ocasiones llamados “paradigmas de proceso”) y se muestran desde una perspectiva arquitectónica. en otras palabras, se ve el marco (framework) del proceso, pero no los detalles de las actividades específicas. tales modelos genéricos no son descripciones definitivas de los procesos de software. más bien, son abstracciones del proceso que se utilizan para explicar los diferentes enfo-ques del desarrollo de software. se pueden considerar marcos del proceso que se extien-den y se adaptan para crear procesos más específicos de ingeniería de software. los modelos del proceso que se examinan aquí son: 1. el modelo en cascada ( waterfall) éste toma las actividades fundamentales del proceso de especificación, desarrollo, validación y evolución y, luego, los repre- senta como fases separadas del proceso, tal como especificación de requerimientos, diseño de software, implementación, pruebas, etcétera. m02_sommerville_ingenieria_1ed_se_027-055.indd  29m02_sommerville_ingenieria_1ed_se_027-055.indd  29 3/18/11  4:45:30 pm3/18/11  4:45:30 pm