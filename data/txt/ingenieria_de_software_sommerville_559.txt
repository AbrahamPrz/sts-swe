542 capítulo 20 ■ software embebido del actuador se asocian con cada actuador y gestionan la operación de ese actuador. este modelo permite la rápida recopilación de datos desde el sensor (antes de que sobrescriba la entrada siguiente) y hace posible que después se realicen el procesamiento y la res-puesta asociada del actuador. un sistema de tiempo real debe responder a estímulos que ocurren en diferentes momentos. por lo tanto, debe organizar la arquitectura del sistema para que, tan pronto como se reciba un estímulo, el control se transfiera al manejador correcto. esto es poco práctico en programas secuenciales. por consiguiente, los sistemas de software de tiempo real se diseñan por lo general como un conjunto de procesos cooperativos concurrentes. para apoyar la gestión de dichos procesos, la plataforma de ejecución en que se efectúa el sistema de tiempo real puede incluir un sistema operativo de tiempo real (que se explica en la sección 20.4). se accede a las funciones proporcionadas por este sistema operativo a través del sistema de soporte en tiempo de ejecución para el lenguaje de programación de tiempo real utilizado. no existe un proceso de diseño del sistema embebido estándar. en vez de ello, se usan diferentes procesos que dependen del tipo de sistema, el hardware disponible y la organización que desarrolle el sistema. las siguientes actividades pueden incluirse en un proceso de diseño de software de tiempo real: 1. selección de plataforma en esta actividad se elige una plataforma de ejecución para el sistema (es decir, el hardware y el sistema operativo de tiempo real a utili-zar). los factores que influyen dichas elecciones comprenden restricciones de tem-porización sobre el sistema, limitaciones en la energía disponible, experiencia del equipo de desarrollo y precio tope para el sistema entregado. 2. identificación de estímulos/respuestas esto implica identificar los estímulos que debe procesar el sistema y la respuesta o respuestas asociadas para cada estímulo. 3. análisis de temporización para cada estímulo y respuesta asociada se identifican las restricciones de temporización que se aplican tanto al estímulo como al pro-cesamiento de la respuesta. se usan para establecer los plazos de los procesos del sistema. 4. diseño de procesos en esta etapa se agrega el estímulo y el procesamiento de respuesta en algunos procesos concurrentes. un buen punto de partida para diseñar la arquitectura del proceso lo constituyen los patrones arquitectónicos descritos en la sección 20.2. posteriormente, se optimiza la arquitectura del proceso para reflejar los requerimientos específicos que deben implementarse. 5. diseño de algoritmo para cada estímulo y respuesta se diseñan algoritmos que rea-lizan los cálculos requeridos. tal vez se deban desarrollar los diseños de algoritmo procesador de datoscontrol de actuadoractuador control de sensorsensor estímulo respuesta figura 20.3 procesos de sensor y actuador m20_sommerville_ingenieria_1ed_se_537-564.indd  542m20_sommerville_ingenieria_1ed_se_537-564.indd  542 3/18/11  5:05:49 pm3/18/11  5:05:49 pm