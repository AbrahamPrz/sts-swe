capítulo 23 métricas de producto 539 que proporcionan un indicio de la calidad en el nivel de clase oo y en el de operación. además, también se exploran las métricas aplicables a la administración del proyecto y a las pruebas. 23.3.3 métricas orientadas a clase: la suite de métricas ck la clase es la unidad fundamental de un sistema oo. por tanto, las medidas y métricas para una clase individual, la jerarquía de clase y las colaboraciones de clase serán invaluables cuando se requiera valorar la calidad del diseño oo. una clase encapsula datos y la función que los mani-pula. con frecuencia es el “padre” de las subclases (en ocasiones llamadas hijos) que heredan sus atributos y operaciones. usualmente colabora con otras clases. cada una de estas caracte-rísticas puede usarse como la base para la medición. 7 chidamber y kemerer propusieron uno de los conjuntos de métricas de software oo de ma- yor referencia [chi94]. en ocasiones llamada suite de métricas ck, los autores proponen seis métricas de diseño basadas en clase para sistemas oo.8 métodos ponderados por clase (mpc). suponga que n métodos de complejidad c1, c2, …, cn se definen para una clase c. la métrica de complejidad específica que se elige (por ejemplo, complejidad ciclomática) debe normalizarse de modo que la complejidad nominal para un mé-todo tome un valor de 1.0. mpc /h11005 /h20858c i para i = 1 hasta n. el número de métodos y su complejidad son indicadores razonables de la cantidad de esfuerzo requerido para implementar y probar una clase. además, mientras más grande sea el número de métodos, más complejo será el árbol de herencia (todas las subclases heredan los métodos de sus padres). finalmente, conforme el número de métodos crece para una clase determinada, es probable que se vuelva cada vez más específica su aplicación y, por tanto, limite la potencial reutilización. por todas estas razones, mpc debe mantenerse tan bajo como sea razonable. aunque parecería relativamente directo desarrollar un conteo para el número de métodos en una clase, el problema en realidad es más complejo de lo que parece. debe desarrollarse un enfoque de conteo consistente [chu95]. profundidad del árbol de herencia (pah). esta métrica es “la máxima longitud desde el nodo hasta la raíz del árbol” [chi94]. en la figura 23.5, el valor de la p ah para la jerarquía de clase que se muestra es 4. conforme crece la pah, es probable que las clases de nivel inferior hereden muchos métodos. esto conduce a potenciales dificultades cuando se intenta predecir el comportamiento de una clase. una jerarquía de clase profunda (pah grande) también con-duce a mayor complejidad de diseño. en el lado positivo, grandes valores de pah implican que muchos métodos pueden reutilizarse. número de hijos (ndh). las subclases que son inmediatamente subordinadas a una clase en la jerarquía de clase se denominan hijos. en la figura 23.5, la clase c 2 tiene tres hijos: sub- clases c21, c22 y c23. conforme crece el número de hijos, el reuso aumenta, pero también, como el ndh aumenta, la abstracción representada por la clase padre puede diluirse si algunos de los hijos no son miembros adecuados de la clase padre. conforme el ndh aumenta, la cantidad de pruebas (requeridas para ejercitar cada hijo en su contexto operativo) también aumentará. 7 debe observarse que, en la literatura técnica, actualmente está en debate la validez de algunas de las métricas estudiadas en este capítulo. quienes defienden la teoría de mediciones demandan un grado de formalismo que algunas métricas oo no proporcionan. sin embargo, es razonable afirmar que las métricas mencionadas ofrecen comprensión útil para el ingeniero de software. 8 chidamber, darcy y kemerer usan el término métodos en lugar de operaciones. el uso de este término se refleja en esta sección. 23pressman(526-552).indd  53923pressman(526-552).indd  539 19/1/10  23:29:5619/1/10  23:29:56