244 PARTE DOS  MODELADO 10.2.4  Acoplamiento En el estudio anterior del análisis y el diseño, se dijo que la comunicación y la colaboración eran  elementos esenciales de cualquier sistema orientado a objetos. Sin embargo, esta característica tan importante (y necesaria) tiene un lado oscuro. A medida que aumentan la comunicación y colaboración (es decir, conforme se eleva la “conectividad” entre las clases), la complejidad del sistema también se incrementa. Y si la complejidad aumenta, también crece la dificultad de implantar, probar y dar mantenimiento al software. El acoplamiento es la medición cualitativa del grado en el que las clases se conectan una con  otra. Conforme las clases (y componentes) se hacen más interdependientes, el acoplamiento crece. Un objetivo importante del diseño en el nivel de componente es mantener el acopla-miento tan bajo como sea posible. El acoplamiento de las clases se manifiesta de varias maneras. Lethbridge y Laganiére [Let01]  definen las siguientes categorías de acoplamiento: Acoplamiento de contenido. Tiene lugar cuando un componente “modifica subrepticia-mente datos internos en otro componente” [Let01]. Esto viola el ocultamiento de la infor-mación, concepto básico del diseño. Acoplamiento común. Sucede cuando cierto número de componentes hacen uso de una  variable global. Aunque a veces esto es necesario (por ejemplo, para establecer valores de-La escena: Cubículo de Jamie. Participantes: Jamie y Ed, miembros del equipo  de ingeniería de software que trabajan en la función de vigilancia.La conversación:Ed: Tengo un diseño de primer corte del componente cámara.Jamie: ¿Quieres revisarlo rápido?Ed: Sí… pero en realidad quisiera que me dijeras algo.(Con señas, Jamie lo invita a que continúe.)Ed: Originalmente definimos cinco operaciones para cámara.  Mira…  DeterminarTipo( ) dice el tipo de cámara.  CambiarUbicación( ) permite mover la cámara por el plano de la  casa.  MostrarIdentificación( )  obtiene la identificación de la cámara y la  muestra cerca de su ícono.  MostrarVista( ) presenta el campo de visión de la cámara en forma  gráfica.  MostrarAcercamiento( ) muestra gráficamente la amplificación de  la cámara. Ed: Las diseñé por separado y son operaciones muy simples. Por eso pensé que sería una buena idea combinar todas las operaciones de la pantalla en una sola que denominé MostrarCámara( ) y que mos-trará la identificación, vista y acercamiento. ¿Cómo la ves? Jamie (hace una mueca): No estoy seguro de que sea una  buena idea.Ed (frunce el seño): ¿Por qué? Todas esas pequeñas operaciones pueden dar dolores de cabeza. Jamie: El problema de que las combinemos es que se pierde cohe- sión, ya sabes, la operación MostrarCámara( ) no tendrá un único objetivo. Ed (un poco exasperado): ¿Y qué? Todo este asunto requerirá  menos de 100 líneas de código fuente, si acaso. Será más fácil de implantar… creo. Jamie: ¿Y qué pasa si decidimos cambiar la forma en la que repre- sentamos el campo de visión? Ed: Sólo se pasa a la operación MostrarCámara( ) y se hace la  modificación. Jamie: ¿Qué hay con los efectos colaterales?Ed: ¿Qué quieres decir?Jamie: Bueno, digamos que se hace el cambio, pero, sin darnos  cuenta, se genera un problema al mostrar en la pantalla la identifi-cación. Ed: No sería tan torpe.Jamie: Tal vez no, pero, ¿qué tal si alguien de apoyo tiene que  hacer la modificación dentro de dos años? Tal vez no entenderá la operación tan bien como tú, y, ¿quién sabe?, podría ser torpe. Ed: Entonces, ¿estás en contra?Jamie: Tú eres el diseñador… es tu decisión… sólo asegúrate de  que entiendes las consecuencias de la poca cohesión. Ed (piensa un momento): Tal vez haga operaciones de pantalla  separadas. Jamie: Buena decisión.CASASEGURA La cohesión en acción A medida que se elabora el diseño  de cada componente del software, la atención pasa al diseño de las estr ucturas específicas de los datos y  al diseño de procedimientos para manipularlas. Sin embargo, no hay que olvidar la arquitectura que debe albergar los componentes de las estructuras globales de los datos, que tal vez atiendan a muchos componentes.CONSEJO 10Pressman(234-264).indd   24410Pressman(234-264).indd   244 26/1/10   17:33:1926/1/10   17:33:19