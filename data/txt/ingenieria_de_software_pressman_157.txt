126CAPÍTULO 6MODELADO  DE LOS REQUERIMIENTOS : ESCENARIOS , INFORMACIÓN  Y CLASES  DE ANÁLISIS CONCEPTOS  CLAVE   análisis del dominio. . . . . . . 129 análisis gramatical  . . . . . . . 143asociaciones  . . . . . . . . . . . . 152casos de uso . . . . . . . . . . . . 132clases de análisis. . . . . . . . . 143diagrama de actividades  . . . 137diagrama de canal . . . . . . . . 138modelado basado en clases  . . . . . . . . . . . . . . 142 modelado basado en escenarios  . . . . . . . . . . . 131 modelado CRC. . . . . . . . . . . 148modelado de datos  . . . . . . . 139modelado de requerimientos  . . . . . . . . . . 130 modelos UML  . . . . . . . . . . . 137paquetes de análisis  . . . . . . 154 ¿Qué es? La palabra escrita es un vehículo  maravilloso para la comunicación, pero no necesariamente es la mejor forma de represen-tar los requerimientos de software de compu- tadora. El modelado de los requerimientos utiliza una combinación de texto y diagramas para ilustrarlos en forma que sea relativamente fácil de entender y, más importante, de revisar para corregir, completar y hacer congruente. ¿Quién lo hace?  Un ingeniero de software (a veces llama- do “analista”) construye el modelo con el uso de los reque-rimientos recabados del cliente. ¿Por qué es importante? Para validar los requerimientos  del software se necesita estudiarlos desde varios puntos de vista diferentes. En este capítulo se considerará el modelado de los requerimientos desde tres perspectivas distintas: mode-los basados en el escenario, modelos de datos (información) y modelos basados en la clase. Cada una representa a los requerimientos en una “dimensión” diferente, con lo que aumenta la probabilidad de detectar errores, de que afloren las inconsistencias y de que se revelen las omisiones. ¿Cuáles son los pasos? El modelado basado en escena- rios es una representación del sistema desde el punto de vista del usuario. El modelado basado en datos recrea el espacio de información e ilustra los objetos de datos que manipulará el software y las relaciones entre ellos. El modelado orientado a clases define objetos, atributos y relaciones. Una vez que se crean los modelos preliminares, se mejoran y analizan para evaluar si están claros y com-pletos, y si son consistentes. En el capítulo 7 se amplían con representaciones adicionales las dimensiones del modela-do descritas aquí, lo que da un punto de vista más sólido de los requerimientos. ¿Cuál es el producto final?  Para construir el modelo de  requerimientos, se escoge una amplia variedad de repre-sentaciones basadas en texto y en diagramas. Cada una de dichas representaciones da una perspectiva de uno o más de los elementos del modelo. ¿Cómo me aseguro de que lo hice bien? Los produc- tos del trabajo para modelar los requerimientos deben revisarse para saber si son correctos, completos y consis-tentes. Deben reflejar las necesidades de todos los partici-pantes y establecer el fundamento desde el que se realiza-rá el diseño. UNA  MIRADA   RÁPIDA 1 En ediciones anteriores de este libro, se usó el término modelo de análisis, en lugar de modelo de requerimientos.  En esta edición, el autor decidió usar ambas expresiones para designar la actividad que define distintos aspectos  del problema por resolver. Análisis es lo que ocurre cuando se obtienen los requerimientos.En el nivel técnico, la ingeniería de software comienza con una serie de tareas de modelado  que conducen a la especificación de los requerimientos y a la representación de un diseño del software que se va a elaborar. El modelo de requerimientos 1 —un conjunto de mode- los, en realidad— es la primera representación técnica de un sistema. En un libro fundamental sobre métodos para modelar los requerimientos, Tom DeMarco  [DeM79] describe el proceso de la manera siguiente: Al mirar retrospectivamente los problemas y las fallas detectados en la fase de análisis, concluyo que  es necesario agregar lo siguiente al conjunto de objetivos de dicha fase. Debe ser muy fácil dar man-tenimiento a los productos del análisis. Esto se aplica en particular al Documento de Objetivos [espe-cificación de los requerimientos del software]. Los problemas grandes deben ser enfrentados con el empleo de un método eficaz para dividirlos. La especificación victoriana original resulta caduca. De-ben usarse gráficas, siempre que sea posible. Es necesario diferenciar las consideraciones lógicas [esenciales] y las físicas [implementación]… Finalmente, se necesita… algo que ayude a dividir los requerimientos y a documentar dicha partición antes de elaborar la especificación… algunos medios para dar seguimiento a las interfaces y evaluarlas… nuevas herramientas para describir la lógica y la política, algo mejor que un texto narrativo. 06Pressman(126-157).indd   12606Pressman(126-157).indd   126 14/1/10   14:29:1414/1/10   14:29:14