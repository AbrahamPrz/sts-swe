596 capítulo 22 ■ gestión de proyectos proyecto o la calidad del software a entregar, y posteriormente tomar acciones para evitar dichos riesgos (hall, 1998; ould, 1999). podemos considerar un riesgo como algo que es preferible que no ocurra. los riesgos pueden amenazar el proyecto, el software que se desarrolla o a la organización. por lo tanto, existen tres categorías relacionadas de riesgo: 1. riesgos del proyecto los riesgos que alteran el calendario o los recursos del pro- yecto. un ejemplo de riesgo de proyecto es la renuncia de un diseñador experimen-tado. encontrar un diseñador de reemplazo con habilidades y experiencia adecuadas puede demorar mucho tiempo y, en consecuencia, el diseño del software tardará más tiempo en completarse. 2. riesgos del producto los riesgos que afectan la calidad o el rendimiento del soft-ware a desarrollar. un ejemplo de riesgo de producto es la falla que presenta un componente que se adquirió al no desempeñarse como se esperaba. esto puede afec-tar el rendimiento global del sistema, de modo que es más lento de lo previsto. 3. riesgos empresariales riesgos que afectan a la organización que desarrolla o ad- quie re el software. por ejemplo, un competidor que introduce un nuevo producto es un riesgo empresarial. la introducción de un producto competitivo puede significar que las suposiciones hechas sobre las ventas de los productos de software existentes sean excesivamente optimistas. desde luego, estos tipos de riesgos se traslapan. si un programador experimentado abandona un proyecto, esto puede ser un riesgo del proyecto porque, incluso si se susti-tuye de manera inmediata, el calendario se alterará. siempre se requiere tiempo para que un nuevo miembro del proyecto comprenda el trabajo realizado, de manera que no puede ser inmediatamente productivo. en consecuencia, la entrega del sistema podría demo-rarse. la salida de un miembro del equipo también puede ser un riesgo del producto, por-que un sustituto tal vez no sea tan experimentado y, por lo tanto, podría cometer errores de programación. finalmente, puede ser un riesgo empresarial, porque la experiencia de dicho programador es vital para obtener nuevos contratos. es necesario registrar los resultados del análisis del riesgo en el plan del proyecto, junto con un análisis de consecuencias, que establece las consecuencias del riesgo para el proyecto, el producto y la empresa. la gestión de riesgos efectiva facilita hacer frente a los problemas y asegurar que éstos no conduzcan a un presupuesto inaceptable o a retra-sos en el calendario. los riesgos específicos que podrían afectar un proyecto dependen del proyecto y el entorno de la organización donde se desarrolla el software. sin embargo, también existen riesgos comunes que no se relacionan con el tipo de software a desarrollar y que pue-den ocurrir en cualquier proyecto. en la figura 22.1 se muestran algunos de estos riesgos comunes. la gestión del riesgo es particularmente importante para los proyectos de software, debido a la incertidumbre inherente que enfrentan la mayoría de proyectos. ésta se deriva de requerimientos vagamente definidos, cambios de requerimientos que obedecen a cambios en las necesidades del cliente, dificultades en estimar el tiempo y los recursos requeridos para el desarrollo de software, o bien, se deriva de diferencias en las habilidades individuales. es necesario anticipar los riesgos; comprender el efecto de estos riesgos sobre el proyecto, el producto y la empresa; y dar los pasos adecuados para evitar dichos riesgos. tal vez se nece-site diseñar planes de contingencia de manera que, si ocurren los riesgos, se puedan tomar acciones inmediatas de recuperación. m22_sommerville_ingenieria_1ed_se_591-617.indd  596m22_sommerville_ingenieria_1ed_se_591-617.indd  596 3/18/11  5:11:44 pm3/18/11  5:11:44 pm