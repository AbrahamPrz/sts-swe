capítulo 19 prueba de aplicaciones orientadas a objetos 439 miento del sistema. por esta razón, dichos modelos deben sujetarse a una rigurosa revisión, previa a la generación del código. todos los modelos orientados a objetos deben probarse (en este contexto, el término prueba incorpora revisiones técnicas) en relación con su exactitud, completitud y consistencia dentro del contexto de la sintaxis, la semántica y la pragmática del modelo [lin94a]. 19.2 m odelos de prueba aoo y doo los modelos de análisis y diseño no pueden probarse de la manera convencional porque no pueden ejecutarse. sin embargo, pueden usarse revisiones técnicas (capítulo 15) para examinar su exactitud y consistencia. 19.2.1 exactitud de los modelos aoo y doo la notación y la sintaxis utilizadas para representar los modelos de análisis y diseño se ligarán a los métodos de análisis y diseño específicos que se elijan para el proyecto. por tanto, la exac-titud sintáctica se juzga mediante el uso adecuado de la simbología; cada modelo se revisa para garantizar que se mantienen las convenciones de modelado adecuadas. durante el análisis y el diseño, la exactitud semántica puede valorarse con base en la confor- midad del modelo con el dominio de problemas del mundo real. si el modelo refleja con preci-sión el mundo real (en un nivel de detalle que sea apropiado para la etapa de desarrollo en la que se revisó el modelo), entonces es semánticamente correcto. para determinar si el modelo verdaderamente refleja los requerimientos del mundo real, debe presentarse a expertos de do-minio de problemas, quienes examinarán las definiciones y jerarquía de clase en busca de omi-siones y ambigüedad. las relaciones de clase (conexiones de instancia) se evalúan para deter-minar si reflejan con precisión conexiones de objetos en el mundo real. 2 19.2.2 consistencia de los modelos orientados a objetos la consistencia de los modelos orientados a objetos puede juzgarse al “considerar las relaciones entre entidades en el modelo. un modelo de análisis o diseño inconsistente tiene representacio-nes en una parte del modelo que no se reflejan de manera correcta en otras porciones” [mcg94]. para valorar la consistencia, debe examinarse cada clase y sus conexiones con otras clases. a fin de facilitar esta actividad, puede usarse el modelo clase-responsabilidad-colaboración (crc) o un diagrama de objeto-relación. como se estudió en el capítulo 6, el modelo crc se compone de tarjetas índice crc. cada tarjeta crc menciona el nombre de la clase, sus respon-sabilidades (operaciones) y sus colaboradores (otras clases a las que envía mensajes y de las que depende para lograr sus responsabilidades). las colaboraciones implican una serie de rela-ciones (es decir, conexiones) entre clases del sistema oo. el modelo objeto-relación propor-ciona una representación gráfica de las conexiones entre clases. toda esta información puede obtenerse a partir del modelo de análisis (capítulos 6 y 7). para evaluar el modelo de clase, se recomienda seguir los siguientes pasos [mcg94]: 1. v uelva a consultar el modelo crc y el modelo objeto-relación. realice una com- probación cruzada para garantizar que todas las colaboraciones implicadas por el mo-delo de requerimientos se reflejan de manera adecuada en ambas. 2 los casos de uso pueden ser invaluables para cotejar los modelos de análisis y diseño contra escenarios de uso del sistema oo en el mundo real. 19pressman(437-452).indd  43919pressman(437-452).indd  439 21/1/10  10:58:3221/1/10  10:58:32