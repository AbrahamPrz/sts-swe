CAPÍTULO 3  DESARROLLO ÁGIL 67 de XP sugieren que la naturaleza incremental del proceso XP limita la complejidad (la  sencillez es un valor fundamental), lo que reduce la necesidad de un diseño extenso. El lector debe observar que todo proceso del software tiene sus desventajas, y que muchas or-ganizaciones de software han utilizado con éxito la XP. La clave es identificar dónde tiene sus debilidades un proceso y adaptarlo a las necesidades de la organización.  3.5 OTROS MODELOS  ÁGILES  DE PROCESO La historia de la ingeniería de software está salpicada de decenas de descripciones y metodolo-gías de proceso, métodos de modelado y notaciones, herramientas y tecnología, todos ellos obsoletos. Cada uno tuvo notoriedad y luego fue eclipsado por algo nuevo y (supuestamente) mejor. Con la introducción de una amplia variedad de modelos ágiles del proceso —cada uno en lucha por la aceptación de la comunidad de desarrollo de software— el movimiento ágil está siguiendo la misma ruta histórica. 11 Consideración del desarrollo ágil de  software La escena: Oficina de Doug Miller. Participantes: Doug Miller, gerente de ingeniería de software;  Jamie Lazar, miembro del equipo de software; Vinod Raman, inte-grante del equipo de software. La conversación:(Tocan a la puerta; Jamie y Vinod entran a la oficina de Doug.)Jamie: Doug, ¿tienes un minuto?Doug: Seguro, Jamie, ¿qué pasa?Jamie: Hemos estado pensando en nuestra conversación de ayer  sobre el proceso… ya sabes, el que vamos a elegir para este nuevo proyecto de CasaSegura. Doug: ¿Y?Vinod: Hablé con un amigo de otra compañía, y me contó sobre la  programación extrema. Es un modelo de proceso ágil… ¿has oído de él? Doug: Sí, algunas cosas buenas y otras malas.Jamie: Bueno, a nosotros nos pareció bien. Permite el desarrollo de  software realmente rápido, usa algo llamado programación en pare-jas para revisar la calidad en tiempo real… Pienso que es muy bueno. Doug: Tiene muchas ideas realmente buenas. Por ejemplo, me  gusta el concepto de programación en parejas y la idea de que los participantes deben formar parte del equipo. Jamie: ¿Qué? ¿Quieren decir que mercadotecnia trabajará con  nosotros en el proyecto?Doug (afirmando con la cabeza): Ellos son uno de los partici-pantes, ¿o no? Jamie: Sí… Pedirán cambios cada cinco minutos.Vinod: No necesariamente. Mi amigo dijo que hay formas de  “adoptar” los cambios durante un proyecto de XP. Doug: Entonces, chicos, ¿piensan que debemos usar XP?Jamie: Definitivamente, sería bueno considerarlo.Doug: Estoy de acuerdo. E incluso si elegimos un modelo incremen- tal como nuestro enfoque, no hay razón para no incorporar mucho de lo que XP tiene que ofrecer. Vinod: Doug, dijiste hace un rato “cosas buenas y malas”. ¿Cuáles  son las malas? Doug: Lo que no me gusta es la forma en la que XP desprecia el  análisis y el diseño… algo así como decir que la escritura del código está donde hay acción… (Los miembros del equipo se miran entre sí y sonríen.)Doug: Entonces, ¿están de acuerdo con el enfoque XP?Jamie (habla por ambos): ¡Escribir código es lo que hacemos,  jefe! Doug (ríe): Es cierto, pero me gustaría ver que dediquen un poco  menos de tiempo a escribir código y luego a repetirlo, y que pasen algo más de tiempo en el análisis de lo que debe hacerse para dise-ñar una solución que funcione. Vinod: Tal vez tengamos las dos cosas, agilidad con un poco de  disciplina. Doug: Creo que podemos, Vinod. En realidad, estoy seguro de que  se puede.CASASEGURACita: “Nuestra profesión pasa por las  metodologías como un chico de 14 años pasa por la ropa.” Stephen Hawrysh y Jim  Ruprecht 11 Esto no es algo malo. Antes de que uno o varios modelos se acepten como el estándar de facto, todos deben lu- char por conquistar las mentes y corazones de los ingenieros de software. Los “ganadores” evolucionan hacia  las mejores prácticas, mientras que los “perdedores” desaparecen o se funden con los modelos ganadores. 03Pressman(055-080).indd   6703Pressman(055-080).indd   67 14/1/10   13:41:1214/1/10   13:41:12