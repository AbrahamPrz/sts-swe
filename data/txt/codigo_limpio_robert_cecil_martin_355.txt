modo que las creé. las seis siguientes funciones (líneas 915-980) son métodos abstractos que deben implementarse en daydate , por lo que las extraje de spreadsheetdate . la última función, isinrange (líneas 982-995), también debe extraerse y refactorizarse. la instrucción switch no es agradable [g23] y se puede modificar si enviamos los casos a la enumeración dateinterval . public enum dateinterval { open { public boolean isin(int d, int left, int right) { return d > left && d < right; } }, closed_left { public boolean isin(int d, int left, int right) { return d >= left && d < right; } }, closed_right { public boolean isin(int d, int left, int right) { return d > left && d <= right; } }, closed { public boolean isin(int d, int left, int right) { return d >= left && d <= right; } }; public abstract boolean isin(int d, int left, int right); } public boolean isinrange(daydate d1, daydate d2, dateinterval interval) { int left = math.min(d1.getordinalday(), d2.getordinalday()); int right = math.max(d1.getordinalday(), d2.getordinalday()); return interval.isin(getordinalday(), left, right); } con esto llegamos al final de daydate . realizaremos una nueva pasada por la clase completa para comprobar cómo fluye. primero, el comentario inicial está desfasado, de modo que lo reduzco y lo mejoro [c2]. tras ello, desplazo las enumeraciones restantes a sus propios archivos [g12]. seguidamente, desplazo la variable estática ( dateformatsymbols ) y tres métodos estáticos ( getmonthnames , isleapyear , lastdayofmonth ) a una nueva clase con el nombre dateutil [g6]. 356