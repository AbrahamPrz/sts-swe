257 * @param object el objeto que comparar (se permite <code>null</code>). 258 * 259 * @return Un valor booleano. 260 */ 261 public boolean equals(final Object object) { 262 263 if (object instanceof SerialDate) { 264 final SerialDate s = (SerialDate) object; 265 return (s.toSerial() == this.toSerial()); 266 } 267 else { 268 return false; 269 } 270 271 } 272 273 /** 274 * Devuelve un código hash para la instancia de este objeto. 275 * 276 * @return Un código hash. 277 */ 278 public int hashCode() { 279 return toSerial(); 280 } 281 282 /** 283 * Devuelve la diferencia (en días) entre esta fecha y la 284 * ‘otra’ fecha especificada. 285 * 286 * @param other la fecha con la que se compara. 287 * 288 * @return La diferencia (en días) entre esta fecha y la 289 * otra’ fecha especificada. 290 */ 291 public int compare(final SerialDate other) { 292 return this.serial – other.toSerial(); 293 } 294 295 /** 296 * Implementa el método necesario para la interfaz Comparable. 297 * 298 * @param other el otro objeto (normalmente otro SerialDate). 299 * 300 * @return Un entero negativo, cero o un entero positivo si este objeto 301 * es menor que, igual o mayor que el objeto especificado. 491