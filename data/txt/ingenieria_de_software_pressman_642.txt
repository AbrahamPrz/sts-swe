capítulo 26 estimación para proyectos de software 611 se infirió a partir de datos de productividad recopilados por más de 4 000 proyectos de software contemporáneos. con base en dichos datos, se infiere un modelo de estimación de la forma e /h11005 loc /h11003 b0.333 p3 /h11003 1 t4 (26.4) donde e /h11005 esfuerzo en persona-meses o persona-años t /h11005 duración del proyecto en meses o años b /h11005 “factor de habilidades especiales”13 p /h11005 “parámetro de productividad” que refleja: madurez global del proceso y prácticas ad-ministrativas, la medida en la que se usan buenas prácticas de ingeniería de software, el nivel de lenguajes de programación utilizado, el estado del entorno de software, las habilidades y experiencia del equipo de software y la complejidad de la aplicación. valores típicos pueden ser p = 2 000 para desarrollo de un software incrustado en tiempo real, p = 10 000 para software de telecomunicaciones y sistemas y p = 28 000 para aplicaciones de sistemas empresariales. el parámetro de productividad puede inferirse para condiciones locales, usando datos históricos recopilados de esfuerzos de desarrollo anteriores. debe observarse que la ecuación de software tiene dos parámetros independientes: 1) una estimación del tamaño y 2) una indicación de la duración del proyecto en meses o años calen-dario. para simplificar el proceso de estimación y usar una forma más común para sus modelos de estimación, putnam y myers [put92] sugieren un conjunto de ecuaciones derivadas de la ecua-ción de software. el tiempo mínimo de desarrollo se define como t mín /h11005 8.14 loc p0.43 en meses para tmín /h11022 6 meses (26.5a) e /h11005 180 bt3 en persona-meses para e /h11350 20 persona-meses (26.5b) observe que t en la ecuación 26.5b se representa en años. con la ecuación 26.5, para p = 12 000 (el valor recomendado para software científico) para el software cad que se estudió anteriormente en este capítulo, tmín /h11005 8.14 /h11003 33 200 12 0000.43 /h11005 12.6 meses calendario e /h11005 180 /h11003 0.28 /h11003 (1.05)3 /h11005 58 persona-meses los resultados de la ecuación de software corresponden favorablemente con las estimaciones desarrolladas en la sección 26.6. como el modelo cocomo anotado en la sección 26.7.2, la ecuación de software sigue evolucionando. un análisis más a fondo de una versión extendida de este enfoque de estimación puede encontrarse en [put97b]. 26.8 e stimación para proyectos orientados a objetos vale la pena complementar los métodos de estimación de costo de software convencional con una técnica que se diseñó explícitamente para software oo. lorenz y kidd [lor94] sugieren el siguiente enfoque: 13 b aumenta lentamente conforme “crecen la necesidad para integración, pruebas, aseguramiento de la calidad, documentación y habilidades administrativas” [put92]. para programas pequeños (kloc = 5 a 15), b = 0.16. para programas mayores de 70 kloc, b = 0.39.webref en www.qsm.com puede encontrarse información acerca de herramientas de estimación de costo de software que evolucionaron a partir de la ecuación de software. 26pressman(593-619).indd  61126pressman(593-619).indd  611 21/1/10  10:55:5921/1/10  10:55:59