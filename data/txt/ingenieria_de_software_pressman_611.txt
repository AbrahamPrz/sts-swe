580 PARTE CUATRO  ADMINISTRACIÓN DE PROYECTOS DE SOFTWARE enormemente. Lorenz y Kidd sugieren que las aplicaciones con una GUI tienen entre dos y tres  veces más clases de apoyo que clases clave. Las aplicaciones no GUI tienen entre una y dos ve-ces más clases de apoyo que clases clave. Número de subsistemas.  Un subsistema es un agregado de clases que apoyan una función  que es visible para el usuario final de un sistema. Una vez identificados los subsistemas, es más  fácil plantear un calendario razonable en el cual el trabajo sobre los subsistemas se divide entre el personal del proyecto. Para usarse de manera efectiva en un entorno de ingeniería del software orientado a objeto,  es necesario recopilar métricas similares a las anotadas anteriormente , junto con medidas del  proyecto, tales como esfuerzo empleado, errores y defectos descubiertos, y modelos o páginas de documentación producidos. Conforme crece la base de datos (después de haber completado algunos proyectos), las relaciones entre las medidas orientadas a objeto y las medidas del pro-yecto proporcionarán métricas que pueden auxiliar en la estimación del proyecto. 25.2.5  Métricas orientadas a caso de uso Los casos de uso6 se utilizan ampliamente como un método para describir los requerimientos  en el dominio en el nivel del cliente o empresarial, que implican características y funciones del software. Parecería razonable usar el caso de uso como una medida de normalización similar a LOC o PF. Como los PF, el caso de uso se define al principio del proceso del software, lo que permite emplearlo para estimación antes de iniciar actividades significativas de modelado y construcción. Los casos de uso describen (de manera indirecta, al menos) las funciones y carac-terísticas visibles para el usuario que son requisitos básicos para un sistema. El caso de uso es independiente del lenguaje de programación. Además, el número de casos de uso es directa-mente proporcional al tamaño de la aplicación en LOC y al número de casos de prueba que tendrán que designarse para ejercitar por completo la aplicación. Puesto que los casos de uso pueden crearse en niveles de abstracción enormemente diferen- tes, no hay “tamaño” estándar para un caso de uso. Sin una medida estándar de lo que es un caso de uso, su aplicación como medida de normalización (por ejemplo, esfuerzo empleado por caso de uso) causa suspicacia. Los investigadores sugieren puntos de caso de uso (PCU) como un mecanismo para estimar el  esfuerzo del proyecto y otras características. Los PCU son una función del número de actores y transacciones implicados por los modelos de caso de uso y su análogo al PF en algunas formas. Si se tiene más interés en este tema, véase [Cle06]. 25.2.6  Métricas de proyecto webapp El objetivo de todos los proyectos webapp es entregar al usuario final una combinación de con-tenido y funcionalidad. Las medidas y métricas usadas para proyectos tradicionales de ingenie-ría del software son difíciles de traducir directamente a webapps. Sin embargo, es posible desa- rrollar una base de datos que permita el acceso a medidas productivas y calidad internas derivadas de algunos proyectos. Entre las medidas que pueden recopilarse están: Número de páginas web estáticas. Las páginas web con contenido estático (es decir, el usuario final no tiene control sobre el contenido que se despliega en la página) son las más comunes de todas las características webapp. Dichas páginas representan complejidad rela-tivamente baja y por lo general requieren menos esfuerzo para construirlas que las páginas dinámicas. Esta medida proporciona un indicio del tamaño global de la aplicación y del es-fuerzo requerido para desarrollarla. 6 Los casos de uso se introdujeron en los capítulos 5 y 6. 25Pressman(571-592).indd   58025Pressman(571-592).indd   580 19/1/10   23:39:5519/1/10   23:39:55