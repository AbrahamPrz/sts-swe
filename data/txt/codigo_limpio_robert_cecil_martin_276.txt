pruebas de aceptación se crearon como páginas wiki en FitNesse. Podría haber ejecutado estas pruebas en cualquier momento y, si eran satisfactorias, sabría que el sistema funcionaba de la forma especificada. Así pues, comencé a realizar pequeños cambios. Cada uno desplazaba la estructura del sistema hacia el concepto  ArgumentMarshaler , y cada cambio mantenía el funcionamiento del sistema. El primer cambio realizado fue añadir el esqueleto de  ArgumentMarshaller  al final del desastre anterior (véase el Listado 14-11). Listado 14-11 ArgumentMarshaller añadido a Args.java private class ArgumentMarshaler { private boolean booleanValue = false; public void setBoolean(boolean value) { booleanValue = value; } public boolean getBoolean() { return booleanValue; } private class BooleanArgumentMarshaler extends ArgumentMarshaler { } private class StringArgumentMarshaler extends ArgumentMarshaler { } private class IntegerArgumentMarshaler extends ArgumentMarshaler { } } Evidentemente, esto no afectaría a nada, por lo que realicé la modificación más sencilla posible que afectara a la mínima cantidad de código. Cambié  HashMap  para que los argumentos Boolean aceptaran ArgumentMarshaler . private Map<Character,  ArgumentMarshaler > booleanArgs = new HashMap<Character,  ArgumentMarshaler >(); Esto afectaba a varias instrucciones que corregí rápidamente. … private void parseBooleanSchemaElement(char elementId) { booleanArgs.put(elementId,  new BooleanArgumentMarshaler ()); } … 277