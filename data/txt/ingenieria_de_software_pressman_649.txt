618 parte cuatro administración de proyectos de software una casa. escriba un enunciado para el ámbito que describa el software. asegúrese de que su enunciado de ámbito esté acotado. si no está familiarizado con los robots, haga un poco de investigación antes de comen-zar a escribirlo. además, establezca sus suposiciones acerca del hardware que se requerirá. alternativa: sustituya el robot podadora con otro problema que sea de su interés. 26.2. la complejidad del proyecto de software se analiza brevemente en la sección 26.1. elabore una lista de características de software (por ejemplo, operación concurrente, salida gráfica) que afecten la compleji-dad de un proyecto. priorice la lista. 26.3. el rendimiento es una importante consideración durante la planificación. analice cómo puede inter- pretarse de manera diferente el rendimiento, dependiendo del área de aplicación del software. 26.4. haga una descomposición funcional del software de robot que describió en el problema 26.1. estime el tamaño de cada función en loc. si supone que su organización produce 450 loc/pm con una tarifa de mano de obra sobrecargada de us$7 000 por persona-mes, estime el esfuerzo y el costo requeridos para construir el software, usando la técnica de estimación basada en loc descrita en este capítulo. 26.5. use el modelo cocomo ii para estimar el esfuerzo requerido para construir software para un simple atm que produce 12 pantallas, 10 reportes y que requerirá aproximadamente 80 componentes de software. suponga complejidad promedio y madurez desarrollador/entorno promedio. use el modelo de composición de aplicación con puntos de objeto. 26.6. use la ecuación de software para estimar el software del robot podadora. suponga que la ecuación 26.4 es aplicable y que p = 8 000. 26.7. compare las estimaciones de esfuerzo inferidas en los problemas 26.4 y 26.6. ¿cuál es la desviación estándar y cómo afecta esto a su grado de certidumbre acerca de la estimación? 26.8. usando los resultados obtenidos en el problema 26.7, determine si es razonable esperar que el soft- ware pueda construirse dentro de los siguientes seis meses y cuántas personas tendrían que emplearse para realizar el trabajo. 26.9. desarrolle un modelo de hoja de cálculo que implemente una o más de las técnicas de estimación descritas en este capítulo. de manera alternativa, adquiera uno o más modelos en línea para estimación de fuentes en la web. 26.10. para un equipo de proyecto: desarrolle una herramienta de software que implemente cada una de las técnicas de estimación desarrolladas en este capítulo. 26.11. parece extraño que las estimaciones de costo y calendario se desarrollen durante la planificación del proyecto de software, antes del análisis detallado de los requisitos de software o de realizar el diseño. ¿por qué cree que se haga esto? ¿existen circunstancias para no hacerlo? 26.12. vuelva a calcular los valores esperados que se anotaron para el árbol de decisión en la figura 26.8 y suponga que cada rama tiene una probabilidad 50-50. ¿esto cambiaría su decisión final?  lecturas y fuentes de información adicionales la mayoría de los libros de administración de proyectos de software contienen análisis acerca de la estima-ción del proyecto. the project management institute (pmbok guide, pmi, 2001), wysoki et al . (effective project management, wiley, 2000), lewis (project planning scheduling and control, 3a. ed., mcgraw-hill, 2000), ben- natan ( on time, within budget: software project management practices and techniques, 3a. ed., wiley, 2000) y phillips [phi98] proporcionan útiles lineamientos de estimación. mcconnell (software estimation: demystifying the black art, microsoft press, 2006) escribió una guía prag- mática que proporciona valiosos lineamientos para todos aquellos que deban estimar el costo del software. parthasarathy ( practical software estimation, addison-wesley, 2007) enfatiza los puntos de función como una métrica de estimación. laird y brennan (software measurement and estimation: a practical approach , wiley- ieee computer society press, 2006) aborda las mediciones y su uso en la estimación del software. pfleeger (software cost estimation and sizing methods, issues, and guidelines , rand corporation, 2005) desarrolló un manual abreviado que aborda muchos fundamentos de estimación. jones ( estimating software costs, 2a. ed., mcgraw-hill, 2007) escribió uno de los tratamientos más exhaustivos de los modelos y los datos que son aplicables a la estimación del software en todo dominio de aplicación. coombs (it project estimation, cam-bridge university press, 2002) y roetzheim y beasley (software project cost and schedule estimating: best 26pressman(593-619).indd  61826pressman(593-619).indd  618 21/1/10  10:56:0121/1/10  10:56:01