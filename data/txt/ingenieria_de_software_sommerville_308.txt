11.1 ■ propiedades de conﬁ abilidad 291 2. falla en el desarrollo de software el software del sistema puede fallar debido a errores en su especificación, diseño o implementación. 3. falla de operación los usuarios fallan al usar o ejecutar el sistema correctamente. conforme el hardware y el software se vuelven más confiables, las fallas en la ope-ración son ahora, quizá, la principal causa individual de fallas del sistema. dichas fallas suelen estar interrelacionadas. un componente de hardware que falla sig-nificaría que los operadores del sistema tengan que lidiar con una situación inesperada y una carga de trabajo adicional, que los pone bajo estrés; así, las personas cometen errores con frecuencia. esto llega a provocar que falle el software, lo que genera más trabajo para los operadores, incluso más estrés, entre otras contrariedades. como resultado, es importante sobre todo que los diseñadores de sistemas confiables con software intensivo adquieran una perspectiva holística de los sistemas, en vez de enfocarse en un solo aspecto del sistema, como su software o hardware. si estos últimos, además de los procesos operacionales se diseñan por separado, sin considerar las debi-lidades potenciales de otras partes del sistema, entonces es muy probable que ocurran errores en las interfaces entre las diferentes partes del sistema. 11.1 propiedades de confiabilidad todos estamos familiarizados con el problema de la falla de los sistemas de cómputo. por razones que no son evidentes, en ocasiones las computadoras fallan o se descompo-nen en alguna forma. los programas que operan en estas computadoras quizá no operen como se espera y, en ocasiones, contaminan los datos que administra el sistema. uno aprende a vivir con tales fallas, aunque pocos confían por completo en las computadoras que usan normalmente. la confiabilidad de un sistema de cómputo es una propiedad del sistema que refleja su fiabilidad. aquí, esta última significa en esencia el grado de confianza que un usuario tiene que el sistema ejecutará como se espera, y que el sistema no “fallará” en su uso nor-mal. no es significativo expresar numéricamente la confiabilidad. en vez de ello, se usansistemas críticos algunas clases de sistemas son “sistemas críticos” en los que la falla del sistema podría derivar en una lesión a individuos, daño al ambiente o pérdidas económicas mayores. los ejemplos de sistemas críticos incluyen sistemas embebidos en dispositivos médicos, como una bomba de insulina (crítica para la protección), sistemas de navegación de aeronaves (críticos para la misión) y sistemas de transferencia de dinero en línea (críticos para la empresa). los sistemas críticos son muy costosos de desarrollar. no sólo tienen que diseñarse de modo que sean muy raras las fallas, sino también deben incluir mecanismos de recuperación que se usen al ocurrir las fallas. http://www.softwareengineering-9.com/web/dependability/critsys.html m11_sommerville_ingenieria_1ed_se_289-308.indd  291m11_sommerville_ingenieria_1ed_se_289-308.indd  291 3/18/11  4:54:18 pm3/18/11  4:54:18 pm