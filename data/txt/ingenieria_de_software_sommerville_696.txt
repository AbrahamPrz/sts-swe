Capítulo 24 ■ Referencias  679  24.3. Discuta la valoración de calidad del software según los atributos de calidad mostrados en la  figura 24.2. Debe considerar a la vez cada atributo y explicar cómo puede valorarse.  24.4. Diseñe un formato electrónico que pueda usar para registrar comentarios de revisión y para enviar comentarios por correo electrónico a los revisores.  24.5. Describa brevemente posibles estándares que podría utilizar para: • El uso de sentencias de control en C, C# o Java; • enviar reportes para un proyecto final en una universidad;• el proceso de hacer y aprobar cambios al programa (véase el capítulo 26);• el proceso de comprar e instalar una nueva computadora.  24.6. Suponga que trabaja en una organización que desarrolla productos de bases de datos para individuos y empresas pequeñas. Esta organización está interesada en cuantificar su desarrollo de software. Escriba un reporte que sugiera métricas adecuadas y mencione cómo pueden recopilarse.  24.7. Exprese por qué las inspecciones de programa son una técnica efectiva para descubrir errores en un programa. ¿Qué tipos de errores tienen escasa probabilidad de descubrirse mediante inspecciones?  24.8. Diga por qué las métricas de diseño son, por sí mismas, un método inadecuado para predecir la calidad del diseño.  24.9. Exponga por qué es difícil validar las relaciones entre atributos de producto internos (como la complejidad ciclomática) y los atributos externos (como la mantenibilidad). 24.10. Un colega que es muy buen programador elabora software con un bajo número de defectos, pero siempre pasa por alto los estándares de calidad de la organización. ¿Cómo deberían reaccionar sus administradores ante este comportamiento? REFERENCIAS Bamford, R. y Deibler, W. J. (eds.) (2003). “ISO 9001:2000 for Software and Systems Providers: An Engineering Approach”. Boca Raton, Fla.: CRC Press. Barnard, J. y Price, A. (1994). “Managing Code Inspection Information”. IEEE Software, 11 (2),  59–69.Basili, V. R. y Rombach, H. D. (1988). “The TAME project: Towards Improvement-Oriented  Software Environments”. IEEE Trans. on Software Eng., 14 (6), 758–773. Boehm, B. W., Brown, J. R., Kaspar, H., Lipow, M., Macleod, G. y Merrit, M. (1978).  Characteristics of Software Quality. Amsterdam: North-Holland. Chidamber, S. y Kemerer, C. (1994). “A Metrics Suite for Object-Oriented Design”. IEEE Trans. on  Software Eng., 20 (6), 476–93. M24_SOMMERVILLE_INGENIERIA_1ED_SE_651-680.indd   679M24_SOMMERVILLE_INGENIERIA_1ED_SE_651-680.indd   679 3/18/11   5:13:03 PM3/18/11   5:13:03 PM