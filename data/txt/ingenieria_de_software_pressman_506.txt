CAPÍTULO 20  PRUEBA DE APLICACIONES WEB 475  20.10 R ESUMEN La meta de la prueba de las webapps es ejercitar cada una de las muchas dimensiones de calidad  de la webapp con la intención de encontrar errores o descubrir conflictos que puedan conducir a fallas en la calidad. Las pruebas se enfocan en contenido, función, estructura, usabilidad, na-vegabilidad, rendimiento, compatibilidad, interacción, capacidad y seguridad. Estas pruebas incorporan revisiones que ocurren conforme se diseña la webapp y pruebas que se llevan a cabo una vez que se implanta la misma. La estrategia de prueba de webapps ejercita cada dimensión de calidad al examinar inicial- mente “unidades” de contenido, funcionalidad o navegación. Una vez validadas las unidades individuales, la atención se cambia hacia pruebas que ejercitan la webapp como un todo. Para lograr esto, muchas pruebas se derivan desde la perspectiva del usuario y se activan mediante la información contenida en casos de uso. Se desarrolla un plan de prueba de webapps y se  identifican los pasos de la prueba, productos de trabajo (por ejemplo, casos de prueba) y meca-nismos para la evaluación de los resultados de la prueba. El proceso de prueba abarca siete tipos diferentes de pruebas. La prueba de contenido (y las revisiones) se enfocan en varias categorías de contenido. La  intención es descubrir errores semánticos y sintácticos que afectan la precisión del contenido o la forma en la que se presenta al usuario final. La prueba de interfaz ejercita los mecanismos de interacción que permiten al usuario comunicarse con la webapp y valida los aspectos estéticos  de la interfaz. La intención es descubrir errores que resultan a partir de mecanismos de interac-ción pobremente implantados o de omisiones, inconsistencias o ambigüedades en la semántica de la interfaz. Las pruebas de navegación aplican casos de uso, derivados de la actividad de modelado, en  el diseño de casos de prueba que ejercitan cada escenario de uso contra el diseño de navega-ción. Los mecanismos de navegación se ponen a prueba para garantizar que cualquier error que impida completar un caso de uso se identifique y corrija. La prueba de componente ejercita las unidades de contenido y funcionales dentro de la webapp. La prueba de configuración intenta descubrir errores y/o problemas de compatibilidad que  son específicos de un entorno cliente o servidor particular. Entonces se realizan pruebas para descubrir errores asociados con cada posible configuración. Las pruebas de seguridad incorpo-ran una serie de pruebas diseñadas para explotar las vulnerabilidades en la webapp y su entorno. La intención es encontrar huecos de seguridad. La prueba de rendimiento abarca una serie de pruebas que se diseñan para valorar el tiempo de respuesta y la confiabilidad de la webapp con- forme aumenta la demanda en la capacidad de recursos en el lado servidor.   PROBLEMAS  Y PUNTOS  POR EVALUAR 20.1. ¿Existen algunas situaciones en las que la prueba de webapps deba descartarse por completo? 20.2. Con sus palabras, analice los objetivos de las pruebas en un contexto webapp. 20.3. La compatibilidad es una importante dimensión de la calidad. ¿Qué debe probarse para garantizar que  existe compatibilidad para una webapp? 20.4. ¿Cuáles errores tienden a ser más serios: los que hay en el lado cliente o los del lado servidor? ¿Por  qué? 20.5. ¿Qué elementos de la webapp pueden recibir “prueba de unidad”? ¿Qué tipos de pruebas deben reali- zarse sólo después de que se integran los elementos de la webapp? 20.6. ¿Siempre es necesario desarrollar un plan de prueba escrito formalmente? Explique. 20Pressman(453-477).indd   47520Pressman(453-477).indd   475 21/1/10   10:58:1321/1/10   10:58:13