ejemplo de un método ágil, aunque también en esta sección se introduce brevemente scrum. los capítulos restantes son amplias descripciones de las actividades del proceso de software que se introducirán en el capítulo 2. en el capítulo 4 se trata un tema importante de la ingeniería de requerimientos, donde se definen las necesidades de lo que debe hacer un sistema. el capítulo 5 muestra el modelado de sistemas usando el uml, donde se enfoca el uso de los diagramas de caso, diagramas de clase, diagramas de secuencia y diagramas de estado para modelar un sistema de software. el capítulo 6 introduce al diseño arquitectónico y estudia la importancia de la arqui-tectura y el uso de patrones arquitectónicos en el diseño de software. el capítulo 7 trata sobre el diseño orientado a objetos y el uso de patrones de diseño. aquí también se observan importantes problemas de imple-mentación: reutilización, manejo de configuración y el desarrollo de host-target (anfitrión destino); también se estudia el desarrollo de código abierto. el capítulo 8 se enfoca en las pruebas del software, desde la prueba de unidad durante el desarrollo del sistema, hasta la prueba de la puesta en venta del software. también se analiza el uso del desarrollo impulsado por prueba, un enfoque pionero en los métodos ágiles, pero con gran aplicabilidad. finalmente, el capítulo 9 brinda un panorama de los temas sobre la evolución del software. se describen los procesos evo-lutivos, el mantenimiento del software y la gestión de sistemas legados. m01_sommerville_ingenieria_1ed_se_001-026.indd  2m01_sommerville_ingenieria_1ed_se_001-026.indd  2 3/18/11  4:44:28 pm3/18/11  4:44:28 pm