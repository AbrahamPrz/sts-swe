capítulo 4 principios que guían la práctica 97 vante, para después hacer una prueba beta exhaustiva con usuarios reales. todos los scripts de instalación y otras características de operación deben ejecutarse por completo en tantas configuraciones diferentes de cómputo como sea posible (por ejemplo, hardware, sistemas operativos, equipos periféricos, configuraciones de red, etcétera). principio 3. antes de entregar el software, debe establecerse un régimen de apoyo. un usuario final espera respuesta e información exacta cuando surja una pregunta o pro-blema. si el apoyo es ad hoc, o, peor aún, no existe, el cliente quedará insatisfecho de in-mediato. el apoyo debe planearse, los materiales respectivos deben prepararse y los meca-nismos apropiados de registro deben establecerse a fin de que el equipo de software realice una evaluación categórica de las clases de apoyo solicitado. principio 4. se deben proporcionar a los usuarios finales materiales de aprendizaje apropiados. el equipo de software entrega algo más que el software en sí. deben desa- rrollarse materiales de capacitación apropiados (si se requirieran); es necesario proveer li-neamientos para solución de problemas y, cuando sea necesario, debe publicarse “lo que es diferente en este incremento de software”. 8 principio 5. el software defectuoso debe corregirse primero y después entregarse.cuando el tiempo apremia, algunas organizaciones de software entregan incrementos de baja calidad con la advertencia de que los errores “se corregirán en la siguiente entrega”. esto es un error. hay un adagio en el negocio del software que dice así: “los clientes olvi-darán pronto que entregaste un producto de alta calidad, pero nunca olvidarán los proble-mas que les causó un producto de mala calidad. el software se los recuerda cada día.” el software entregado brinda beneficios al usuario final, pero también da retroalimentación útil para el equipo que lo desarrolló. cuando el incremento se libere, debe invitarse a los usua- rios finales a que comenten acerca de características y funciones, facilidad de uso, confiabilidad y cualesquiera otras características. 4.4 resumen la práctica de la ingeniería de software incluye principios, conceptos, métodos y herramientas que los ingenieros de software aplican en todo el proceso de desarrollo. todo proyecto de inge-niería de software es diferente. no obstante, existe un conjunto de principios generales que se aplican al proceso como un todo y a cada actividad estructural, sin importar cuál sea el proyecto o el producto. existe un conjunto de principios fundamentales que ayudan en la aplicación de un proceso de software significativo y en la ejecución de métodos de ingeniería de software eficaz. en el nivel del proceso, los principios fundamentales establecen un fundamento filosófico que guía al equipo de software cuando avanza por el proceso del software. en el nivel de la práctica, los principios fundamentales establecen un conjunto de valores y reglas que sirven como guía al analizar el diseño de un problema y su solución, al implementar ésta y al someterla a prueba para, finalmente, desplegar el software en la comunidad del usuario. los principios de comunicación se centran en la necesidad de reducir el ruido y mejorar el ancho de banda durante la conversación entre el desarrollador y el cliente. ambas partes deben colaborar a fin de lograr la mejor comunicación. los principios de planeación establecen lineamientos para elaborar el mejor mapa del pro- ceso hacia un sistema o producto terminado. el plan puede diseñarse sólo para un incremento 8 durante la actividad de comunicación, el equipo de software debe determinar los tipos de materiales de ayuda que quiere el usuario. 04pressman(081-100).indd  9704pressman(081-100).indd  97 26/1/10  17:32:0126/1/10  17:32:01