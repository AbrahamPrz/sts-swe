3.3 ■ programación extrema 69 3.3.1 pruebas en xp como se indicó en la introducción de este capítulo, una de las diferencias importantes entre desarrollo incremental y desarrollo dirigido por un plan está en la forma en que el sistema se pone a prueba. con el desarrollo incremental, no hay especificación de sis-tema que pueda usar un equipo de prueba externo para desarrollar pruebas del sistema. en consecuencia, algunos enfoques del desarrollo incremental tienen un proceso de prue-bas muy informal, comparado con las pruebas dirigidas por un plan. para evitar varios de los problemas de prueba y validación del sistema, xp enfatiza la importancia de la prueba de programa. la xp incluye un enfoque para probar que reduce las posibilidades de introducir errores no detectados en la versión actual del sistema. las características clave de poner a prueba en xp son: 1. desarrollo de primera prueba, 2. desarrollo de pruebas incrementales a partir de escenarios,3. involucramiento del usuario en el desarrollo y la validación de pruebas, y4. el uso de marcos de pruebas automatizadas. el desarrollo de la primera prueba es una de las innovaciones más importantes en xp. en lugar de escribir algún código y luego las pruebas para dicho código, las pruebas se elaboran antes de escribir el código. esto significa que la prueba puede correrse con-forme se escribe el código y descubrir problemas durante el desarrollo. escribir pruebas implícitamente define tanto una interfaz como una especificación del comportamiento para la funcionalidad a desarrollar. se reducen los problemas de la mala interpretación de los requerimientos y la interfaz. este enfoque puede adoptarse en cualquier proceso donde haya una relación clara entre un requerimiento de sistema y el código que implementa dicho requerimiento. en la xp, siempre se observa este vínculo porque las tarjetas de historia que representan los requerimientos se descomponen en tareas, y éstas son la principal unidad de implementación. la adopción del desarrollo de primera prueba en xp condujo a enfoques de desarrollo basados en pruebas más genera-les (astels, 2003). éstas se estudian en el capítulo 8. en el desarrollo de primera prueba, los implementadores de tarea deben comprender ampliamente la especificación, de modo que sean capaces de escribir pruebas para el sistema. esto significa que las ambigüedades y omisiones en la especificación deben clarificarse antes de comenzar la implementación. más aún, también evita el problema del “retraso en la prueba”. esto puede ocurrir cuando el desarrollador del sistema trabaja a un ritmo más rápido que el examinador. la implementación está cada vez más adelan-te de las pruebas y hay una tendencia a omitirlas, de modo que se mantenga la fecha de desarrollo. los requerimientos de usuario en xp se expresan como escenarios o historias, y el usua-rio los prioriza para su desarrollo. el equipo de desarrollo valora cada escenario y lo des-compone en tareas. por ejemplo, en la figura 3.6 se muestran algunas de las tarjetas de tarea desarrolladas a partir de la tarjeta de historia para la prescripción de medicamentos (figura 3.5). cada tarea genera una o más pruebas de unidad, que verifican la implementación descrita en dicha tarea. la figura 3.7 es una descripción breve de un caso de prueba que se desarrolló para comprobar que la dosis prescrita de un medicamento no se halle fuera de los límites de seguridad conocidos. m03_sommerville_ingenieria_1ed_se_056-081.indd  69m03_sommerville_ingenieria_1ed_se_056-081.indd  69 3/18/11  4:46:25 pm3/18/11  4:46:25 pm