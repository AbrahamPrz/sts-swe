298 PARTE DOS  MODELADO enfrentan un conjunto de problemas que surgen cuando se elaboran webapps y es frecuente que  incorporen muchas de las otras categorías de patrones mencionadas. En un nivel de abstracción más bajo, los idiomas describen la forma de implementar todo un algoritmo específico o una  parte de él, o bien una estructura de datos, para un componente de software en el contexto de un lenguaje de programación específico. En su libro fundamental sobre patrones de diseño, Gamma et al. 3 [Gam95] se centran en tres  tipos de patrones de relevancia especial para el diseño orientado a objetos: patrones creaciona-les, estructurales y conductuales. Los patrones creacionales se centran en la “creación, composición y representación” de obje- tos. Gamma et al. [Gam95] hacen la observación de que los patrones creacionales “encierran conocimiento acerca de cuáles son las clases concretas que usa el sistema”, pero al mismo tiempo “ocultan la forma en la que las instancias de dichas clases se crean y agrupan”. Los pa-trones creacionales ofrecen mecanismos que hacen más fácil la formación de las instancias de los objetos dentro de un sistema y establecen “restricciones en el tipo y número de objetos que es posible crear dentro de un sistema” [Maa07].¿Hay alguna forma de  clasificar los tipos de patrones?? 3 En la bibliografía sobre patrones, Gamma et al. [Gam95] son llamados con frecuencia “la banda de los cuatro”  (GoF, por sus siglas en inglés).En la red mundial hay una amplia variedad de patrones  de diseño que se ajustan a las categorías creacional,  estructural y conductual. En Wikipedia (www.wikipedia.org) se  encuentran los siguientes ejemplos: Patrones creacionales • Patrón de fábrica abstracta: centraliza la decisión acerca de para qué fábrica deben hacerse instancias. • Patrón de método de fabricación: centraliza la creación de un objeto de tipo específico para elegir una entre varias implemen-taciones. • Patrón constructor: separa la construcción de un objeto com-plejo a partir de su representación, de modo que el mismo proceso de construcción pueda crear representaciones distintas. • Patrón prototipo: se usa cuando el costo inherente que implica crear un nuevo objeto en la forma estándar (como con el empleo de una “nueva” clave) es prohibitivo para una aplicación dada. • Patrón de instancia única: restringe la formación de instan-cias de una clase a un objeto. Patrones estructurales • Patrón adaptador: “adapta” una interfaz para una clase en otra que espera un cliente. • Patrón agregado: es una versión del patrón compuesto con métodos para agregar hijos. • Patrón de puente: desacopla una abstracción de su imple-mentación, de modo que las dos puedan variar en forma indepen-diente. • Patrón compuesto: estructura de árbol de objetos en los que cada uno tiene la misma interfaz.• Patrón contenedor: crea objetos con el único propósito de que sostengan a otros y los administren. • Patrón de proximidad: clase que funciona como interfaz res-pecto de otra cosa. • Tubos y filtros: cadena de procesos en los que la salida de cada uno es la entrada del siguiente. Patrones conductuales • Cadena de patrones de responsabilidad: objetos de comando que son manejados o pasados a otros objetos por medio de otros que contienen procesamiento lógico. • Patrón de comando: objetos de comando que encierran una acción y sus parámetros. • Escucha de eventos: se distribuyen datos a objetos registrados para recibirlos. • Patrón intérprete: implementa un lenguaje de computadora especializado para resolver con rapidez un conjunto específico de problemas. • Patrón iterador: los iteradores se utilizan para acceder en forma secuencial a los elementos de un agregado sin exponer su representación subyacente. • Patrón mediador: proporciona una interfaz unificada a un conjunto de interfaces en un subsistema. • Patrón visitante: forma de separar un algoritmo de un objeto. • Patrón visitante de un solo servicio: optimiza la imple- mentación de un visitante que se haya asignado, utilizado sólo una vez y luego eliminado. • Patrón visitante jerárquico: brinda una forma de visitar cada nodo en una estructura jerárquica de datos, como un árbol. Las descripciones detalladas de estos patrones pueden obtenerse por medio de vínculos en www.wikipedia.org.INFORMACIÓN Patrones creacionales, estructurales y conductuales 12Pressman(295-316).indd   29812Pressman(295-316).indd   298 14/1/10   16:23:3514/1/10   16:23:35