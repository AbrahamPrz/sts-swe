lograr sin una cobertura mayor de las pruebas. por ello diseñé mi propia suite de pruebas de unidad independientes (véase el listado b-4). si se fija en las pruebas, comprobará que muchas están comentadas, ya que no se superaron. representan un comportamiento que considero debería incluirse en serialdate . por tanto, al refactorizar serialdate , intentaré que estas pruebas funcionen. incluso con algunas de las pruebas comentadas, el informe de clover indica que ahora ejecutan 170 (el 92 por ciento) de las 185 instrucciones ejecutables. un gran resultado que creo que puedo mejorar. las primeras pruebas comentadas (líneas 23-63) son un tanto pretenciosas. el programa no fue diseñado para superar estas pruebas, pero el comportamiento me parecía evidente [g2]. desconozco por qué se ha creado el método testweekdaycodetostring pero ya que está ahí, parece obvio que no debe distinguir entre mayúsculas y minúsculas. el diseño de las pruebas fue sencillo [t3] y más todavía que fueran satisfactorias; simplemente cambié las líneas 259 y 263 para usar equalsignorecase . comenté las pruebas de las líneas 32 y 45 ya que no estaba seguro de si las abreviaturas tues y thurs se admitían o no. las pruebas de las líneas 153 y 154 no se superaron, aunque deberían haberlo hecho [g2]. podemos corregirlas, junto a las pruebas de las líneas 163 a la 213, si realizamos los siguientes cambios en la función stringtomonthcode . 457 if ((result < 1) || (result > 12)) { result = -1; 458 for (int i = 0; i < monthnames.length; i++) { 459 if (s.equalsignorecase(shortmonthnames[i])) { 460 result = i + 1; 461 break; 462 } 463 if (s.equalsignorecase(monthnames[i])) { 464 result = i + 1; 465 break; 466 } 467 } 468 } la prueba comentada de la línea 318 descubre un error en el método getfollowingdayofweek (línea 672). el 25 de diciembre de 2004 fue sábado y el siguiente sábado fue el 1 de enero de 2005. sin embargo, al ejecutar la 339