376  Capítulo 14 ■ Ingeniería de seguridad  Desde luego, éstos no son los únicos conflictos de diseño importantes para la seguri- dad. Toda aplicación es diferente y el diseño de seguridad también debe tomar en cuenta el propósito, el carácter crítico y el entorno operacional de la aplicación. Por ejemplo, si se diseña un sistema militar, es necesario adoptar un modelo de clasificación de seguri-dad (secreto, ultrasecreto, etcétera). Si se diseña un sistema que mantiene información personal, debe considerarse la legislación sobre protección de datos que impone restric-ciones respecto a cómo se administra la información. Existe una relación estrecha entre confiabilidad y seguridad. El uso de redundancia y diversidad, que es fundamental para lograr confiabilidad, puede significar que un sis-tema resista y se recupere de ataques dirigidos a características o diseños específicos de implementación. Mecanismos de apoyo a alto nivel de disponibilidad pueden ayudar al sistema a recuperarse de los llamados ataques de negación de servicio, en los que la meta del atacante es hacer caer al sistema y detener su funcionamiento correcto. Diseñar un sistema para que sea seguro implica inevitablemente un compromiso. Desde luego, es posible desarrollar múltiples medidas de seguridad en un sistema, las cuales reducirán las probabilidades de que un ataque logre su cometido. Sin embargo, las medidas de seguridad requieren a menudo una gran labor adicional de computación y, además, afectan el rendimiento global de un sistema. Por ejemplo, se pueden reducir las posibilidades de que se muestre información confidencial al encriptar dicha información. No obstante, esto significa que los usuarios de la información tienen que esperar a que ésta se desencripte, lo cual hará más lento su trabajo. También existen tensiones entre seguridad y usabilidad. En ocasiones, las medidas de seguridad requieren que el usuario recuerde y proporcione información adicional (por ejemplo, contraseñas múltiples). Sin embargo, algunas veces el usuario olvida dicha infor-mación, de manera que la seguridad adicional significa que no puede usar el sistema. Por consiguiente, los diseñadores deben encontrar un equilibrio entre seguridad, rendimiento y usabilidad. Esto dependerá del tipo de sistema y de dónde se utilizará. Por ejemplo, en un sistema militar, los usuarios están familiarizados con los sistemas de alta seguridad, y también están deseosos de aceptar y seguir procesos que requieren comprobaciones perió-dicas. Sin embargo, en un sistema de comercio de acciones, las interrupciones de la opera-ción para comprobaciones de seguridad serían completamente inaceptables.  14.2.1 Diseño arquitectónico Como se estudió en el capítulo 11, la elección de arquitectura de software puede tener profundos efectos sobre las propiedades emergentes de un sistema. Si se usa una arqui-tectura inadecuada, tal vez sea muy difícil mantener en el sistema la confidencialidad e Ataques de negación de servicio Los ataques de negación de servicio tratan de derrumbar un sistema en red al bombardearlo con un enorme  número de peticiones de servicio. Esto supone una carga adicional sobre el sistema, para la cual no está diseñado, y excluye las peticiones legítimas de servicio. En consecuencia, el sistema puede volverse inaccesible porque se cae ante la enorme carga, o bien, los administradores del sistema deben sacarlo de línea para detener el flujo de peticiones. http://www.SoftwareEngineering-9.com/Web/Security/DoS.html M14_SOMMERVILLE_INGENIERIA_1ED_SE_366-392.indd   376M14_SOMMERVILLE_INGENIERIA_1ED_SE_366-392.indd   376 3/18/11   5:00:14 PM3/18/11   5:00:14 PM