208 capítulo 8 ■ pruebas de software podrían soportar fallas, porque los beneficios del uso exceden los costos de la recu- peración de fallas. ante tales situaciones, no es necesario dedicar mucho tiempo en la puesta a prueba del software. sin embargo, conforme el software se completa, los usuarios esperan que se torne más confiable, de modo que pueden requerirse prue-bas exhaustivas en versiones posteriores. 3. entorno de mercado cuando un sistema se comercializa, los vendedores del sis-tema deben considerar los productos competitivos, el precio que los clientes están dispuestos a pagar por un sistema y la fecha requerida para entregar dicho sistema. en un ambiente competitivo, una compañía de software puede decidir lanzar al mer-cado un programa antes de estar plenamente probado y depurado, pues quiere que sus productos sean los primeros en ubicarse. si un producto de software es muy económico, los usuarios tal vez toleren un nivel menor de fiabilidad. al igual que las pruebas de software, el proceso de verificación y validación impli-caría inspecciones y revisiones de software. estas últimas analizan y comprueban los requerimientos del sistema, los modelos de diseño, el código fuente del programa, e incluso las pruebas propuestas para el sistema. éstas son las llamadas técnicas v&v “estáticas” donde no es necesario ejecutar el software para verificarlo. la figura 8.2 indica que las inspecciones y las pruebas del software soportan v&v en diferentes eta-pas del proceso del software. las flechas señalan las etapas del proceso en que pueden usarse las técnicas. las inspecciones se enfocan principalmente en el código fuente de un sistema, aun cuando cualquier representación legible del software, como sus requerimientos o modelo de diseño, logre inspeccionarse. cuando un sistema se inspecciona, se utiliza el conoci-miento del sistema, su dominio de aplicación y el lenguaje de programación o modelado para descubrir errores. hay tres ventajas en la inspección del software sobre las pruebas: 1. durante las pruebas, los errores pueden enmascarar (ocultar) otras fallas. cuando un error lleva a salidas inesperadas, nunca se podrá asegurar si las anomalías de salida posteriores se deben a un nuevo error o son efectos colaterales del error original. puesto que la inspección es un proceso estático, no hay que preocuparse por las inte-racciones entre errores. en consecuencia, una sola sesión de inspección descubriría muchos errores en un sistema.modelos de diseño umlarquitectura de softwareespecificacion de requerimientosesquemas de base de datosprograma prototipo de sistemapruebasinspecciones figura 8.2 inspecciones y pruebas m08_sommerville_ingenieria_1ed_se_205-233.indd  208m08_sommerville_ingenieria_1ed_se_205-233.indd  208 3/18/11  5:39:59 pm3/18/11  5:39:59 pm