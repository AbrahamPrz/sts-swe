capítulo 6 modelado de los requerimientos 135 resultado una condición de error: “no hay plano configurado para esta casa.”9 esta condición de error se convierte en un escenario secundario. en este punto, ¿es posible que el actor encuentre otro comportamiento (por ejemplo, alguno que sea invocado por cierto evento fuera del control del actor)? otra vez, la respuesta es “sí”. a medida que ocurran los pasos 6 y 7, el sistema puede hallar una condición de alarma. esto dará como resultado que el sistema desplegará una notificación especial de alarma (tipo, ubicación, acción del sistema) y proporcionará al actor varias opciones relevantes según la naturaleza de la alarma. como este escenario secundario puede ocurrir en cualquier momento para práctica-mente todas las interacciones, no se vuelve parte del caso de uso avc-mvc. en vez de ello, se desarrollará un caso de uso diferente —condición de alarma encontrada — al que se hará referencia desde otros casos según se requiera. cada una de las situaciones descritas en los párrafos precedentes se caracteriza como una excepción al caso de uso. una excepción describe una situación (ya sea condición de falla o al- ternativa elegida por el actor) que ocasiona que el sistema presente un comportamiento algo distinto. cockburn [coc01b] recomienda el uso de una sesión de “lluvia de ideas” para obtener un conjunto razonablemente complejo de excepciones para cada caso de uso. además de las tres preguntas generales ya sugeridas en esta sección, también deben explorarse los siguientes as-pectos: • ¿existen casos en los que ocurra alguna “función de validación” durante este caso de uso? esto implica que la función de validación es invocada y podría ocurrir una potencial condición de error. • ¿hay casos en los que una función (o actor) de soporte falle en responder de manera apropiada? por ejemplo, una acción de usuario espera una respuesta pero la función que ha de responder se cae. • ¿el mal desempeño del sistema da como resultado acciones inesperadas o impropias? por ejemplo, una interfaz con base en web responde con demasiada lentitud, lo que da como resultado que un usuario haga selecciones múltiples en un botón de procesa-miento. estas selecciones se forman de modo equivocado y, en última instancia, generan un error. la lista de extensiones desarrollada como consecuencia de preguntar y responder estas pregun-tas debe “racionalizarse” [coc01b] con el uso de los siguientes criterios: una excepción debe describirse dentro del caso de uso si el software la puede detectar y debe manejarla una vez detectada. en ciertos casos, una excepción precipitará el desarrollo de otro caso de uso (el de manejar la condición descrita). 6.2.3 escritura de un caso de uso formal en ocasiones, para modelar los requerimientos es suficiente con los casos de uso informales presentados en la sección 6.2.1. sin embargo, cuando un caso de uso involucra una actividad crítica o cuando describe un conjunto complejo de etapas con un número significativo de ex-cepciones, es deseable un enfoque más formal. el caso de uso avc-mvc mostrado en el recuadro de la página 136 sigue el guión común para los casos de uso formales. el objetivo en contexto identifica el alcance general del caso de 9 en este caso, otro actor, administrador del sistema, tendría que configurar el plano de la casa, instalar e ini- cializar todas las cámaras (por ejemplo, asignar una identificación a los equipos) y probar cada una para garan- tizar que se encuentren accesibles por el sistema y a través del plano de la casa. 06pressman(126-157).indd  13506pressman(126-157).indd  135 14/1/10  14:29:1714/1/10  14:29:17