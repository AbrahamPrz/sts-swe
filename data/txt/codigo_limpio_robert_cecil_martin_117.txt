super(parent); matcher match = pattern.matcher(text); match.find(); addchildwidgets(match.group(1));} public string render() throws exception { stringbuffer html = new stringbuffer(“<b>”); html.append(childhtml()).append(“</b>”); return html.tostring(); } } este efecto aumenta todavía más si no centramos la vista. en el primer ejemplo, los distintos grupos de líneas saltan a la vista, mientras que en el segundo es una mezcla amorfa. la diferencia entre ambos listados es una ligera apertura vertical. densidad vertical si la apertura separa los conceptos, la densidad vertical implica asociaciones. por tanto, las líneas de código con una relación directa deben aparecer verticalmente densas. fíjese en cómo los comentarios sin sentido del listado 5-3 anulan la asociación entre las dos variables de instancia. listado 5-3 public class reporterconfig { /** * nombre de clase del escuchador */ private string m_classname; /** * propiedades del escuchador */ private list<property> m_properties = new arraylist<property>(); public void addproperty(property property) { m_properties.add(property); } el listado 5-4 es mucho más fácil de leer. lo apreciamos a simple vista o al menos yo lo hago. al mirarlo, veo que es una clase con dos variables y un método, sin tener que mover la cabeza ni la vista. el listado anterior nos 118