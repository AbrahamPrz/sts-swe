CAPÍTULO 24  CONCEPTOS DE ADMINISTRACIÓN DE PROYECTO 563 El ámbito del proyecto de software no debe tener ambigüedades ni ser incomprensible en los  niveles administrativo y técnico. Debe acotar un enunciado del ámbito del software; es decir, los datos cuantitativos (por ejemplo, número de usuarios simultáneos, entorno objetivo, máxi-mo tiempo de respuesta permisible) se enuncian de manera explícita, se anotan las restricciones y/o limitaciones (por ejemplo, el costo del producto restringe el tamaño de la memoria) y se describen los factores mitigantes (por ejemplo, los algoritmos deseados están bien entendidos y disponibles en Java). 24.3.2  Descomposición del problema La descomposición del problema, en ocasiones llamada división o elaboración del problema , es  una actividad que se asienta en el centro del análisis de requerimientos del software (capítulos 6 y 7). Durante la actividad de determinación del ámbito, no se hacen intentos por descomponer completamente el problema. En vez de ello, la descomposición se aplica en dos áreas principa-les: 1) la funcionalidad y el contenido (información) que deben entregarse y 2) el proceso que se usará para entregarlo. Los seres humanos tienden a aplicar una estrategia de “divide y vencerás” cuando se enfren- tan a un problema complejo. Dicho de manera simple, un problema complejo se divide en pro-blemas más pequeños que son más manejables. Ésta es la estrategia que se aplica conforme comienza la planeación del proyecto. Las funciones del software, descritas en el enunciado del ámbito, se evalúan y refinan para proporcionar más detalle antes de comenzar la estimación (capítulo 26). Puesto que tanto las estimaciones de costo como las de calendario se orientan funcionalmente, con frecuencia es útil cierto grado de descomposición. De igual modo, los prin-cipales objetos de contenido o datos se descomponen en sus partes constituyentes, lo que pro-porciona una comprensión razonable de la información que se va a producir con el software. Tome como ejemplo un proyecto que construirá un nuevo producto de procesamiento de  palabras. Entre las características únicas del producto, están la entrada continua de voz, así como un teclado virtual a través de una pantalla táctil, características extremadamente sofisti-cadas de “edición de copia automática”, capacidad de plantilla de página, indexado automático y tabla de contenidos automática. El gerente del proyecto debe establecer primero un enunciado del ámbito que acote dichas características (y otras funciones más comunes, tales como edición, gestión de archivos y producción de documentos). Por ejemplo, ¿la entrada continua de voz requiere que el usuario “entrene” al producto? Específicamente: ¿qué capacidades ofrecerá el editor de copia? ¿Cuán sofisticadas serán las capacidades de la plantilla de página?, ¿éstas abar-carán las capacidades que requiere una pantalla táctil? Conforme avanza la determinación de ámbito, ocurre de manera natural un primer nivel de  división. El equipo de proyecto aprende que el departamento de mercadotecnia habló con los clientes potenciales y descubrió que las siguientes funciones deben ser parte de la edición au-tomática de copia: 1) corrector de vocabulario, 2) corrector gramatical, 3) comprobación de referencias para documentos grandes (por ejemplo, ¿una referencia a una entrada bibliográfica se encuentra en la lista de entrada en la bibliografía?), 4) implementación de una característica de hoja de estilo que imponga consistencia a través de un documento y 5) validación de refe-rencias de sección y capítulo para documentos grandes. Cada una de estas características re-presenta una subfunción por implementar en el software. Cada una puede refinarse aún más si la descomposición hace más sencilla la planificación.  24.4 E L PROCESO Las actividades del marco conceptual (capítulo 2) que caracterizan al proceso de software son aplicables a todos los proyectos de software. El problema es seleccionar el modelo de proceso que sea adecuado para el software que el equipo del proyecto someterá a ingeniería.Para desarrollar un plan de proyecto  razonable, debe descomponer el problema. Esto puede lograrse usando una lista de funciones o con casos de uso.CONSEJO 24Pressman(553-570).indd   56324Pressman(553-570).indd   563 19/1/10   23:34:4319/1/10   23:34:43