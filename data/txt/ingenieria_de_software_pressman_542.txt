CAPÍTULO 22  ADMINISTRACIÓN DE LA CONFIGURACIÓN DEL SOFTWARE 511 “captura todos los cambios habidos en todos los archivos que hay en la configuración, junto con  la razón de los cambios y detalles de quién y cuándo hizo los cambios”. Algunos conjuntos de cambio nominados pueden identificarse para una aplicación o sistema.  Esto permite construir una versión del software al especificar los conjuntos de cambios (por nombre) que deben aplicarse a la configuración de referencia. Para lograr esto, se aplica un enfoque de modelado de sistema. El modelo del sistema contiene: 1) una plantilla que incluye una  jerarquía de componente y un “orden de construcción” para los componentes que describen cómo debe construirse el sistema, 2) reglas de construcción y 3) reglas de verificación. 4 Durante las décadas pasadas se propusieron algunos enfoques automatizados diferentes  para el control de versión. La diferencia principal en los enfoques es la sofisticación de los atri-butos que se usan para construir versiones específicas y variantes de un sistema y la mecánica del proceso para su construcción. 4 También es posible consultar el modelo del sistema para valorar cómo impactará un cambio en un componente  a otros componentes.El uso de herramientas para lograr el control de ver- sión es esencial para la administración efectiva del cam- bio. El sistema de versiones concurrentes (SVC) es una herramienta  ampliamente utilizada para el control de versiones. Originalmente diseñada para código fuente, pero útil para cualquier archivo basado en texto, el SVC 1) establece un repositorio simple, 2) mantiene todas las versiones de un archivo en un solo archivo nominado al almace-nar sólo las diferencias entre versiones progresivas del archivo origi-nal y 3) protege a un archivo contra los cambios simultáneos al esta-blecer diferentes directorios para cada desarrollador, lo que, por tanto, aísla uno de otros. El SVC mezcla los cambios cuando cada desarrollador completa su trabajo. Es importante observar que el SVC no es un sistema “de construc- ción”, es decir, no construye una versión específica del software. Deben integrarse otras herramientas (por ejemplo, Makefile) con el SVC para lograr esto. El SVC no implanta un proceso de control de cambio (por ejemplo, solicitudes de cambio, reportes de cambio, ras-treo de errores). Incluso con estas limitaciones, el SVC “es un dominante sistema de  control de versión, de red transparente y código abierto, [que] es útil para todos, desde desarrolladores individuales hasta grandes equipos distribuidos” [CVS07]. Su arquitectura cliente-servidor permite a los usuarios acceder a los archivos mediante conexiones de internet, y su filosofía de código abierto lo vuelve disponible para la mayoría de las plataformas más usadas. SVC está disponible sin costo alguno para entornos Windows,  Mac OS, LINUX y UNIX. Vea [CVS07] para más detalles.HERRAMIENTAS  DE SOFTWARE El Sistema de Versiones Concurrentes (SVC) 22.3.3  Control de cambio La realidad del control de cambio en un contexto moderno de ingeniería de software la resume  bellamente James Bach [Bac98]: El control del cambio es vital. Pero las fuerzas que lo hacen necesario también lo hacen desconcer- tante. Nos preocupamos por el cambio porque una pequeña perturbación en el código puede crear una gran falla en el producto. Pero también puede corregir un gran fallo o permitir maravillosas nuevas capacidades. Nos preocupamos por el cambio porque un solo desarrollador granuja podría hundir el proyecto, aunque en las mentes de dichos granujas se originan ideas brillantes y un abrumador pro-ceso de control del cambio podría efectivamente desalentarlos de hacer trabajo creativo. Bach reconoce que se está frente a un acto de equilibrio. Mucho control del cambio y se crearán  problemas. Muy poco y se crearán otros problemas. Para un gran proyecto de software, el cambio descontrolado conduce rápidamente al caos.  Para tales proyectos, el control del cambio combina procedimientos humanos y herramientas Cita: “El arte de avanzar es preservar  el orden en medio del cambio y preservar el cambio en medio del orden.” Alfred North Whitehead 22Pressman(501-525).indd   51122Pressman(501-525).indd   511 19/1/10   17:12:0919/1/10   17:12:09