642 parte cuatro administración de proyectos de software verificación y mantenimiento. además, la ambigüedad en la especificación, la incertidumbre técnica, la obsolescencia técnica y la tecnología “de punta” también son factores de riesgo. los riesgos técnicos ocurren porque el problema es más difícil de resolver de lo que se creía. los riesgos empresariales amenazan la viabilidad del software que se va a construir y con frecuencia ponen en peligro el proyecto o el producto. los candidatos para los cinco principales riesgos empresariales son: 1) construir un producto o sistema excelente que realmente no se quiere (riesgo de mercado), 2) construir un producto que ya no encaje en la estrategia em-presarial global de la compañía (riesgo estratégico), 3) construir un producto que el equipo de ventas no sabe cómo vender (riesgo de ventas), 4) perder el apoyo de los administradores debido a un cambio en el enfoque o en el personal (riesgo administrativo) y 5) perder apoyo presupues-tal o de personal (riesgos presupuestales). es extremadamente importante observar que la categorización simple de riesgos no siempre funciona. algunos de ellos son simplemente impredecibles por adelantado. otra categorización general de los riesgos es la propuesta por charette [cha89]. los riesgos conocidos son aquellos que pueden descubrirse después de una evaluación cuidadosa del plan del proyecto, del entorno empresarial o técnico donde se desarrolla el proyecto y de otras fuen-tes de información confiables (por ejemplo, fecha de entrega irreal, falta de requisitos documen-tados o ámbito de software, pobre entorno de desarrollo). los riesgos predecibles se extrapolan de la experiencia en proyectos anteriores (por ejemplo, rotación de personal, pobre comunica-ción con el cliente, disolución del esfuerzo del personal conforme se atienden las solicitudes de mantenimiento). los riesgos impredecibles son el comodín en la baraja. pueden ocurrir y lo ha- cen, pero son extremadamente difíciles de identificar por adelantado. cita: “los proyectos sin riesgos reales son perdedores. casi siempre están desprovistos de beneficio; es por esto por lo que no se hicieron años atrás.” tom demarco y tim lister el software engineering institute (sei) (www.sei.cmu. edu) identifica siete principios que “ofrecen un marco con- ceptual para lograr una administración de riesgo efectiva”. éstos son: mantener una perspectiva global: ver los riesgos del software dentro del contexto de un sistema donde el riesgo es un compo- nente y el problema empresarial que se pretende resolver. tomar una visión de previsión: pensar en los riesgos que pue- den surgir en el futuro (por ejemplo, debido a cambios en el soft-ware); establecer planes de contingencia de modo que los eventos futuros sean manejables. alentar la comunicación abierta: si alguien enuncia un riesgo potencial, no lo ignore. si un riesgo se propone de manera infor-mal, considérelo. aliente a todos los participantes y usuarios a sugerir riesgos en cualquier momento.integrar: una consideración de riesgo debe integrarse en el proceso del software. enfatizar un proceso continuo: el equipo debe vigilar a lo largo del proceso de software, modificar los riesgos identifica-dos conforme se conozca más información y agregar unos nuevos conforme se logre mejor comprensión. desarrollar una visión de producto compartida: si todos los participantes comparten la misma visión del software, es pro-bable que haya mejor identificación y valoración del riesgo. alentar el trabajo en equipo: los talentos, habilidades y cono- cimientos de todos los participantes deben reunirse cuando se rea-licen actividades de administración de riesgos.información siete principios de la administración de riesgos 28.3 i dentificación de riesgos la identificación de riesgos es un intento sistemático por especificar amenazas al plan del pro- yecto (estimaciones, calendario, carga de recursos, etc.). al identificar los riesgos conocidos y predecibles, el gerente de proyecto da un primer paso para evitarlos cuando es posible y para controlarlos cuando es necesario. existen dos tipos distintos de riesgos para cada una de las categorías que se presentaron en la sección 28.2: riesgos genéricos y riesgos específicos del producto. los riesgos genéricos son una amenaza potencial a todo proyecto de software. los riesgos específicos del producto pueden 28pressman(640-654).indd  64228pressman(640-654).indd  642 26/1/10  17:33:5326/1/10  17:33:53