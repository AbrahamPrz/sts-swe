376 PARTE TRES  ADMINISTRACIÓN DE LA CALIDAD de seis desviaciones estándar —3.4 casos (defectos) por millón de ocurrencias—, lo que implica  un estándar de calidad extremadamente alto. La metodología Seis Sigma define tres etapas fundamentales: • Definir los requerimientos del cliente y los que se le entregan, así como las metas del proyecto a través de métodos bien definidos de comunicación con el cliente. • Medir el proceso existente y su resultado para determinar el desempeño actual de la calidad (recabar métricas para los defectos). • Analizar las métricas de los defectos y determinar las pocas causas vitales. Si se trata de un proceso de software existente que se requiere mejorar, Seis Sigma sugiere dos etapas adicionales: • Mejorar el proceso, eliminando las causas originales de los defectos. • Controlar el proceso para asegurar que el trabajo futuro no vuelva a introducir las causas de los defectos. Estas etapas fundamentales y adicionales en ocasiones son conocidas como método DMAMC (definir, medir, analizar, mejorar y controlar). Si una organización va a desarrollar un proceso de software (en vez de mejorar uno exis- tente), a las etapas fundamentales se agregan las siguientes: • Diseñar el proceso para 1) evitar las causas originales de los defectos y 2) cumplir los requerimientos del cliente. • Verificar que el modelo del proceso en realidad evite los defectos y cumpla los requeri-mientos del cliente. Esta variación en ocasiones es denominada método DMADV (definir, medir, analizar, diseñar y verificar). El estudio detallado de Seis Sigma se deja a fuentes dedicadas a ese tema. Si el lector tiene  interés al respecto, consulte [ISI08], [Pyz303] y [Sne03].  16.6 C ONFIABILIDAD  DEL SOFTWARE No hay duda de que la confiabilidad de un programa de cómputo es un elemento importante de su calidad general. Si un programa falla repetida y frecuentemente en su desempeño, importa poco si otros factores de la calidad del software son aceptables. La confiabilidad del software, a diferencia de muchos otros factores de la calidad, se mide  y estima directamente mediante el uso de datos históricos del desarrollo. La confiabilidad del  software se define en términos estadísticos como “la probabilidad que tiene un programa de  cómputo de operar sin fallas en un ambiente específico por un tiempo específico” [Mus87]. Para ilustrar lo anterior, digamos que se estima que el programa X tiene una confiabilidad de 0.999  durante ocho horas de procesamiento continuo. En otras palabras, si el programa X fuera a  ejecutarse 1 000 veces y requiriera un total de ocho horas de tiempo de procesamiento continuo (tiempo de procesamiento), es probable que operara correctamente (sin fallas) 999 veces. Siempre que se trate de la confiabilidad del software, surge una pregunta crucial: ¿qué signi- fica el término falla? En el contexto de cualquier análisis de la calidad y confiabilidad del soft-ware, la falla significa la falta de conformidad con los requerimientos del software. Pero, incluso con esta definición, hay gradaciones. Las fallas pueden ser leves o catastróficas. Una falla podría corregirse en segundos, mientras que otra tal vez requiera de varias semanas o meses de trabajo para ser corregida. Para complicar más el asunto, la corrección de una falla quizá dé como re-sultado la introducción de otros errores que a su vez originen otras fallas.¿Cuáles son las etapas  fundamentales de la metodología Seis Sigma?? Cita: “El precio inevitable de la con-fiabilidad es la simplicidad.” C. A. R. Hoare 16Pressman(368-382).indd   37616Pressman(368-382).indd   376 14/1/10   17:02:1614/1/10   17:02:16