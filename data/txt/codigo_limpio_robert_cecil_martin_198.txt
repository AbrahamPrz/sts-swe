admite funciones sql como instrucciones update . cuando la clase sql tenga que admitir una instrucción update , tendremos que abrirla para realizar modificaciones. el problema de abrir una clase es el riesgo que conlleva. cualquier modificación puede afectar a otro código de la clase. debe probarse concienzudamente. listado 10-9 clase que debemos abrir para realizar cambios. public class sql { public sql(string table, column[] columns) public string create() public string insert(object[] fields) public string selectall() public string findbykey(string keycolumn, string keyvalue) public string select(column column, string pattern) public string select(criteria criteria) public string preparedinsert() private string columnlist(column[] columns) private string valueslist(object[] fields, final column[] columns) private string selectwithcriteria(string criteria) private string placeholderlist(column[] columns) } la clase sql debe cambiar al añadir un nuevo tipo de instrucción. también debe cambiar cuando variemos los detalles de un tipo de instrucción concreto; por ejemplo, si tenemos que modificar la funcionalidad select para admitir selecciones secundarias. estos dos motivos de cambio significan que la clase sql incumple srp. podemos detectar este incumplimiento desde un punto de vista organizativo. el método outline de sql muestra que hay métodos privados, como selectwithcriteria , que parecen relacionarse únicamente con instrucciones select . el comportamiento de métodos privados aplicados a un pequeño subconjunto de una clase puede ser una heurística útil para detectar zonas que mejorar. sin embargo, la verdadera razón debe ser el cambio del sistema. si la clase sql se considera totalmente lógica, no debemos preocuparnos por separar las responsabilidades. si no necesitamos funcionalidad de actualización en el futuro, podemos olvidarnos de sql . pero si tenemos que 199