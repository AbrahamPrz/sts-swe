prioridad de las cuatro. por ello, aunque sea importante reducir la cantidad de clases y funciones, es más importante contar con pruebas, eliminar duplicados y expresarse correctamente. conclusión ¿existen prácticas sencillas que puedan reemplazar a la experiencia? por supuesto que no. sin embargo, las prácticas descritas en este capítulo y en el libro son una forma cristalizada de décadas de experiencia de muchos autores. la práctica del diseño correcto anima y permite a los programadores adoptar principios y patrones que en caso contrario tardarían años en aprender. bibliografía [xpe] : extreme programming explained: embrace change , kent beck, addison wesley, 1999. [gof] : design patterns: elements of reusable object oriented software , gamma et al., addison-wesley, 1996. 234