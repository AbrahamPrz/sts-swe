438 PARTE TRES  ADMINISTRACIÓN DE LA CALIDAD  19.1 A MPLIACIÓN  DE LA DEFINICIÓN  DE LAS PRUEBAS La construcción de software orientado a objetos comienza con la creación de modelos de re- querimientos (análisis) y de diseño.1 Debido a la naturaleza evolutiva del paradigma de ingenie- ría del software OO, dichos modelos comienzan como representaciones relativamente informa-les de los requisitos de sistema y evolucionan hacia modelos detallados de clases, relaciones de clase, diseño y asignación de sistema, y diseño de objetos (que incorpora un modelo de conec-tividad de objetos mediante mensajería). En cada etapa, los modelos pueden “probarse” con la intención de descubrir errores previamente a su propagación hacia la siguiente iteración. Puede argumentarse que la revisión de los modelos de análisis y de diseño OO es especial- mente útil, pues los mismos constructos semánticos (por ejemplo, clases, atributos, operacio-nes, mensajes) aparecen en los niveles de análisis, diseño y código. Por tanto, un problema en la definición de los atributos de clase que se descubra durante el análisis soslayará los efectos colaterales que puedan ocurrir si el problema no se descubriera hasta el diseño o el código (o incluso en la siguiente iteración de análisis). Por ejemplo, considere una clase en la que se define un número de atributos durante la pri- mera iteración de análisis. Un atributo extraño se anexa a la clase (debido a una mala interpre-tación del dominio del problema). Entonces pueden especificarse dos operaciones para mani-pular el atributo. Se lleva a cabo una revisión y un experto en dominio puntualiza el problema. Al eliminar el atributo extraño en esta etapa, durante el análisis pueden evitarse los siguientes problemas y un esfuerzo innecesario:  1. Tal vez se generen subclases especiales para alojar el atributo innecesario o las excep- ciones. Se evita el trabajo in volucrado en la creación de subclases innecesarias.  2. Una mala interpretación de la definición de clase puede conducir a relaciones de clase  incorrectas o extrañas.  3. El comportamiento del sistema o sus clases puede caracterizarse de manera inade- cuada para alojar el atributo extraño. Si el problema no se descubre durante el análisis y se propaga aún más, podrían ocurrir los  siguientes problemas durante el diseño (que se evitarían con la revisión temprana):  1. Durante el diseño del sistema, puede ocurrir la asignación inadecuada de la clase a un  subsistema o a algunas tareas.  2. Puede emplearse trabajo de diseño innecesario a fin de crear el diseño de procedimien- tos para las operaciones que abordan el atributo extraño.  3. El modelo de mensajería será incorrecto (porque los mensajes deben diseñarse para las  operaciones que son extrañas). Si el problema sigue sin detectarse durante el diseño y pasa hacia la actividad de codificación,  se empleará esfuerzo considerable para generar código que implemente un atributo innecesa-rio, dos operaciones innecesarias, mensajes que activen la comunicación interobjetos y mu-chos otros conflictos relacionados. Además, la prueba de la clase absorberá más tiempo que el necesario. Una vez que finalmente se haya descubierto el problema, la modificación del sistema debe realizarse con el potencial siempre presente de efectos colaterales que se generen por el cambio. Durante las últimas etapas de su desarrollo, los modelos de análisis (A OO) y de diseño (DOO)  orientado a objetos proporcionan información sustancial acerca de la estructura y comporta- 1 Las técnicas de modelado de análisis y diseño se presentan en la parte 2 de este libro. Los conceptos básicos de  OO se presentan en el apéndice 2.Aunque la revisión de los modelos de  análisis y diseño OO es parte integral de “la prueba” de una aplicación OO, reconozca que ésta no es suficiente en y por sí misma. También debe realizar pruebas ejecutables.CONSEJO Cita: “Las herramientas que usamos tienen profunda (¡y tortuosa!) influencia sobre nuestros hábi-tos de pensamiento y, por tanto, sobre nuestras habilidades de pensamiento.” Edsger Dijkstra 19Pressman(437-452).indd   43819Pressman(437-452).indd   438 21/1/10   10:58:3221/1/10   10:58:32