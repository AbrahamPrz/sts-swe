capítulo 7 modelado de los requerimientos 173 • sensorrealpasivo: define los sensores reales pasivos. • resumen de sensoractivo: define una interfaz para los sensores activos. • sensorbooleanoactivo: define los sensores booleanos activos. • sensorenteroactivo: define los sensores enteros activos. • sensorrealactivo: define los sensores reales activos. • resumen de actuador: define una interfaz para los actuadores. • actuadorbooleano: define los actuadores booleanos. • actuadorentero: define los actuadores enteros. • actuadorreal: define los actuadores reales. • cálculodecomponente: parte central del controlador; obtiene los datos de los sensores y calcula la respuesta requerida para los actuadores. • sensorcomplejoactivo: los sensores complejos activos tienen la funcionalidad básica de la clase sensoractivo, pero es necesario especificar métodos y atributos adicionales más elaborados. • sensorcomplejopasivo: los sensores complejos pasivos tienen la funcionalidad básica de la clase abstracta sensorpasivo, pero se necesita especificar métodos y atributos adicionales más elaborados. • actuadorcomplejo: los actuadores complejos también tienen la funcionalidad básica de la clase abstracta actuador, pero se requiere especificar métodos y atributos adicio-nales más elaborados. colaboraciones. esta sección describe cómo interactúan los objetos y clases entre sí, y cómo efectúa cada uno sus responsabilidades. • cuando cálculodecomponente necesita actualizar el valor de un sensorpasivo, consulta a los sensores y solicita el valor enviando el mensaje apropiado. • los sensoresactivos no son consultados. inician la transmisión de los valores del sensor a la unidad de cálculo, con el uso del método apropiado para establecer el valor en cálculodecomponente. durante un tiempo especificado, envían un latido de vida al menos una vez con el fin de actualizar sus parámetros de tiempo con el reloj del sistema. • cuando cálculodecomponente necesita establecer el valor de un actuador, envía el valor a éste. • cálculodecomponente consulta y establece el estado de operación de los sensores y actuadores por medio de los métodos apropiados. si un estado de operación es cero, entonces se envía el error al manejadordefallas, clase que contiene métodos para manejar mensajes de error, tales como reiniciar un mecanismo más elaborado de recu-peración o un dispositivo de respaldo. si no es posible la recuperación, entonces el sistema sólo usa el último valor conocido para el sensor o uno preestablecido. • los sensoresactivos ofrecen métodos para agregar o retirar los evaluadores o evalúan rangos de los componentes que quieren que reciban los mensajes en caso de un cambio de valor. consecuencias 1. las clases sensor y actuador tienen una interfaz común. 2. sólo puede accederse a los atributos de clase a través de mensajes y la clase decide si se aceptan o no. por ejemplo, si se establece el valor de un actuador por arriba del 07pressman(158-182).indd  17307pressman(158-182).indd  173 14/1/10  14:19:4114/1/10  14:19:41