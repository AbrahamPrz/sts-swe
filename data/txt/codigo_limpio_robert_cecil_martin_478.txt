1900))); 288 assertequals(d(27, february, 1900), addmonths(1, d(27, january, 1900))); 289 290 assertequals(d(30, june, 1900), addmonths(5, d(31, january, 1900))); 291 assertequals(d(30, june, 1901), addmonths(17, d(31, january, 1900))); 292 293 assertequals(d(29, february, 1904), addmonths(49, d(31, january, 1900))); 294 295 } 296 297 public void testaddyears() throws exception { 298 assertequals(d(1, january, 1901), addyears(1, d(1, january, 1900))); 299 assertequals(d(28, february, 1905), addyears(1, d(29, february, 1904))); 300 assertequals(d(28, february, 1905), addyears(1, d(28, february, 1904))); 301 assertequals(d(28, february, 1904), addyears(1, d(28, february, 1903))); 302 } 303 304 public void testgetpreviousdayofweek() throws exception { 305 assertequals(d(24, february, 2006), getpreviousdayofweek(friday, d(1, march, 2006))); 306 assertequals(d(22, february, 2006), getpreviousdayofweek(wednesday, d(1, march, 2006))); 307 assertequals(d(29, february, 2004), getpreviousdayofweek(sunday, d(3, march, 2004))); 308 assertequals(d(29, december, 2004), getpreviousdayofweek(wednesday, d(5, january, 2005))); 309 310 try { 311 getpreviousdayofweek(-1, d(1, january, 2006)); 312 fail(“invalid day of week code should throw exception”); 313 } catch (illegalargumentexception e) { 314 } 315 } 316 317 public void testgetfollowingdayofweek() throws exception { 318 // assertequals(d(1, january, 2005),getfollowingdayofweek(saturday, d(25, december, 2004))); 319 assertequals(d(1, january, 2005), getfollowingdayofweek(saturday, d(26, december, 2004))); 320 assertequals(d(3, march, 2004), getfollowingdayofweek(wednesday, d(28, february, 2004))); 321 479