capítulo 27 calendarización del proyecto 621 si el lector ha trabajado en el mundo del software durante algunos años, puede terminar la historia. no es de sorprender que el joven ingeniero1 se quedara en 90 por ciento de avance durante todo el proyecto y terminara (con la ayuda de otros) sólo un mes más tarde. esta historia se ha repetido decenas de miles de veces entre los desarrolladores de software durante las pasadas cinco décadas. la gran pregunta es por qué. 27.1 c onceptos básicos aunque existen muchas razones por las que el software se entrega tardíamente, la mayoría pueden rastrearse en una o más de las siguientes causas fundamentales: • una fecha límite irreal establecida por alguien externo al equipo de software y que fuerza a los gerentes y profesionales. • requerimientos del cliente variables que no se reflejan en cambios del calendario. • una honesta subestimación de la cantidad de esfuerzo y/o número de recursos que se requerirán para hacer el trabajo. • riesgos predecibles y/o impredecibles que no se consideraron cuando comenzó el proyecto. • dificultades humanas que no podían preverse por anticipado. • falta de comunicación entre el personal del proyecto que da como resultado demoras. • falta de comunicación entre el equipo de trabajo que se traduce en retrasos. • una falla por parte de la administración del proyecto para reconocer que el proyecto tiene retrasos en el calendario y una falta de acción para corregir el problema. las fechas límite agresivas (léase “irreales”) son un hecho de la vida en el negocio del soft- ware. en ocasiones, tales fechas límite se demandan por razones legítimas, desde el punto de vista de la persona que las establece. pero el sentido común dice que la legitimidad también debe percibirla el personal que hace el trabajo. napoleón dijo una vez: “cualquier comandante que se comprometa a llevar a cabo un plan que considere defectuoso está equivocado; debe plantear sus razones, insistir en que se cambie el plan y finalmente ofrecer formalmente su renuncia en lugar de ser el instrumento de la derrota de su ejército”. éstas son duras palabras que muchos gerentes de proyecto de software deberían ponderar. las actividades de estimación estudiadas en el capítulo 26 y las técnicas de calendarización descritas en este capítulo con frecuencia se implementan bajo la restricción de una fecha límite definida. si las mejores estimaciones indican que la fecha límite es irreal, un gerente de proyecto competente debe “proteger a su equipo contra la presión excesiva [calendario]... [y] devolver la presión a quienes la originaron” [pag85]. para ilustrar lo anterior, suponga que a su equipo de software se le pide construir un contro- lador en tiempo real para un instrumento de diagnóstico médico que debe introducirse en el mercado en nueve meses. después de realizar la estimación y el análisis de riesgo cuidado-samente (capítulo 28), llega a la conclusión de que el software, como se solicitó, requerirá 14 meses para su creación con el personal que se tiene disponible. ¿cómo procedería? es irreal marchar hacia la oficina del cliente (en este caso el probable cliente es mercadotec- nia/ventas) y demandar que se cambie la fecha de entrega. las presiones del mercado externo dictaron la fecha y el producto debe liberarse. es igualmente temerario rechazar el compromiso de realizar el trabajo (desde el punto de vista profesional). de modo que, ¿qué hacer? ante esta situación, los autores recomiendan los siguientes pasos: 1 en caso de que el lector se lo pregunte, esta historia es autobiográfica.cita: “los calendarios excesivos o irracionales son probablemente la influencia más destructiva en todo el software.” capers jones cita: “me encantan las fechas límite. me gusta el zumbido que produ-cen cuando pasan volando.” douglas adams 27pressman(620-639).indd  62127pressman(620-639).indd  621 26/1/10  19:47:4026/1/10  19:47:40