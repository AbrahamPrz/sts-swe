8.1 ■ Pruebas de desarrollo  219  8.1.4 Pruebas del sistema Las pruebas del sistema durante el desarrollo incluyen la integración de componentes  para crear una versión del sistema y, luego, poner a prueba el sistema integrado. Las pruebas de sistema demuestran que los componentes son compatibles, que interactúan correctamente y que transfieren los datos correctos en el momento adecuado a través de sus interfaces. Evidentemente, se traslapan con las pruebas de componentes, pero existen dos importantes diferencias: 1. Durante las pruebas de sistema, los componentes reutilizables desarrollados por  separado y los sistemas comerciales pueden integrarse con componentes desarrolla-dos recientemente. Entonces se prueba el sistema completo. 2. Los componentes desarrollados por diferentes miembros del equipo o de grupos pueden integrarse en esta etapa. La prueba de sistema es un proceso colectivo más que individual. En algunas compañías, las pruebas del sistema implican un equipo de prueba independiente, sin la inclusión de diseñadores ni de programadores.  Cuando se integran componentes para crear un sistema, se obtiene un comportamiento emergente. Esto significa que algunos elementos de funcionalidad del sistema sólo se hacen evidentes cuando se reúnen los componentes. Éste podría ser un comportamiento emergente planeado que debe probarse. Por ejemplo, usted puede integrar un compo-nente de autenticación con un componente que actualice información. De esta manera, tiene una característica de sistema que restringe la información actualizada de usuarios autorizados. Sin embargo, algunas veces, el comportamiento emergente no está planeado ni se desea. Hay que desarrollar pruebas que demuestren que el sistema sólo hace lo que se supone que debe hacer. Por lo tanto, las pruebas del sistema deben enfocarse en poner a prueba las interaccio-nes entre los componentes y los objetos que constituyen el sistema. También se prueban componentes o sistemas reutilizables para acreditar que al integrarse nuevos componen-tes funcionen como se esperaba. Esta prueba de interacción debe descubrir aquellos bugs de componente que sólo se revelan cuando lo usan otros componentes en el sistema. Las pruebas de interacción también ayudan a encontrar interpretaciones erróneas, cometidas por desarrolladores de componentes, acerca de otros componentes en el sistema. Por su enfoque en las interacciones, las pruebas basadas en casos son un enfoque efec-tivo para la prueba del sistema. Normalmente, cada caso de uso es implementado por Integración y pruebas incrementales Las pruebas de sistema implican integrar diferentes componentes y, después, probar el sistema integrado  que se creó. Siempre hay que usar un enfoque incremental para la integración y las pruebas (es decir, se debe incluir un componente, probar el sistema, integrar otro componente, probar de nuevo y así sucesivamente). Esto significa que, si ocurren problemas, quizá se deban a interacciones con el componente que se integró más recientemente. La integración y las pruebas incrementales son fundamentales para los métodos ágiles como XP, donde las  pruebas de regresión (véase sección 8.2) se efectúan cada vez que se integra un nuevo incremento. http://www.SoftwareEngineering-9.com/Web/Testing/Integration.html M08_SOMMERVILLE_INGENIERIA_1ED_SE_205-233.indd   219M08_SOMMERVILLE_INGENIERIA_1ED_SE_205-233.indd   219 3/18/11   5:39:59 PM3/18/11   5:39:59 PM