462 parte tres administración de la calidad guión en el lado cliente. las pruebas de caja negra se realizan para descubrir cualquier error en el procesamiento conforme se ejecuta el guión. estas pruebas con frecuencia se aco- plan con pruebas de formularios porque la entrada del guión con frecuencia se deriva de los datos proporcionados como parte del procesamiento de formulario. debe realizarse una prueba de compatibilidad para garantizar que el lenguaje del guión elegido funcionará adecuadamen-te en las configuraciones de entorno que soporten la webapp. además de probar el guión en sí, splaine y jaskiel [spl01] sugieren que “debe asegurarse de que los estándares [de webapps] de la compañía enuncien el lenguaje y versión preferidos del lenguaje de guión que se va a usar para la escritura de guiones en el lado cliente (y en el lado servidor)”. html dinámico. cada página web que contenga html dinámico se ejecuta para asegurar que el despliegue dinámico es correcto. además, debe llevarse a cabo una prueba de compati-bilidad para asegurarse que el html dinámico funciona adecuadamente en las configuraciones de entorno que soportan la webapp. ventanas pop-up. una serie de pruebas garantiza que 1) la aparición instantánea tiene el tamaño y posición adecuadas, 2) la aparición no cubre la ventana de la webapp original, 3) el diseño estético de la aparición es consistente con el diseño estético de la interfaz y 4) las barras de desplazamiento y otros mecanismos de control anexados a la ventana de aparición se ubican y funcionan de manera adecuada, como se requiere. guiones cgi. las pruebas de caja negra se realizan con énfasis sobre la integridad de los datos (conforme los datos pasan al guión cgi) y del procesamiento del guión (una vez recibidos los datos validados). además, la prueba de rendimiento puede realizarse para garantizar que la configuración del lado servidor puede alojar las demandas de procesamiento de múltiples in vo- caciones de los guiones cgi [spl01]. contenido de str eaming. las pruebas deben demostrar que los datos de streaming están actualizados, que se despliegan de manera adecuada y que pueden suspenderse sin error y re-anudarse sin dificultad. cookies. se requieren pruebas tanto del lado servidor como del lado cliente. en el primero, las pruebas deben garantizar que una cookie se construyó adecuadamente (que contiene datos correctos) y que se transmitió de manera adecuada al lado cliente cuando se solicitó contenido o funcionalidad específico. además, la persistencia adecuada de la cookie se prueba para ase- gurar que su fecha de expiración es correcta. en el lado cliente , las pruebas determinan si la webapp liga adecuadamente las cookies existentes a una solicitud específica (enviada al servi- dor). mecanismos de interfaz específicos de aplicación. las pruebas se siguen conforme una lista de comprobación de funcionalidad y características que se definen mediante el mecanismo de interfaz. por ejemplo, splaine y jaskiel [spl01] sugieren la siguiente lista de comprobación para la funcionalidad carro de compras definida para una aplicación de comercio electrónico: • prueba de frontera (capítulo 18) del número mínimo y máximo de artículos que pueden colocarse en el carro de compras. • prueba de una solicitud de “salida” para un carro de compras vacío. • prueba de borrado adecuado de un artículo del carro de compras. • prueba para determinar si una compra vacía el contenido del carro. • prueba para determinar la persistencia del contenido del carro de compras (esto debe especificarse como parte de los requerimientos del cliente). • prueba para determinar si la webapp puede recordar el contenido del carro de compras en alguna fecha futura (suponiendo que no se realizó compra alguna).las pruebas de guión en el lado cliente y las pruebas asociadas con html dinámico deben repetirse siempre que se libera una nueva versión de un navegador popular.consejo 20pressman(453-477).indd  46220pressman(453-477).indd  462 21/1/10  10:58:0921/1/10  10:58:09