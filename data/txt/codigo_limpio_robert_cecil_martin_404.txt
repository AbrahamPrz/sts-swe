subproceso accede a una instancia de idgenerator . en este caso existe una sola ruta de ejecución y un único resultado garantizado: el valor devuelto es igual al valor de lastidused , y ambos son una unidad mayores que antes de invocar el método. ¿qué sucede si usamos dos subprocesos y no cambiamos el método? ¿cuáles son los posibles resultados si cada subproceso invoca incrementvalue una vez? ¿cuántas rutas de ejecución posibles hay? primero, los resultados (imagine que el valor inicial de lastidused es 93): el primer subproceso obtiene el valor 94, el segundo el valor 95 y lastidused es 95. el primer subproceso obtiene el valor 95, el segundo el valor 94 y lastidused es 95. el primer subproceso obtiene el valor 94, el segundo el valor 94 y lastidused es 94. el resultado final, aunque sorprendente, es posible. para ver los distintos resultados, debemos comprender las diferentes rutas de ejecución posibles y cómo las ejecuta la mvj. número de rutas para calcular el número de rutas de ejecución posibles, comenzaremos con el código de bytes generado. la única línea de java ( return ++lastidused; ) se convierte en ocho instrucciones de código de bytes . los dos subprocesos pueden intercambiar la ejecución de estas ocho instrucciones del mismo modo que mezclamos las cartas de una baraja [119] . incluso con sólo ocho cartas en cada mano, el número de posibles resultados es sorprendente. para este sencillo caso de n instrucciones en una secuencia, sin bucles ni condicionales y t subprocesos, el número total de posibles rutas de ejecución es igual a: 405