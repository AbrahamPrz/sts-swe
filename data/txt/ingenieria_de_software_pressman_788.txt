referencias 757 [hal90] hall, a., “seven myths of formal methods”, ieee software, septiembre 1990, pp. 11-20. [hal98] hall, e. m., managing risk: methods for software systems development, addison-wesley, 1998. [ham90] hammer, m., “reengineer work: don’t automate, obliterate”, harvard business review, julio-agosto 1990, pp. 104-112. [han95] hanna, m., “farewell to waterfalls”, software magazine, mayo 1995, pp. 38-46. [har98a] harmon, p., “navigating the distributed components landscape”, cutter it journal., vol. 11, núm. 2, diciembre 1998, pp. 4-11. [har98b] harrison, r., s. j. counsell y r. v. nithi, “an evaluation of the mood set of object-oriented software metrics”, ieee trans. software engineering, vol. se-24, núm. 6, junio 1998, pp. 491-496. [her00] herrmann, d., software safety and reliability, wiley-ieee computer society press, 2000. [het84] hetzel, w., the complete guide to software testing, qed information sciences, 1984. [het93] hetzel, w., making software measurement work, qed publishing, 1993. [hev93] hevner, a. r. y h. d. mills, “box structure methods for system development with objects”, ibm sys- tems journal, vol. 31, núm. 2, febrero 1993, pp. 232-251. [hig95] higuera, r. p., “team risk management”, crosstalk, u.s. dept. of defense, enero 1995, pp. 2-4. [hig00] highsmith, j., adaptive software development: an evolutionary approach to managing complex systems , dorset house publishing, 2000. [hig01] highsmith, j. (ed.), “the great methodologies debate: part 1”, cutter it journal., vol. 14, núm. 12, di- ciembre 2001. [hig02a] highsmith, j. (ed.), “the great methodologies debate: part 2”, cutter it journal., vol. 15, núm. 1, enero 2002. [hig02b] highsmith, j., agile software development ecosystems, addison-wesley, 2002. [hil05] hildreth, s., “buggy software: up from a low quality quagmire”, computerworld, julio 25, 2005, dis- ponible en www.computerworld.com/developmenttopics/development/story/ 0,10801,103378,00.html. [hil08] hillside.net, patterns catalog, 2008, disponible en http:/ /hillside.net/patterns/ onlinepatterncatalog. htm. [hob06] hoberman, s., data modeling made simple, technics publications, 2006. [hof00] hofmeister, c., r. nord y d. soni, applied software architecture, addison-wesley, 2000.[hof01] hofmann, c., et al., “approaches to software architecture”, 2001, descargable de http:/ /citeseer. nj.nec.com/84015.html. [hol06] holzner, s., design patterns for dummies, for dummies publishers, 2006. [hoo96] hooker, d., “seven principles of software development”, septiembre 1996, disponible en http:/ / c2.com/cgi/wikisevenprinciplesofsoftwaredevelopment. [hop90] hopper, m. d., “rattling sabre, new ways to compete on information”, harvard business review, mayo-junio 1990. [hor03] horch, j., practical guide to software quality management, 2a. ed., artech house, 2003. [hpr02] hypermedia design patterns repository, 2002, disponible en www.designpattern .lu.unisi.ch/index. htm. [hum95] humphrey, w., a discipline for software engineering, addison-wesley, 1995. [hum96] humphrey, w., “using a defined and measured personal software process”, ieee software, vol. 13, núm. 3, mayo-junio 1996, pp. 77-88. [hum97] humphrey, w., introduction to the personal software process, addison-wesley, 1997. [hum98] humphrey, w., “the three dimensions of process improvement, part iii: the team process”, cross- talk, abril 1998, disponible en www.stsc.hill.af.mil/crosstalk/1998/apr/dimensions.asp. [hum00] humphrey, w., introduction to the team software process , addison-w esley, 2000. [hun99] hunt, a., d. thomas y w. cunningham, the pragmatic programmer, addison- wesley, 1999. [hur83] hurley, r. b., decision tables in software engineering, van nostrand-reinhold, 1983. [hya96] hyatt, l. y l. rosenberg, “a software quality model and metrics for identifying project risks and assessing software quality”, nasa satc, 1996, disponible en http:/ /satc.gsfc.nasa.gov/support/stc_apr96/quality/stc_qual.html. [ibm81] “implementing software inspections”, notas del curso, ibm systems sciences institute, ibm corpo- ration, 1981. [ibm03] ibm, web services globalization model, 2003, disponible en www.ibm.com/ developerworks/webser- vices/library/ws-global/. [iee93a] ieee standards collection: software engineering, ieee standard 610.12-1990, ieee, 1993. [iee93b] ieee standard glossary of software engineering terminology, ieee, 1993. [iee00] ieee standard association, ieee-std-1471-2000, recommended practice for architectural description of software-intensive systems, 2000, disponible en http://standards.ieee.org/ reading/ieee/std_public/ description/se/1471-2000_desc.html. [ifp01] function point counting practices manual, release 4.1.1, international function point users group, 2001, disponible en www.ifpug.org/publications/manual.htm. [ifp05] function point bibliography/reference library, international function point users group, 2005, dis- ponible en www.ifpug.org/about/bibliography.htm. [isi08] isixsigma, llc, “new to six sigma: a guide for both novice and experiences quality practitioners”, 2008, disponible en www.isixsigma.com/library/content/six-sigma-newbie.asp. 35pressman(751-766)refer.indd  75735pressman(751-766)refer.indd  757 2/2/10  11:41:182/2/10  11:41:18