REFERENCIAS 757 [Hal90] Hall, A., “Seven Myths of Formal Methods”, IEEE Software, septiembre 1990, pp. 11-20. [Hal98] Hall, E. M., Managing Risk: Methods for Software Systems Development, Addison-Wesley, 1998. [Ham90] Hammer, M., “Reengineer Work: Don’t Automate, Obliterate”, Harvard Business Review, julio-agosto  1990, pp. 104-112. [Han95] Hanna, M., “Farewell to Waterfalls”, Software Magazine, mayo 1995, pp. 38-46. [Har98a] Harmon, P., “Navigating the Distributed Components Landscape”, Cutter IT Journal., vol. 11, núm. 2,  diciembre 1998, pp. 4-11. [Har98b] Harrison, R., S. J. Counsell y R. V. Nithi, “An Evaluation of the MOOD Set of Object-Oriented Software  Metrics”, IEEE Trans. Software Engineering, vol. SE-24, núm. 6, junio 1998, pp. 491-496. [Her00] Herrmann, D., Software Safety and Reliability, Wiley-IEEE Computer Society Press, 2000. [Het84] Hetzel, W., The Complete Guide to Software Testing, QED Information Sciences, 1984. [Het93] Hetzel, W., Making Software Measurement Work, QED Publishing, 1993. [Hev93] Hevner, A. R. y H. D. Mills, “Box Structure Methods for System Development with Objects”, IBM Sys- tems Journal, vol. 31, núm. 2, febrero 1993, pp. 232-251. [Hig95] Higuera, R. P., “Team Risk Management”, CrossTalk, U.S. Dept. of Defense, enero 1995, pp. 2-4. [Hig00] Highsmith, J., Adaptive Software Development: An Evolutionary Approach to Managing Complex Systems ,  Dorset House Publishing, 2000. [Hig01] Highsmith, J. (ed.), “The Great Methodologies Debate: Part 1”, Cutter IT Journal., vol. 14, núm. 12, di- ciembre 2001. [Hig02a] Highsmith, J. (ed.), “The Great Methodologies Debate: Part 2”, Cutter IT Journal., vol. 15, núm. 1,  enero 2002. [Hig02b] Highsmith, J., Agile Software Development Ecosystems, Addison-Wesley, 2002. [Hil05] Hildreth, S., “Buggy Software: Up from a Low Quality Quagmire”, Computerworld, julio 25, 2005, dis- ponible en www.computerworld.com/developmenttopics/development/story/ 0,10801,103378,00.html. [Hil08] Hillside.net, Patterns Catalog, 2008, disponible en http:/ /hillside.net/patterns/ onlinepatterncatalog. htm. [Hob06] Hoberman, S., Data Modeling Made Simple, Technics Publications, 2006. [Hof00] Hofmeister, C., R. Nord y D. Soni, Applied Software Architecture, Addison-Wesley, 2000.[Hof01] Hofmann, C., et al., “Approaches to Software Architecture”, 2001, descargable de http:/ /citeseer. nj.nec.com/84015.html. [Hol06] Holzner, S., Design Patterns for Dummies, For Dummies Publishers, 2006. [Hoo96] Hooker, D., “Seven Principles of Software Development”, septiembre 1996, disponible en http:/ / c2.com/cgi/wikiSevenPrinciplesOfSoftwareDevelopment. [Hop90] Hopper, M. D., “Rattling SABRE, New Ways to Compete on Information”, Harvard  Business Review,  mayo-junio 1990. [Hor03] Horch, J., Practical Guide to Software Quality Management, 2a. ed., Artech House, 2003. [HPR02] Hypermedia Design Patterns Repository, 2002, disponible en www.designpattern .lu.unisi.ch/index. htm. [Hum95] Humphrey, W., A Discipline for Software Engineering, Addison-Wesley, 1995. [Hum96] Humphrey, W., “Using a Defined and Measured Personal Software Process”, IEEE  Software, vol. 13,  núm. 3, mayo-junio 1996, pp. 77-88. [Hum97] Humphrey, W., Introduction to the Personal Software Process, Addison-Wesley, 1997. [Hum98] Humphrey, W., “The Three Dimensions of Process Improvement, Part III: The Team Process”, Cross- Talk, abril 1998, disponible en www.stsc.hill.af.mil/crosstalk/1998/apr/dimensions.asp. [Hum00] Humphrey, W., Introduction to the Team Software Process , Addison-W  esley, 2000. [Hun99] Hunt, A., D. Thomas y W. Cunningham, The Pragmatic Programmer, Addison- Wesley, 1999. [Hur83] Hurley, R. B., Decision Tables in Software Engineering, Van Nostrand-Reinhold, 1983. [Hya96] Hyatt, L. y L. Rosenberg, “A Software Quality Model and Metrics for Identifying  Project Risks and  Assessing Software Quality”, NASA SATC, 1996, disponible en http:/ /satc.gsfc.nasa.gov/support/STC_APR96/quality/stc_qual.html. [IBM81] “Implementing Software Inspections”, notas del curso, IBM Systems Sciences Institute, IBM Corpo- ration, 1981. [IBM03] IBM, Web Services Globalization Model, 2003, disponible en www.ibm.com/ developerworks/webser- vices/library/ws-global/. [IEE93a] IEEE Standards Collection: Software Engineering, IEEE Standard 610.12-1990, IEEE, 1993. [IEE93b] IEEE Standard Glossary of Software Engineering Terminology, IEEE, 1993. [IEE00] IEEE Standard Association, IEEE-Std-1471-2000, Recommended Practice for Architectural Description  of Software-Intensive Systems, 2000, disponible en http://standards.ieee.org/  reading/ieee/std_public/ description/se/1471-2000_desc.html. [IFP01] Function Point Counting Practices Manual, Release 4.1.1, International Function Point Users Group,  2001, disponible en www.ifpug.org/publications/manual.htm. [IFP05] Function Point Bibliography/Reference Library, International Function Point Users Group, 2005, dis- ponible en www.ifpug.org/about/bibliography.htm. [ISI08] iSixSigma, LLC, “New to Six Sigma: A Guide for Both Novice and Experiences Quality Practitioners”,  2008, disponible en www.isixsigma.com/library/content/six-sigma-newbie.asp. 35Pressman(751-766)Refer.indd   75735Pressman(751-766)Refer.indd   757 2/2/10   11:41:182/2/10   11:41:18