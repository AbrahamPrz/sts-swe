418 parte tres administración de la calidad 18.4.3 derivación de casos de prueba el método de prueba de ruta básica puede aplicarse a un diseño de procedimientos o a un código fuente. en esta sección se presenta la prueba de ruta básica como una serie de pasos. el proce-dimiento average (promedio), que en la figura 18.4 se muestra en pdl, se usará como ejemplo para ilustrar cada paso del método de diseño de caso de prueba. observe que average, aunque es un algoritmo extremadamente simple, contiene condiciones y bucles compuestos. es posible aplicar los siguientes pasos para derivar el conjunto básico: 1. al usar el diseño o el código como cimiento, dibuje el gráfico de flujo corres-pondiente. el gráfico de flujo se crea usando los símbolos y reglas de construcción que se presentaron en la sección 18.4.1. en el pdl para aver age de la figura 18.4, el gráfico de flujo se crea al numerar aquellos enunciados pdl que se mapearán en los nodos correspondientes del gráfico de flujo. en la figura 18.5 se muestra el gráfico deflujo correspondiente. 2. determine la complejidad ciclomática del gráfico de flujo resultante. la com- plejidad ciclomática v(g) se determina al aplicar los algoritmos descritos en la sección 18.4.2. debe observarse que v(g) puede determinarse sin desarrollar un gráfico de flujo, shakira: ¿qué? vinod: complejidad ciclomática, v de g. sólo calcula v(g) para cada una de las operaciones dentro de cada uno de los componen-tes y ve cuáles tienen los valores más altos para v(g). ésas son las que tienen más probabilidad de ser proclives a errores. shakira: ¿y cómo calculo v de g?vinod: realmente es sencillo. aquí hay un libro que describe cómo hacerlo.shakira (hojea el libro): muy bien, no parece difícil. lo inten- taré. las operaciones con la v(g) más altas serán las candidatas para las pruebas de caja blanca. vinod: sólo recuerda que no hay garantías. un componente con una v(g) baja puede ser proclive a errores. shakira: bien. pero al menos esto me ayudará a reducir el núme- ro de componentes que tienen que experimentar pruebas de caja blanca. cita: “el cohete ariane 5 estalló en el despegue debido exclusivamen-te a un defecto de software (un bug, un error) que involucra la conversión de un valor en punto flotante de 64 bits en un entero de 16 bits. el cohete y sus cua-tro satélites no estaban asegurados y valían 500 millo-nes de dólares. [pruebas de ruta que revisaran la ruta de conver-sión] habrían descubierto el error, pero se vetaron por razo-nes presupuestarias.” reporte noticioso procedimiento average; interface returns average, total.input, total.valid; interface accepts value, minimum, maximum; type value[1:100] is scalar array; type average, total.input, total.valid; minimum, maximum, sum is scalar;type i is integer;* este procedimiento calcula el promedio de 100 o menos números que se encuentran entre valores frontera; también calcula la suma y el número total válido. i = 1; total.input = total.valid = 0;sum = 0;do while value[i] <> –999 and total.input < 100 enddo if total.valid > 0 endif end averageincrement total.input by 1; if value[i] > = minimum and value[i] < = maximum endif increment i by 1; then average = sum / total.valid; else average = –999;then increment total.valid by 1; sum = s sum + value[i]else skip1 3 64 5 7 8 9 10 1112 132figura 18.4 pdl con identificación de nodos 18pressman(411-436).indd  41818pressman(411-436).indd  418 21/1/10  10:58:5521/1/10  10:58:55