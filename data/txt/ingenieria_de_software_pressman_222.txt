CAPÍTULO 8  CONCEPTOS DE DISEÑO 191 estructura o la configuración del sistema en función de eventos externos. Los modelos del proceso  se centran en el diseño del negocio o proceso técnico al que debe dar acomodo el sistema. Por  último, los modelos funcionales se usan para representar la jerarquía funcional de un sistema. Para representar estos modelos, se ha desarrollado cierto número de lenguajes de descripción  arquitectónica (LDA) [Sha95b]. Aunque han sido propuestos muchos LDA diferentes, la mayoría  tiene mecanismos para describir los componentes del sistema y la manera en la que se conectan entre sí. Debe observarse que hay un debate acerca del papel que tiene la arquitectura en el diseño.  Algunos investigadores afirman que la obtención de la arquitectura del software debe separarse del diseño y que ocurre entre las acciones de la ingeniería de requerimientos y las del diseño más convencional. Otros piensan que la definición de la arquitectura es parte integral del pro-ceso de diseño. En el capítulo 9 se estudia la forma en la que se caracteriza la arquitectura del software y su papel en el diseño. 8.3.3  Patrones Brad Appleton define un patrón de diseño de la manera siguiente: “Es una mezcla con nombre  propio de puntos de vista que contienen la esencia de una solución demostrada para un pro-blema recurrente dentro de cierto contexto de necesidades en competencia” [App00]. Dicho de otra manera, un patrón de diseño describe una estructura de diseño que resuelve un problema particular del diseño dentro de un contexto específico y entre “fuerzas” que afectan la manera en la que se aplica y en la que se utiliza dicho patrón. El objetivo de cada patrón de diseño es proporcionar una descripción que permita a un dise- ñador determinar 1) si el patrón es aplicable al trabajo en cuestión, 2) si puede volverse a usar (con lo que se ahorra tiempo de diseño) y 3) si sirve como guía para desarrollar un patrón distinto en funciones o estructura. En el capítulo 12 se estudian los patrones de diseño. 8.3.4  División de problemas La división de problemas es un concepto de diseño que sugiere que cualquier problema complejo  puede manejarse con más facilidad si se subdivide en elementos susceptibles de resolverse u optimizarse de manera independiente. Un problema es una característica o comportamiento que  se especifica en el modelo de los requerimientos para el software. Al separar un problema en sus piezas más pequeñas y por ello más manejables, se requiere menos esfuerzo y tiempo para resolverlo. Si para dos problemas, p 1 y p2, la complejidad que se percibe para p1 es mayor que la percibida  para p2, entonces se concluye que el esfuerzo requerido para resolver p1 es mayor que el nece- sario para resolver p2. Como caso general, este resultado es intuitivamente obvio. Lleva más  tiempo resolver un problema difícil. También se concluye que cuando se combinan dos problemas, con frecuencia la complejidad  percibida es mayor que la suma de la complejidad tomada por separado. Esto lleva a la estrategia de divide y vencerás, pues es más fácil resolver un problema complejo si se divide en elementos manejables. Esto tiene implicaciones importantes en relación con la modularidad del software. La división de problemas se manifiesta en otros conceptos de diseño relacionados: modula- ridad, aspectos, independencia de funcionamiento y mejora. Cada uno de éstos se estudiará en las secciones siguientes. 8.3.5  Modularidad La modularidad es la manifestación más común de la división de problemas. El software se di-vide en componentes con nombres distintos y abordables por separado, en ocasiones llamados módulos, que se integran para satisfacer los requerimientos del problema.Cita: “Cada patrón describe un pro- blema que ocurre una y otra vez en nuestro ambiente, por lo que describe el núcleo de la solución de ese problema, en forma tal que puede usarse ésta un millón de veces sin repetir lo mismo ni una sola vez.” Christopher Alexander El argumento para separar los  problemas puede llevarse demasiado lejos. Si se divide un problema en un número muy grande de problemas muy pequeños, será fácil resolver cada uno de éstos, pero unificarlos en la solución (integración) será muy difícil.CONSEJO 08Pressman(183-205).indd   19108Pressman(183-205).indd   191 14/1/10   14:31:0814/1/10   14:31:08