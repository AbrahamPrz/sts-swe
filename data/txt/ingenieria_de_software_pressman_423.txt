392 parte tres administración de la calidad individualmente, ¿por qué dudan que funcionarán cuando se junten todos?”. desde luego, el problema es “juntarlos todos”: conectarlos. los datos pueden perderse a través de una interfaz; un componente puede tener un inadvertido efecto adverso sobre otro; las subfunciones, cuando se combinan, pueden no producir la función principal deseada; la imprecisión aceptable indivi-dualmente puede magnificarse a niveles inaceptables; las estructuras de datos globales pueden presentar problemas. lamentablemente, la lista sigue y sigue. las pruebas de integración son una técnica sistemática para construir la arquitectura del software mientras se llevan a cabo pruebas para descubrir errores asociados con la interfaz. el objetivo es tomar los componentes probados de manera individual y construir una estructura de programa que se haya dictado por diseño. con frecuencia existe una tendencia a intentar la integración no incremental, es decir, a construir el programa usando un enfoque de big bang. todos los componentes se combinan por adelantado. todo el programa se prueba como un todo. ¡y usualmente resulta el caos! se des-cubre un conjunto de errores. la corrección se dificulta pues el aislamiento de las causas se complica por la vasta extensión de todo el programa. una vez corregidos estos errores, otros nuevos aparecen y el proceso continúa en un bucle aparentemente interminable. la integración incremental es la antítesis del enfoque big bang. el programa se construye y prueba en pequeños incrementos, donde los errores son más fáciles de aislar y corregir; las in-terfaces tienen más posibilidades de probarse por completo; y puede aplicarse un enfoque de prueba sistemático. en los siguientes párrafos se exponen algunas estrategias diferentes de in-tegración incremental. integración descendente. la prueba de integr ación descendente es un enfoque incremental a la construcción de la arquitectura de software. los módulos se integran al moverse hacia abajo a través de la jerarquía de control, comenzando con el módulo de control principal (pro-grama principal). los módulos subordinados al módulo de control principal se incorporan en la estructura en una forma de primero en profundidad o primero en anchura. con referencia a la figura 17.5, la integración primero en profundidad integra todos los com- ponentes sobre una ruta de control mayor de la estructura del programa. la selección de una ruta mayor es un tanto arbitraria y depende de las características específicas de la aplicación. por ejemplo, al seleccionar la ruta de la izquierda, los componentes m 1, m2, m5 se integrarían primero. a continuación, m8 o (si es necesario para el adecuado funcionamiento de m2) se inte-tomar el enfoque de "big bang" para la integración es una estrategia perezosa condenada al fracaso. integre de manera incremental y pruebe conforme avance.consejo cuando desarrolle un calendario de proyecto, considere la forma en la que ocurrirá la integración, de modo que los componentes estén disponibles cuando se les necesite.consejo m1 m3m2 m7m6m5 m8m4figura 17.5 integración descendente 17pressman(383-410).indd  39217pressman(383-410).indd  392 21/1/10  10:59:2121/1/10  10:59:21