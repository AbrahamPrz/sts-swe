5.3 ■ modelos estructurales 129 5.3 modelos estructurales los modelos estructurales de software muestran la organización de un sistema, en tér- minos de los componentes que constituyen dicho sistema y sus relaciones. los modelos estructurales son modelos estáticos, que muestran la estructura del diseño del sistema, o modelos dinámicos, que revelan la organización del sistema cuando se ejecuta. no son lo mismo: la organización dinámica de un sistema como un conjunto de hilos en interacción tiende a ser muy diferente de un modelo estático de componentes del sistema. los modelos estructurales de un sistema se crean cuando se discute y diseña la arqui-tectura del sistema. el diseño arquitectónico es un tema particularmente importante en la ingeniería de software, y los diagramas uml de componente, de paquete y de implemen-tación se utilizan cuando se presentan modelos arquitectónicos. en los capítulos 6, 18 y 19 se cubren diferentes aspectos de la arquitectura de software y del modelado arquitec-tónico. esta sección se enfoca en el uso de diagramas de clase para modelar la estructura estática de las clases de objetos, en un sistema de software. 5.3.1 diagramas de clase los diagramas de clase pueden usarse cuando se desarrolla un modelo de sistema orien-tado a objetos para mostrar las clases en un sistema y las asociaciones entre dichas clases. de manera holgada, una clase de objeto se considera como una definición general de un tipo de objeto del sistema. una asociación es un vínculo entre clases, que indica que hay una relación entre dicha clases. en consecuencia, cada clase puede tener algún conoci-miento de esta clase asociada. cuando se desarrollan modelos durante las primeras etapas del proceso de ingenie-ría de software, los objetos representan algo en el mundo real, como un paciente, una receta, un médico, etcétera. conforme se desarrolla una implementación, por lo general se necesitan definir los objetos de implementación adicionales que se usan para dar la funcionalidad requerida del sistema. aquí, el enfoque está sobre el modelado de objetos del mundo real, como parte de los requerimientos o los primeros procesos de diseño del software. los diagramas de clase en el uml pueden expresarse con diferentes niveles de deta-lle. cuando se desarrolla un modelo, la primera etapa con frecuencia implica buscar en el mundo, identificar los objetos esenciales y representarlos como clases. la forma más sencilla de hacer esto es escribir el nombre de la clase en un recuadro. también puede anotar la existencia de una asociación dibujando simplemente una línea entre las clases. análisis de requerimientos orientado a objetos en el análisis de requerimientos orientado a objetos, se modelan entidades del mundo real usando clases de objetos. usted puede crear diferentes tipos de modelos de objetos, que muestren cómo se relacionan mutuamente las clases de objetos, cómo se agregan objetos para formar otros objetos, cómo interactúan los objetos entre sí, etcétera. cada uno de éstos presenta información única acerca del sistema que se especifica. http://www.softwareengineering-9.com/web/oora/ m05_sommerville_ingenieria_1ed_se_118-146.indd  129m05_sommerville_ingenieria_1ed_se_118-146.indd  129 3/18/11  4:48:17 pm3/18/11  4:48:17 pm