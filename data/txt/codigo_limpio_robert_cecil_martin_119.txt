private static void readpreferences() { inputstream is = null; try { is = new fileinputstream(getpreferencesfile()); setpreferences(new properties(getpreferences())); getpreferences().load(is); } catch (ioexception e) { try { if (is != null) is.close(); } catch (ioexception e1) { } } } las variables de control de bucles deben declararse en la instrucción del bucle, como en esta pequeña función del mismo código fuente: public int counttestcases() { int count= 0; for ( test each : tests) count += each.counttestcases(); return count; } en casos excepcionales, una variable puede declararse en la parte superior de un bloque o antes de un bucle en una función extensa. puede ver este tipo de variable en la siguiente función de testng. … for (xmltest test: m_suite.gettests()) { testrunner tr = m_runnerfactory.newtestrunner(this, test); tr.addlistener(m_textreporter); m_testrunners.add(tr); invoker = tr.getinvoker(); for (itestngmethod m : tr.getbeforesuitemethods()) { beforesuitemethods.put(m.getmethod(), m); } for (itestngmethod m : tr.getaftersuitemethods()) { aftersuitemethods.put(m.getmethod(), m); } } … variables de instancia las variables de instancia, por su parte, deben declararse en la parte superior de la clase. esto no debe aumentar la distancia vertical de las variables, ya 120