3.3 ■ Programación extrema  65  En la programación extrema, los requerimientos se expresan como escenarios (llama- dos historias de usuario), que se implementan directamente como una serie de tareas. Los programadores trabajan en pares y antes de escribir el código desarrollan pruebas para cada tarea. Todas las pruebas deben ejecutarse con éxito una vez que el nuevo código se integre en el sistema. Entre las liberaciones del sistema existe un breve lapso. La figura 3.3 ilustra el proceso XP para producir un incremento del sistema por desarrollar. La programación extrema incluye algunas prácticas, resumidas en la figura 3.4, las cuales reflejan los principios de los métodos ágiles: 1. El desarrollo incremental se apoya en pequeñas y frecuentes liberaciones del sis- tema. Los requerimientos se fundamentan en simples historias del cliente, o bien,  en escenarios usados como base para decidir qué funcionalidad debe incluirse en un incremento del sistema. 2. La inclusión del cliente se apoya a través de un enlace continuo con el cliente en  el equipo de desarrollo. El representante del cliente participa en el desarrollo y es responsable de definir las pruebas de aceptación para el sistema. 3. Las personas, no los procesos, se basan en la programación en pares, en la propiedad  colectiva del código del sistema y en un proceso de desarrollo sustentable que no incluya jornadas de trabajo excesivamente largas. 4. El cambio se acepta mediante liberaciones regulares del sistema a los clientes, desa- rrollo de primera prueba, refactorización para evitar degeneración del código e inte-gración continua de nueva funcionalidad. 5. Mantener la simplicidad se logra mediante la refactorización constante, que mejora  la calidad del código, y con el uso de diseños simples que no anticipan innecesaria-mente futuros cambios al sistema.  En un proceso XP, los clientes intervienen estrechamente en la especificación y prio-rización de los requerimientos del sistema. Estos últimos no se especifican como lis-tas de actividades requeridas del sistema. En cambio, el cliente del sistema forma parte del equipo de desarrollo y discute los escenarios con otros miembros del equipo. En conjunto, desarrollan una “tarjeta de historia” que encapsula las necesidades del cliente. Entonces, el equipo de desarrollo implementa dicho escenario en una liberación futura del software. En la figura 3.5 se muestra el ejemplo de una tarjeta de historia para el Desglosar las historias en tareasSeleccionar historia de usuario para esta liberaciónPlanear liberación Liberación del softwareEvaluar el sistemaDesarrollar/ integrar/ poner a prueba  el softwareFigura 3.3 El ciclo  de liberación de la programación extrema M03_SOMMERVILLE_INGENIERIA_1ED_SE_056-081.indd   65M03_SOMMERVILLE_INGENIERIA_1ED_SE_056-081.indd   65 3/18/11   4:46:25 PM3/18/11   4:46:25 PM