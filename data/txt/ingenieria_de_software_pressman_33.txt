2 CAPÍTULO 1  EL SOFTWARE Y LA INGENIERÍA DE SOFTWARE ¿Está muerto realmente el software? Si lo estuviera, usted no estaría leyendo este libro… El software de computadora sigue siendo la tecnología más importante en la escena mundial.  Y también es un ejemplo magnífico de la ley de las consecuencias inesperadas. Hace 50 años,  nadie hubiera podido predecir que el software se convertiría en una tecnología indispensable para los negocios, ciencias e ingeniería, ni que permitiría la creación de tecnologías nuevas (por ejemplo, ingeniería genética y nanotecnología), la ampliación de tecnologías ya existentes (te-lecomunicaciones) y el cambio radical de tecnologías antiguas (la industria de la impresión); tampoco que el software sería la fuerza que impulsaría la revolución de las computadoras per-sonales, que productos de software empacados se comprarían en los supermercados, que el software evolucionaría poco a poco de un producto a un servicio cuando compañías de software “sobre pedido” proporcionaran funcionalidad justo a tiempo a través de un navegador web, que una compañía de software sería más grande y tendría más influencia que casi todas las empre-sas de la era industrial, que una vasta red llamada internet sería operada con software y evolu-cionaría y cambiaría todo, desde la investigación en bibliotecas y la compra de productos para el consumidor hasta el discurso político y los hábitos de encuentro de los adultos jóvenes (y no tan jóvenes). Nadie pudo prever que habría software incrustado en sistemas de toda clase: de transporte,  médicos, de telecomunicaciones, militares, industriales, de entretenimiento, en máquinas de oficina… la lista es casi infinita. Y si usted cree en la ley de las consecuencias inesperadas, hay muchos efectos que aún no podemos predecir. Nadie podía anticipar que millones de programas de computadora tendrían que ser corregi- dos, adaptados y mejorados a medida que transcurriera el tiempo. Ni que la carga de ejecutar estas actividades de “mantenimiento” absorbería más personas y recursos que todo el trabajo aplicado a la creación de software nuevo. Conforme ha aumentado la importancia del software, la comunidad de programadores ha  tratado continuamente de desarrollar tecnologías que hagan más fácil, rápida y barata la elabo-ración de programas de cómputo de alta calidad. Algunas de estas tecnologías se dirigen a un dominio específico de aplicaciones (por ejemplo, diseño e implantación de un sitio web), otras se centran en un dominio tecnológico (sistemas orientados a objetos o programación orientada a aspectos), otros más tienen una base amplia (sistemas operativos, como Linux). Sin embargo, todavía falta por desarrollarse una tecnología de software que haga todo esto, y hay pocas pro-babilidades de que surja una en el futuro. A pesar de ello, las personas basan sus trabajos, confort, seguridad, diversiones, decisiones y sus propias vidas en software de computadora. Más vale que esté bien hecho. Este libro presenta una estructura que puede ser utilizada por aquellos que hacen software  de cómputo —personas que deben hacerlo bien—. La estructura incluye un proceso, un conjunto de métodos y unas herramientas que llamamos ingeniería de software.  1.1 LA NATURALEZA  DEL SOFTWARE En la actualidad, el software tiene un papel dual. Es un producto y al mismo tiempo es el ve-hículo para entregar un producto. En su forma de producto, brinda el potencial de cómputo in-corporado en el hardware de cómputo o, con más amplitud, en una red de computadoras a las Me recargué en la espalda y coloqué mis manos en mi nuca. “Ya sabes lo que se dice… pue- des tenerlo rápido o bien hecho o barato. Escoge dos de estas características…” “Elijo rápido y bien hecho”, dijo mientras comenzaba a levantarse.También me incorporé. “Entonces realmente necesitas ingeniería de software.”“Ya lo sé”, dijo mientras salía. “El problema es que tenemos que llegar a convencer a otra  generación más de técnicos de que así es…” Cita: “Las ideas y los descubrimientos  tecnológicos son los motores que impulsan el crecimiento econó-mico.” Wall Street Journal 01Pressman(001-024).indd   201Pressman(001-024).indd   2 14/1/10   13:30:5514/1/10   13:30:55