mantenible en algo que seguramente esté plagado de errores. añadí los dos tipos de argumento de forma incremental. primero, el argumento string , que genera lo siguiente: listado 14-10 args.java (booleano y string) package com.objectmentor.utilities.getopts; import java.text.parseexception; import java.util.*; public class args { private string schema; private string[] args; private boolean valid = true; private set<character> unexpectedarguments = new treeset<character>(); private map<character, boolean> booleanargs = new hashmap<character, boolean>(); private map<character, string> stringargs = new hashmap<character, string>(); private set<character> argsfound = new hashset<character>(); private int currentargument; private char errorargument = ‘\0’; enum errorcode { ok, missing_string } private errorcode errorcode = errorcode.ok; public args(string schema, string[] args) throws parseexception { this.schema = schema; this.args = args; valid = parse(); } private boolean parse() throws parseexception { if (schema.length() == 0 && args.length == 0) return true; parseschema(); parsearguments(); return valid; } private boolean parseschema() throws parseexception { for (string element : schema.split(“,”)) { if (element.length() > 0) { string trimmedelement = element.trim(); parseschemaelement(trimmedelement); } } return true; 272