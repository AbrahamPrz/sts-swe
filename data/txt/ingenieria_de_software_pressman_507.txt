476 PARTE TRES  ADMINISTRACIÓN DE LA CALIDAD 20.7. ¿Es justo decir que la estrategia de prueba de webapps global comienza con los elementos visibles  para el usuario y que avanza hacia los elementos tecnológicos? ¿Existen excepciones a esta estrategia? 20.8. ¿La prueba de contenido realmente es una prueba en el sentido convencional? Explique.20.9. Describa los pasos asociados con la prueba de base de datos para una webapp. ¿La prueba de base de  datos es predominantemente una actividad en el lado cliente o en el lado servidor?20.10. ¿Cuál es la diferencia entre las pruebas que se asocian con los mecanismos de interfaz y las que  abordan la semántica de la interfaz? 20.11. Suponga que desarrolla una farmacia en línea ( FarmaciaDelaEsquina.com) que abastece a adul- tos mayores. La farmacia proporciona las funciones usuales, pero también mantiene una base de datos para  cada cliente, de modo que puede ofrecer información de medicamentos y advertir de potenciales interaccio-nes medicamentosas. Analice algunas pruebas de usabilidad especiales para esta webapp. 20.12. Suponga que establece una función de comprobación de interacción medicamentosa para Farma- ciaDelaEsquina.com (problema 20.11). Analice los tipos de las pruebas en el nivel de componente que deberían realizarse para garantizar que esta función opera adecuadamente. [Nota: tendría que usar una base de datos para establecer esta función]. 20.13. ¿Cuál es la diferencia entre probar la sintaxis de navegación y probar la semántica de navegación?20.14. ¿Es posible probar toda configuración que una webapp probablemente encuentre en el lado servidor?  ¿Es posible hacerlo en el lado cliente? Si no, ¿cómo selecciona un conjunto significativo de pruebas de con-figuración? 20.15. ¿Cuál es el objetivo de la prueba de seguridad? ¿Quién realiza esta prueba?20.16. FarmaciaDelaEsquina.com (problema 20.11) se volvió muy exitosa y el número de usuarios au- mentó dramáticamente en los primeros dos meses de operación. Dibuje una gráfica que muestre el probable  tiempo de respuesta como función del número de usuarios para un conjunto fijo de recursos en el lado ser-vidor. Etiquete la gráfica para indicar los puntos de interés en la “curva de respuesta”. 20.17. En respuesta a su éxito, FarmaciaDelaEsquina.com (problema 20.11) implementó un servidor  especial exclusivamente para manejar el reabastecimiento de recetas. En promedio, 1 000 usuarios concu-rrentes envían una solicitud de reabastecimiento una vez cada dos minutos. En respuesta, la webapp des- carga un bloque de datos de 500 bytes. ¿Cuál es al rendimiento global aproximado requerido para este ser-vidor en megabits por segundo? 20.18. ¿Cuál es la diferencia entre prueba de carga y prueba de esfuerzo?   LECTURAS  ADICIONALES  Y FUENTES  DE INFORMACIÓN La literatura acerca de pruebas de webapps continúa evolucionando. Los libros de Andrews y Whittaker (How  to Break Web Software,  Addison-Wesley, 2006), Ash ( The Web Testing Companion,  Wiley, 2003), Nguyen et al.  (Testing Applications for the Web,  2a. ed., Wiley, 2003), Dustin et al. (Quality Web Systems, Addison-Wesley,  2002) y Splaine y Jaskiel [Spl01] están entre los tratamientos más completos del tema publicados hasta la  fecha. Mosley (Client-Server Software Testing on the Desktop and the Web , Prentice Hall, 1999) aborda los temas  de prueba en los lados cliente y servidor. Información útil acerca de las estrategias y métodos de prueba de webapps, así como un valioso análisis  de las herramientas de prueba automáticas, se presenta en Stottlemeyer ( Automated Web Testing Toolkit,   Wiley, 2001). Graham et al. (Software Test Automation, Addison-Wesley, 1999) presentan material adicional acerca de herramientas automáticas. Microsoft (Performance Testing Guidance for Web Applications,  Microsoft Press, 2008) y Subraya (Integrated  Approach to Web Performance Testing, IRM Press, 2006) exponen tratamientos detallados acerca de la prueba de rendimiento para webapps. Chirillo (Hack Attacks Revealed, 2a. ed., Wiley, 2003), Splaine (Testing Web Se- curity, Wiley, 2002), Klevinsky et al. (Hack I.T.:  Security through Penetration Testing,  Addison-Wesley, 2002) y  Skoudis (Counter Hack,  Prentice Hall, 2001) proporcionan mucha información útil para quienes deben diseñar  pruebas de seguridad. Además, los libros que abordan la prueba de seguridad para software en general pue-den ofrecer una guía importante para quienes deben poner a prueba webapps. Los títulos representativos incluyen: Basta y Halton (Computer  Security and Penetration Testing, Thomson Delmar Learning, 2007), Wy- 20Pressman(453-477).indd   47620Pressman(453-477).indd   476 21/1/10   10:58:1321/1/10   10:58:13