574 capítulo 21 ■ ingeniería de software orientada a aspectos con otras abstracciones, tales como los métodos, hay una separación clara entre la defi- nición de la abstracción y su uso. al examinar el método, no es posible decir de dónde se le llamará; las llamadas pueden ser desde cualquier parte que abarque el método. en contraste, los aspectos incluyen un “punto de corte” ( pointcut): un enunciado que define dónde se tejerá el aspecto en el programa. en este ejemplo, el punto de corte es un enunciado simple: before: call (public void update* (..)) el significado de esto es que antes de la ejecución de cualquier método cuyo nombre comience con la cadena update, seguido por cualquier otra secuencia de caracteres, debe ejecutarse el código en el aspecto después de la definición de punto de corte. el carácter asterisco (*) se llama comodín (wildcard ) y coincide con cualquier cadena de caracteres que se permite en los identificadores. el código a ejecutar se conoce como el “advice” (consejo) y es la implementación de la competencia transversal. en este caso, el consejo obtiene una contraseña de la persona que solicita el cambio y verifica que coincida con la contraseña del usuario que ingresó recientemente al sistema. si no concuerda, se desconecta al usuario y no procede la actualización. la habilidad para especificar, con puntos de corte, dónde debe ejecutarse el código es la característica distintiva de los aspectos. sin embargo, para comprender qué significan los puntos de corte, es necesario entender otro concepto: la idea de un punto de enlace. un punto de enlace ( join point) es un evento que ocurre durante la ejecución de un pro- grama; podría ser una llamada de método, la inicialización de una variable, el almacena-miento de una actualización, etcétera. existen muchos tipos posibles de eventos que pueden ocurrir durante la ejecución del programa. un modelo de punto de enlace define el conjunto de eventos que se pueden referenciar en un programa orientado a aspectos. los modelos de punto de enlace no son estandarizados y cada lenguaje de programación orientado a aspectos tiene su pro-pio modelo de punto de enlace. por ejemplo, en los eventos aspectj, que son parte del modelo de punto de enlace, se incluyen: ■ eventos de llamada: llamadas a un método o constructor; ■ eventos de ejecución: ejecución de un método o constructor; ■ eventos de inicialización: inicialización de clase u objeto; ■ eventos de datos: acceso o actualización de un archivo; ■ eventos de excepciones: manejo de una excepción. un punto de corte identifica el evento o eventos específicos (por ejemplo, una llamada a un procedimiento nombrado) con los que debe asociarse un consejo. esto significa que es posible tejer consejos en un programa en muchos contextos diferentes, dependiendo del modelo de punto de enlace que soporte: 1. los consejos pueden incluirse antes de la ejecución de un método específico, una lista de métodos nombrados o una lista de métodos cuyos nombres coincidan con una especificación de patrón (como update*). m21_sommerville_ingenieria_1ed_se_565-590.indd  574m21_sommerville_ingenieria_1ed_se_565-590.indd  574 3/18/11  5:38:58 pm3/18/11  5:38:58 pm