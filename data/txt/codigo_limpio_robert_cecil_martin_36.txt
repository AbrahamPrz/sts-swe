imagine que este libro es una descripción de la escuela de mentores del código limpio . las técnicas y enseñanzas impartidas son la forma en la que practicamos nuestro arte. podemos afirmar que, si sigue nuestras enseñanzas, disfrutará de lo que hemos disfrutado nosotros, y aprenderá a crear código limpio y profesional. pero no cometa el error de pensar que somos los únicos que tenemos razón. existen otras escuelas y otros maestros tan profesionales como nosotros, y su labor es aprender de ellos también. de hecho, muchas de las recomendaciones del libro son controvertidas, seguramente no esté de acuerdo con muchas de ellas y puede que rechace algunas de forma definitiva. es correcto. no somos la autoridad final. pero, por otra parte, las recomendaciones del libro son algo en lo que hemos pensado mucho. las hemos aprendido tras décadas de experiencia y ensayo y error. por lo tanto, esté o no de acuerdo, sería una lástima que no apreciara, y respetara, nuestro punto de vista. somos autores el campo @author de un javadoc indica quiénes somos. somos autores. y los autores tienen lectores. de hecho, los autores son responsables de comunicarse correctamente con sus lectores. la próxima vez que escriba una línea de código, recuerde que es un autor y que escribe para que sus lectores juzguen su esfuerzo. seguramente se pregunte qué cantidad de código se lee realmente y si la mayor parte del esfuerzo no se concentra en crearlo. ¿alguna vez ha reproducido una sesión de edición? en las décadas de 1980 y 1990 teníamos editores como emacs que controlaban cada pulsación de tecla. se podía trabajar durante una hora y después reproducir la sesión de edición completa como una película a alta velocidad. cuando lo hice, los resultados fueron fascinantes. la mayor parte de la reproducción eran desplazamientos entre módulos. bob accede al módulo. se desplaza hasta la función que tiene que cambiar. 37