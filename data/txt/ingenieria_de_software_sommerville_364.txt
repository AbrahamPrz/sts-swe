2. gestión de requerimientos para asegurarse de que los cambios a los requerimientos se controlan y que el efecto de los cambios propuestos a los requerimientos sea com-prendido por aquellos desarrolladores afectados por el cambio. 3. especificación formal, donde se crea y analiza un modelo matemático del software. en el capítulo 12 se estudiaron los beneficios de la especificación formal. quizá su bene-ficio más importante sea que obliga a un análisis muy detallado de los requerimientos del sistema. este análisis, por sí mismo, es probable que descubra problemas de reque-rimientos que pudieron perderse durante las revisiones de los requerimientos. 4. modelado de sistema, en el que el diseño del software se documenta explícitamente como un conjunto de modelos gráficos; también se documentan dichos modelos y los vínculos entre los requerimientos. 5. inspecciones de diseño y programa, las cuales consisten en que diferentes perso-nas inspeccionan y comprueban diversas descripciones del sistema. con frecuen-cia, las inspecciones se realizan con base en listas de verificación de errores comunes de diseño y programación. 6. análisis estático, lo que implica realizar comprobaciones automatizadas sobre el código fuente del programa. en él se buscan anomalías que pudieran indicar errores u omisiones de programación. en el capítulo 15 se estudia el análisis estático. 7. planeación y administración de pruebas, lo que implica diseñar un conjunto global de pruebas del sistema. el proceso de pruebas tiene que administrarse cuidadosa-mente para demostrar que tales pruebas ofrecen una cobertura de los requerimientos del sistema y que se aplican correctamente. así como hay actividades de proceso que se enfocan en el desarrollo y las pruebas del sistema, también debe haber procesos de administración de calidad y del cambio bien defi-nidos. aunque las actividades específicas en un proceso confiable pueden variar de una compañía a otra, la necesidad de administración de la calidad y del cambio es universal. los procesos de administración de la calidad (que se examinan en el capítulo 24) establecen un conjunto de estándares de proceso y producto. también incluyen activida-des que captan información del proceso, con la finalidad de demostrar que se siguieron dichos estándares. por ejemplo, podría haber un estándar definido para realizar inspec-ciones de programa. el líder del equipo de inspección es responsable de documentar el proceso para demostrar que se siguió el estándar de inspección.el ciclo de vida de seguridad la international electrotechnical commission dispuso un estándar de proceso (iec 61508) para la ingeniería de sistemas de protección. éste se basa en la noción de un ciclo de vida de seguridad, que hace una clara distinción entre ingeniería de seguridad e ingeniería de sistemas. las primeras etapas del ciclo de vida de seguridad iec 61508 definen el alcance del sistema, valoran los peligros potenciales del sistema y estiman los riesgos que plantean. a esto sigue la especificación de los requerimientos de seguridad y su asignación a diferentes subsistemas. la idea es limitar la extensión de la funcionalidad crítica de protección para permitir la aplicación de técnicas específicas en la ingeniería de sistemas críticos al desarrollo del sistema crítico de protección. http://www.softwareengineering-9.com/web/safetylifecycle/13.2 ■ procesos confiables 347 m13_sommerville_ingenieria_1ed_se_341-365.indd  347m13_sommerville_ingenieria_1ed_se_341-365.indd  347 3/18/11  4:59:13 pm3/18/11  4:59:13 pm