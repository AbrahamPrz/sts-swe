2.2 ■ actividades del proceso 37 errores en esta etapa conducen de manera inevitable a problemas posteriores tanto en el diseño como en la implementación del sistema. el proceso de ingeniería de requerimientos (figura 2.4) se enfoca en producir un docu-mento de requerimientos convenido que especifique los requerimientos de los interesados que cumplirá el sistema. por lo general, los requerimientos se presentan en dos niveles de detalle. los usuarios finales y clientes necesitan un informe de requerimientos de alto nivel; los desarrolladores de sistemas precisan una descripción más detallada del sistema. existen cuatro actividades principales en el proceso de ingeniería de requerimientos: 1. estudio de factibilidad se realiza una estimación sobre si las necesidades identifi- cadas del usuario se cubren con las actuales tecnologías de software y hardware. el estudio considera si el sistema propuesto tendrá un costo-beneficio desde un punto de vista empresarial, y si éste puede desarrollarse dentro de las restricciones pre-supuestales existentes. un estudio de factibilidad debe ser rápido y relativamente barato. el resultado debe informar la decisión respecto a si se continúa o no continúa con un análisis más detallado. 2. obtención y análisis de requerimientos éste es el proceso de derivar los requeri-mientos del sistema mediante observación de los sistemas existentes, discusiones con los usuarios y proveedores potenciales, análisis de tareas, etcétera. esto puede incluir el desarrollo de uno o más modelos de sistemas y prototipos, lo que ayuda a entender el sistema que se va a especificar.herramientas de desarrollo de software las herramientas de desarrollo del software (llamadas en ocasiones herramientas de ingeniería de software asistido por computadora o case, por las siglas de computer-aided software engineering) son programas usados para apoyar las actividades del proceso de la ingeniería de software. en consecuencia, estas herramientas incluyen editores de diseño, diccionarios de datos, compiladores, depuradores ( debuggers), herramientas de construcción de sistema, etcétera. las herramientas de software ofrecen apoyo de proceso al automatizar algunas actividades del proceso y brindar información sobre el software que se desarrolla. los ejemplos de actividades susceptibles de automatizarse son: ■ desarrollo de modelos de sistemas gráficos, como parte de la especificación de requerimientos o del diseño del software. ■ generación de código a partir de dichos modelos de sistemas gráficos. ■ producción de interfaces de usuario a partir de una descripción de interfaz gráfica, creada por el usuario de manera interactiva. ■ depuración del programa mediante el suministro de información sobre un programa que se ejecuta. ■ traducción automatizada de programas escritos, usando una versión anterior de un lenguaje de programación para tener una versión más reciente. las herramientas pueden combinarse en un marco llamado ambiente de desarrollo interactivo o ide (por las siglas de interactive development environment). esto ofrece un conjunto común de facilidades, que usan las herramientas para comunicarse y operar con mayor destreza en una forma integrada. el eclipse ide se usa ampliamente y se diseñó para incorporar muchos tipos diferentes de herramientas de software. http://www.softwareengineering-9.com/web/case/ m02_sommerville_ingenieria_1ed_se_027-055.indd  37m02_sommerville_ingenieria_1ed_se_027-055.indd  37 3/18/11  4:45:31 pm3/18/11  4:45:31 pm