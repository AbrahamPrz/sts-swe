581 * <P> 582 * Si la fecha base es próxima al final del mes, el día del resultado 583 * se puede ajustar ligeramente: 31 Mayo + 1 mes = 30 Junio. 584 * 585 * @param months el número de meses que añadir (puede ser negativo). 586 * @param base la fecha base. 587 * 588 * @return una nueva fecha. 589 */ 590 public static SerialDate addMonths(final int months, 591 final SerialDate base) { 592 593 final int yy = (12 * base.getYYYY() + base.getMonth() + months - 1) 594 / 12; 595 final int mm = (12 * base.getYYYY() + base.getMonth() + months – 1) 596 % 12 + 1; 597 final int dd = Math.min( 598 base.getDayOfMonth(), SerialDate.lastDayOfMonth(mm, yy) 599 ); 600 return SerialDate.createInstance(dd, mm, yy); 601 602 } 603 604 /** 605 * Crea una nueva fecha añadiendo el número especificado de años a la fecha 606 * base. 607 * 608 * @param years el número de años que añadir (puede ser negativo). 609 * @param base la fecha base. 610 * 611 * @return Una nueva fecha. 612 */ 613 public static SerialDate addYears(final int years, final SerialDate base) { 614 615 final int baseY = base.getYYYY(); 616 final int baseM = base.getMonth(); 617 final int baseD = base.getDayOfMonth(); 618 619 final int targetY = baseY + years; 620 final int targetD = Math.min( 621 baseD, SerialDate.lastDayOfMonth(baseM, targetY) 622 ); 623 624 return SerialDate.createInstance(targetD, baseM, targetY); 452