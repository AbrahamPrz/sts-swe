581 * <p> 582 * si la fecha base es próxima al final del mes, el día del resultado 583 * se puede ajustar ligeramente: 31 mayo + 1 mes = 30 junio. 584 * 585 * @param months el número de meses que añadir (puede ser negativo). 586 * @param base la fecha base. 587 * 588 * @return una nueva fecha. 589 */ 590 public static serialdate addmonths(final int months, 591 final serialdate base) { 592 593 final int yy = (12 * base.getyyyy() + base.getmonth() + months - 1) 594 / 12; 595 final int mm = (12 * base.getyyyy() + base.getmonth() + months – 1) 596 % 12 + 1; 597 final int dd = math.min( 598 base.getdayofmonth(), serialdate.lastdayofmonth(mm, yy) 599 ); 600 return serialdate.createinstance(dd, mm, yy); 601 602 } 603 604 /** 605 * crea una nueva fecha añadiendo el número especificado de años a la fecha 606 * base. 607 * 608 * @param years el número de años que añadir (puede ser negativo). 609 * @param base la fecha base. 610 * 611 * @return una nueva fecha. 612 */ 613 public static serialdate addyears(final int years, final serialdate base) { 614 615 final int basey = base.getyyyy(); 616 final int basem = base.getmonth(); 617 final int based = base.getdayofmonth(); 618 619 final int targety = basey + years; 620 final int targetd = math.min( 621 based, serialdate.lastdayofmonth(basem, targety) 622 ); 623 624 return serialdate.createinstance(targetd, basem, targety); 452