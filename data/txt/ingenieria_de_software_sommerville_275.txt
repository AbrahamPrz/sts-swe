258  Capítulo 9 ■ Evolución del software Working Effectively with Legacy Code. Consejo prácticos sólidos acerca de los problemas y  dificultades de lidiar con sistemas heredados. (M. Feathers, John Wiley & Sons, 2004.) EJERCICIOS  9.1. Explique por qué un sistema de software que se usa en un entorno real debe cambiar o volverse progresivamente menos útil.  9.2. Exponga las razones subyacentes a las leyes de Lehman. ¿En qué circunstancias pueden fallar estas leyes?  9.3. A partir de la figura 9.4, observe que el análisis de impacto es un subproceso importante en el proceso de evolución del software. Con un diagrama, sugiera qué actividades habría en el análisis de impacto del cambio.  9.4. Como gerente de proyecto de software, en una compañía que se especializa en el desarrollo de software para la industria petrolera en el extranjero, se le asigna la tarea de descubrir los factores que afectan la mantenibilidad de los sistemas desarrollados por su compañía. Sugiera cómo configurar un programa para analizar el proceso de mantenimiento y descubrir métricas de mantenibilidad adecuadas para su compañía.  9.5. Describa brevemente los tres tipos principales de mantenimiento del software. ¿Por qué en ocasiones es difícil diferenciarlos?  9.6. ¿Cuáles son los principales factores que afectan los costos de la reingeniería de sistemas?  9.7. ¿En qué circunstancias una organización puede decidir desechar un sistema, cuando la valoración del sistema sugiere que es de alta calidad y de alto valor empresarial?  9.8. ¿Cuáles son las opciones estratégicas para la evolución de sistemas heredados? ¿En que situaciones sustituiría parte o todo un sistema en vez de continuar el mantenimiento del software?  9.9. Explique por qué los problemas con el software de soporte significarían que una organización tiene que sustituir sus sistemas heredados. 9.10. ¿Los ingenieros de software tienen responsabilidad profesional para producir código que pueda mantenerse y cambiarse, incluso si su empleador no lo solicita de manera explícita? REFERENCIAS Arthur, L. J. (1988). Software Evolution. New York: John Wiley & Sons. Banker, R. D., Datar, S. M., Kemerer, C. F. y Zweig, D. (1993). “Software Complexity and Maintenance  Costs”. Comm. ACM, 36 (11), 81–94. Boehm, B. W., Abts, C., Brown, A. W., Chulani, S., Clark, B. K., Horowitz, E., Madachy, R., Reifer, D. y  Steece, B. (2000). Software Cost Estimation with COCOMO II. Upper Saddle River, NJ: Prentice Hall. M09_SOMMERVILLE_INGENIERIA_1ED_SE_234-260.indd   258M09_SOMMERVILLE_INGENIERIA_1ED_SE_234-260.indd   258 3/18/11   4:52:25 PM3/18/11   4:52:25 PM