194 PARTE DOS  MODELADO 8.3.8  Refinamiento El refinamiento stepwise es una estrategia de diseño propuesta originalmente por Niklaus Wirth  [Wir71]. Un programa se elabora por medio del refinamiento sucesivo de los detalles del proce-dimiento. Se desarrolla una jerarquía con la descomposición de un enunciado macroscópico de la función (abstracción del procedimiento) en forma escalonada hasta llegar a los comandos del lenguaje de programación. En realidad, el refinamiento es un proceso de elaboración. Se comienza con un enunciado de  la función (o descripción de la información), definida en un nivel de abstracción alto. Es decir, el enunciado describe la función o información de manera conceptual, pero no dice nada sobre los trabajos internos de la función o de la estructura interna de la información. Después se tra-baja sobre el enunciado original, dando más y más detalles conforme tiene lugar el refinamiento (elaboración) sucesivo. La abstracción y el refinamiento son conceptos complementarios. La primera permite espe- cificar internamente el procedimiento y los datos, pero elimina la necesidad de que los “extra-ños” conozcan los detalles de bajo nivel. El refinamiento ayuda a revelar estos detalles a medida que avanza el diseño. Ambos conceptos permiten crear un modelo completo del diseño con-forme éste evoluciona. 8.3.9  Aspectos Conforme tiene lugar el análisis de los requerimientos, surge un conjunto de “preocupaciones” que “incluyen requerimientos, casos de uso, características, estructuras de datos, calidad del servicio, variantes, fronteras de las propiedades intelectuales, colaboraciones, patrones y con-tratos” [AOS07]. Idealmente, un modelo de requerimientos se organiza de manera que permita aislar cada preocupación (requerimiento) a fin de considerarla en forma independiente. Sin embargo, en la práctica, algunas de estas preocupaciones abarcan todo el sistema y no es fácil dividirlas en compartimientos. Cuando comienza el diseño, los requerimientos son refinados en una representación de di- seño modular. Considere dos requerimientos, A y B. El A interfiere con el B “si se ha elegido una  descomposición [refinamiento] en la que B no puede satisfacerse sin tomar en cuenta a A”  [Ros04]. Por ejemplo, considere dos requerimientos para la webapp CasaSeguraAsegurada.com. El  requerimiento A se describe con el caso de uso AVC-DVC analizado en el capítulo 6. Un refina- miento del diseño se centraría en aquellos módulos que permitieran que usuarios registrados accedieran al video de cámaras situadas en un espacio. El requerimiento B es de seguridad y establece que un usuario registrado debe ser validado antes de que use CasaSeguraAsegurada. com. Este requerimiento es aplicable a todas las funciones disponibles para los usuarios regis-trados de CasaSegura. Cuando ocurre el refinamiento del diseño, A* es una representación del  diseño para el requerimiento A, y B* es otra para el requerimiento B. Por tanto, A* y B* son re- presentaciones de las preocupaciones, y B* interfiere con A*. Un aspecto es una representación de una preocupación de interferencia. Entonces, la repre- sentación del diseño, B*, del requerimiento un usuario registrado debe ser validado antes de que  use CasaSeguraAsegurada.com es un aspecto de la webapp CasaSegura. Es importante identi- ficar aspectos, de modo que el diseño les pueda dar acomodo conforme sucede el refinamiento y la división en módulos. En un contexto ideal, un aspecto se implementa como módulo (compo-nente) separado y no como fragmentos de software “dispersos” o “regados” en muchos compo-nentes [Ban06]. Para lograr esto, la arquitectura del diseño debe apoyar un mecanismo para definir aspecto: un módulo que permita implementar la preocupación en todas aquellas con las que interfiera.Existe la tendencia a pasar de  inmediato a los detalles e ignorar los pasos del refinamiento. Esto genera errores y hace que el diseño sea mucho más difícil de revisar. Realice refinamiento stepwise.CONSEJO Cita: “Es difícil leer un libro sobre los principios de la magia sin echar una mirada de vez en cuando a la portada para asegurarse de que no es un texto sobre diseño de software.” Bruce Tognazzini PUNTO CLAVE Una preocupación de interferencia es  alguna característica del sistema que se aplica a través de muchos requerimientos distintos. 08Pressman(183-205).indd   19408Pressman(183-205).indd   194 14/1/10   14:31:0914/1/10   14:31:09