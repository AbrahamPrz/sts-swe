654 parte cuatro administración de proyectos de software demarco y lister (dancing with bears, dorste house, 2003) escribieron un entretenido e inteligente libro que guía a los gerentes y profesionales del software a través de la gestión de riesgos. moynihan ( coping with it/is risk management, springer-verlag, 2002) presenta consejos pragmáticos de gerentes de proyecto que lidian con el riesgo continuamente. royer ( project risk management , management concepts, 2002) y smith y merrit ( proactive risk management, productivity press, 2002) sugieren un proceso proactivo para gestión del riesgo. karolak (software engineering risk management, wiley, 2002) escribió un manual que introduce un modelo de análisis de riesgo fácil de usar, con valiosas listas de comprobación y cuestionarios apoyados por un paquete de software. capers jones (assesment and control of software risks , prentice hall, 1994) presenta un detallado análisis de los riesgos de software, que incluye datos recopilados de cientos de proyectos de software. jones define 60 factores de riesgo que pueden afectar el resultado de los proyectos de software. boehm [boe89] sugiere excelentes cuestionarios y formatos de lista de verificación que pueden resultar invaluables en la identifica-ción del riesgo. charette [cha89] presenta un tratamiento detallado de la mecánica del análisis de riesgos, y se apoya en teoría de probabilidad y técnicas estadísticas para analizar los riesgos. en otro volumen, charette (application strategies for risk analysis , mcgraw-hill, 1990) analiza el riesgo en el contexto de la ingeniería de sistemas y de software, y sugiere estrategias pragmáticas para la gestión del riesgo. gilb ( principles of software engineering management, addison-wesley, 1988) presenta un conjunto de “principios” (que con frecuencia son entretenidos y en ocasiones profundos) que pueden servir como una valiosa guía para la gestión del riesgo. ewusi-mensah (software development failures: anatomy of abandoned projects , mit press, 2003) y your- don (death march, prentice hall, 1997) estudian lo que ocurre cuando los riesgos abruman a un equipo de proyecto de software. bernstein ( against the gods, wiley, 1998) presenta una entretenida historia del riesgo, que se remonta a tiempos antiguos. el software engineering institute publicó muchos reportes detallados y manuales acerca del análisis y la gestión del riesgo. el panfleto afscp 800-45 del air force systems command [afc88] describe la identifica-ción del riesgo y técnicas para su reducción. cada tema del acm software engineering notes tiene una sección titulada “riesgos para el público” (editor, p. g. neumann). si quiere las más recientes y mejores historias de horror del software, éste es el lugar al que debe ir. en internet está disponible una gran variedad de fuentes de información acerca de la gestión del riesgo de software. una lista actualizada de referencias en la world wide web que son relevantes para la gestión del riesgo puede encontrarse en el sitio del libro: www.mhhe.com/engcs/compsci/pressman/profes- sional/olc/ser.htm 28pressman(640-654).indd  65428pressman(640-654).indd  654 26/1/10  17:33:5626/1/10  17:33:56