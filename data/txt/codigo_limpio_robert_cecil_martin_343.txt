public static final int EARLIEST_DATE_ORDINAL = 2; // 1/1/1900 public static final int LATEST_DATE_ORDINAL = 2958465; // 12/31/9999 Desconozco por qué  EARLIEST_DATE_ORDINAL  es 2 en lugar de 0. El comentario de la línea 829 sugiere que tiene que ver con la forma de representar fechas en Microsoft Excel. Hay información mucho más completa en una variante de  DayDate :  SpreadsheetDate  (véase el Listado  B-5).  El comentario de la línea 71 describe este problema. El problema parece relacionado con la implementación de SpreadsheetDate  y no con  DayDate . Mi conclusión es que EARLIEST_DATE_ORDINAL  y  LATEST_DATE_ORDINAL  no pertenecen a  DayDate  y deberían cambiarse a  SpreadsheetDate  [G6]. De hecho, una búsqueda en el código demuestra que estas variables sólo se usan en  SpreadsheetDate . Ni en  DayDate , ni en otras clases de la estructura JCommon. Por lo tanto, las cambio por  SpreadsheetDate . Las siguientes variables,  MINIMUM_YEAR_SUPPORTED  y MAXIMUM_YEAR_SUPPORTED  (líneas 104 y 107), constituyen un dilema. Parece evidente que si  DayDate  es una clase abstracta que no dice nada sobre implementación, no debería informarnos de un año mínimo o máximo. De nuevo, siento la necesidad de cambiar las variables a  SpreadsheetDate  [G6]. Pero una búsqueda rápida de los usuarios de estas variables muestra que otra clase las utiliza:  RelativeDayOfWeekRule  (véase el Listado  B-6),  Vemos dicho uso en las líneas 177 y 178, en la función  getDate , donde se usan para comprobar que el argumento de  getDate  sea un año válido. El dilema es que un usuario de una clase abstracta necesita información sobre su implementación. Tendremos que proporcionar esta información sin contaminar  DayDate . Por lo general, obtendríamos la información de implementación de una instancia de una variante. Sin embargo, la función  getDate  no recibe una instancia de  DayDate , aunque sí la devuelve, lo que significa que debe crearla en alguna parte. La solución está en las líneas  187-205.  La instancia  DayDate se crea por medio de una de estas tres funciones:  getPreviousDayOfWeek , getNearestDayOfWeek  o  getFollowingDayOfWeek . Si nos fijamos en el 344