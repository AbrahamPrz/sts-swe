572 capítulo 21 ■ ingeniería de software orientada a aspectos dicha clínica. esto simplifica la labor del personal clínico y reduce las posibilidades de que un médico prescriba por error el medicamento equivocado. sin embargo, esta organización significa que la información en la base de datos debe actualizarse desde algunos lugares diferentes en el sistema. por ejemplo, la información del paciente puede modificarse cuando sus datos personales cambian, al prescribirle un nuevo medicamento, al asignarle un nuevo especialista, etcétera. en aras de la sencillez, suponga que todos los componentes del sistema usan una estrategia de nomenclatura consistente y que todas las actualizaciones de la base de datos se implementan mediante métodos que comienzan con “update”. por lo tanto, existen métodos en el sistema como: updatepersonalinformation (patientid, infoupdate) updatemedication (patientid, medicationupdate)  el paciente se identifica mediante patientid y los cambios a realizar se codifican en el segundo parámetro; los detalles de esta codificación no son importantes para este ejemplo. las actualizaciones se realizan por el personal del hospital, que ingresa al sistema. imagine que ocurre una violación de la seguridad y se modifica maliciosamente infor-mación del paciente. tal vez alguien dejó por accidente su computadora conectada al sistema y una persona no autorizada entró al mismo. alternativamente, una persona auto-rizada puede tener acceso y modificar maliciosamente la información del paciente. para reducir la probabilidad de que esto ocurra nuevamente, se introduce una nueva política de seguridad. antes de realizar cualquier cambio a la base de datos del paciente, la per-sona que solicita el cambio de nuevo debe autenticarse en el sistema. los detalles de quién hace el cambio también se registran en un archivo aparte. esto ayudará a rastrear los problemas si volvieran a ocurrir. una forma de implementar esta nueva política es modificar el método update en ca-da componente para llamar a otros métodos y realizar authentication (autenticación) y figura 21.4 terminología usada en la ingeniería de software orientada a aspectostérmino definición consejo (advice) el código que implementa una competencia. aspecto (aspect) una abstracción de programa que define una competencia transversal. incluye la definición de un punto de corte ( pointcut) y el consejo (advice) asociado con dicha competencia. punto de enlace ( join point)un evento en un programa en ejecución en que puede ejecutarse el consejo asociado con un aspecto. modelo de punto de enlace ( join point model )el conjunto de eventos que se pueden referenciar en un punto de corte. punto de corte ( pointcut) un enunciado, incluido en un aspecto, que define los puntos de enlace en que debe ejecutarse el consejo del aspecto asociado. tejido (weaving) la incorporación de código del consejo (advice) en los puntos de enlace ( join point) especificados por un tejedor (weaving) de aspectos m21_sommerville_ingenieria_1ed_se_565-590.indd  572m21_sommerville_ingenieria_1ed_se_565-590.indd  572 3/18/11  5:38:58 pm3/18/11  5:38:58 pm