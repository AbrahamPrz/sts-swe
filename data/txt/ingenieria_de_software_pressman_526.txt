capítulo 21 modelado y verificación formal 495  la expresión antes de implies es necesaria para garantizar que se ignoran los pares donde ambos elementos son el mismo bloque. 4. la colección de bloques utilizados y bloques que no se utilizan ser á la colección total de bloques que constituyen los archivos. context blockhandler inv: allblocks 5 used2.union(free) 5. la colección de bloques no utilizados no tendr á números de bloque duplicados. context blockhandler inv: free2.isunique(ablock | ablock.number) 6. la colección de bloques utilizados no tendr á números de bloque duplicados. context blockhandler inv: used2.isunique(ablock | ablock.number) ocl también puede usarse para especificar precondiciones y poscondiciones de operaciones. por ejemplo, lo siguiente describe operaciones que remueven y agregan conjuntos de bloques a la fila. observe que la notación x@pre indica el objeto x como existe antes de la operación; esto es opuesto a la notación matemática estudiada anteriormente, donde la x está después de la operación que se designa especialmente (como x’). context blockhandler::removeblocks() pre: blockqueue 2.size() .0 post: used 5 used @pre-blockqueue @pre2.first() and free = free @pre2.union(blockqueue @pre2.first()) and blockqueue 5 blockqueue @pre2.excluding(blockqueue @pre2.first) context blockhandler::addblocks(ablockset :blockset) pre: used2.includesall(ablockset.elements)post: (blockqueue.elements 5 blockqueue.elements @pre 2. append (ablockset.elements) andused 5 used @pre and free 5 free @pre ocl es un lenguaje de modelado, pero tiene todos los atributos de un lenguaje formal. ocl permite la expresión de varias restricciones, precondiciones y poscondiciones, guardias y otras características que se relacionan con los objetos representados en varios modelos uml. 21.7.2 el lenguaje de especificación z z es un lenguaje de especificación que se usa ampliamente dentro de la comunidad de métodos formales. el lenguaje z se aplica a conjuntos escritos, relaciones y funciones dentro del contexto de la lógica de predicados de primer orden para construir esquemas, un medio para estructurar la especificación formal. las especificaciones z se organizan como un conjunto de esquemas, una estructura de len- guaje que introduce variables y que especifica la relación entre dichas variables. un esquema es en esencia la especificación formal análoga del componente de lenguaje de programación. los esquemas se usan para estructurar una especificación formal en la misma forma en la que los componentes se usan para estructurar un sistema. un esquema describe los datos almacenados a los que accede y que altera un sistema. en el contexto de z, esto se llama “estado”. este uso del término estado en z es ligeramente diferente webref en www.users.cs.york.ac. uk/~susan/abs/z.htm, puede encontrarse información detallada acerca del lenguaje z. 21pressman(478-500).indd  49521pressman(478-500).indd  495 19/1/10  12:43:2819/1/10  12:43:28