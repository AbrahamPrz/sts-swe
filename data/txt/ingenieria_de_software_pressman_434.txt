capítulo 17 estrategias de prueba de software 403 de datos contenidos dentro de las fronteras de los datos válidos para un programa pueden cau- sar procesamiento extremo, e incluso erróneo, o profunda degradación del rendimiento. la prueba de sensibilidad intenta descubrir combinaciones de datos dentro de clases de entrada válidas que puedan causar inestabilidad o procesamiento inadecuado. 17.7.4 pruebas de rendimiento para sistemas en tiempo real y sistemas embebidos , el software que proporcione la función requerida, pero que no se adecue a los requerimientos de rendimiento, es inaceptable. la prueba de rendimiento se diseña para poner a prueba el rendimiento del software en tiempo de corrida, dentro del contexto de un sistema integrado. la prueba del rendimiento ocurre a lo largo de todos los pasos del proceso de prueba. incluso en el nivel de unidad, puede accederse al rendi-miento de un módulo individual conforme se realizan las pruebas. sin embargo, no es sino hasta que todos los elementos del sistema están plenamente integrados cuando puede determinarse el verdadero rendimiento de un sistema. las pruebas de rendimiento con frecuencia se aparean con las pruebas de esfuerzo y por lo general requieren instrumentación de hardware y de software, es decir, con frecuencia es nece-sario medir la utilización de los recursos (por ejemplo, ciclos del procesador) en forma meticu-losa. la instrumentación externa puede monitorear intervalos de ejecución y eventos de registro (por ejemplo, interrupciones) conforme ocurren, y los muestreos del estado de la máquina de manera regular. con la instrumentación de un sistema, la persona que realiza la prueba puede descubrir situaciones que conduzcan a degradación y posibles fallas del sistema. 17.7.5 pruebas de despliegue en muchos casos, el software debe ejecutarse en varias plataformas y bajo más de un entorno de sistema operativo. la prueba de despliegue , en ocasiones llamada prueba de configuración , ejercita el software en cada entorno en el que debe operar. además, examina todos los proce- objetivo: estas herramientas ayudan al equipo de soft- ware a planificar la estrategia de pruebas que se elija y a administrar el proceso de prueba mientras se lleva a cabo. mecánica: las herramientas en esta categoría abordan la planifica- ción de las pruebas, el almacenamiento, administración y control de las mismas; el seguimiento de los requisitos, la integración, el rastreo de errores y la generación de reportes. los gestores de proyecto los usan para complementar las herramientas calendarizadas del proyec-to. quienes realizan las pruebas usan estas herramientas para pla-near actividades de prueba y controlar el flujo de información confor-me avanza el proceso de pruebas. herramientas representativas: 4 qatraq test case management tool, desarrollada por traq software (www.testmanagement.com), “alienta un enfoque estructu- rado de la gestión de pruebas”.qadirector, desarrollada por compuware corp. (www. compuware.com/qacenter), proporciona un solo punto de control para gestionar todas las fases del proceso de pruebas. testworks, desarrollada por software research, inc. (www.soft. com/products/index.html), contiene una suite completamen-te integrada de herramientas de prueba, incluidas herramientas para administración y reporte de pruebas. opensourcetesting.org (www.opensourcetesting.org/ testmgt.php), cita varias herramientas de gestión y planifica-ción de pruebas en fuente abierta. ni teststand, desarrollada por national instruments corp. (www. ni.com), le permite “desarrollar, gestionar y ejecutar secuencias de pruebas escritas en cualquier lenguaje de programación”.herramientas de software planeación y administración de pruebas 4 las herramientas que se mencionan aquí no representan un respaldo, sino una muestra de las herramientas en esta categoría. en la mayoría de los casos, los nombres de las herramientas son marcas registradas por sus res- pectivos desarrolladores. 17pressman(383-410).indd  40317pressman(383-410).indd  403 21/1/10  10:59:2521/1/10  10:59:25