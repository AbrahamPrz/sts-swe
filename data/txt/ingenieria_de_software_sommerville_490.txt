17.3 ■ Composición de componentes  473 después de ejecutar un método. Se trata de invariantes, precondiciones y post-condiciones.  Para acceder al valor de una variable antes de una operación, agregue @pre después de su nombre. Por lo tanto, al usar la edad como ejemplo:  age = age@pre + 1  Este enunciado significa que el valor de la edad después de una operación es uno más del que era antes de dicha operación. Los enfoques basados en OCL se usan cada vez más para agregar información semán-tica a modelos UML, y las descripciones OCL pueden usarse para derivar generadores de código en ingeniería dirigida por modelo. El enfoque general se derivó del enfoque Diseño por Contrato, de Meyer (Meyer, 1992), en el que las interfaces y obligaciones de los objetos en comunicación se especifican formalmente y se refuerzan por el sistema al tiempo de ejecución. Meyer sugiere que usar Diseño por Contrato es esencial si usted debe desarrollar componentes confiables (Meyer, 2003). La figura 17.14 incluye una especificación para los métodos addItem y delete en  Fototeca . El método a especificar se indica mediante el contexto de palabra clave, y las  precondiciones y post-condiciones mediante las palabras clave pre y post. Las precondi-ciones para addItem afirman que: 1. No debe haber una fotografía en la fototeca con el mismo identificador que la foto- grafía a ingresar. 2. Debe existir la fototeca: suponga que crear una fototeca agrega un solo ítem en ella, de manera que el tamaño de una fototeca siempre es mayor que cero.—  La palabra clave del contexto menciona el componente al que se aplican las  condiciones context addItem  — Las precondiciones especifican qué debe ser verdadero antes de ejecutar addItem pre:     PhotoLibrary.libSize() > 0          PhotoLibrary.retrieve(pid) = null — Las post-condiciones especifican qué es verdadero después de la ejecución post:    libSize () = libSize()@pre + 1          PhotoLibrary.retrieve(pid) = p           PhotoLibrary.catEntry(pid) = photodesc context deletepre:     PhotoLibrary.retrieve(pid) <>null ;post:    PhotoLibrary.retrieve(pid) = null           PhotoLibrary.catEntry(pid) = PhotoLibrary.catEntry(pid)@pre           PhotoLibrary.libSize() = libSize()@pre—1   Figura 17.14  Descripción OCL de la interfaz Fototeca M17_SOMMERVILLE_INGENIERIA_1ED_SE_452-478.indd   473M17_SOMMERVILLE_INGENIERIA_1ED_SE_452-478.indd   473 3/18/11   5:03:06 PM3/18/11   5:03:06 PM