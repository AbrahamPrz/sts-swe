350 PARTE TRES  ADMINISTRACIÓN DE LA CALIDAD dentro de los componentes B, C y D, el componente A no puede programarse para ser probado  hasta que los componentes B, C y D no hayan sido probados por completo. La programación  del proyecto reflejaría esto. Pero si el tiempo es demasiado escaso y debe disponerse de A para  realizar pruebas de importancia crítica, puede decidirse a probar A sin sus componentes subor- dinados (que están un poco retrasados) a fin de que esté disponible para otras pruebas que se  realicen antes de la entrega. Después de todo, el plazo final se acerca. En consecuencia, A po- dría tener defectos ocultos que sólo se descubrirían mucho tiempo después. La calidad bajaría. Decisiones orientadas al riesgo.   La administración del riesgo (véase el capítulo 28) es uno  de los atributos clave de un proyecto exitoso de software. En realidad se necesita saber lo que  puede salir mal y establecer un plan de contingencia para ese caso. Demasiados equipos de software prefieren un optimismo ciego y establecen un programa de desarrollo con la suposi-ción de que nada saldrá mal. Lo que es peor , no tienen manera de manejar las cosas que salgan  mal. En consecuencia, cuando un riesgo se convierte en realidad, reina el caos y aumenta el grado de locuras que se cometen, con lo que invariablemente la calidad se desploma. El dilema de la calidad del software se resume mejor con el enunciado de la Ley de Meskimen:  Nunca hay tiempo para hacerlo bien, pero siempre hay tiempo para hacerlo otra vez. Mi consejo es:  tomarse el tiempo para hacerlo bien casi nunca es la decisión equivocada.  14.4 L OGRAR  LA CALIDAD  DEL SOFTWARE La calidad del software no sólo se ve. Es el resultado de la buena administración del proyecto y de una correcta práctica de la ingeniería de software. La administración y práctica se aplican en el contexto de cuatro actividades principales que ayudan al equipo de software a lograr una alta calidad en éste: métodos de la ingeniería de software, técnicas de administración de proyectos, acciones de control de calidad y aseguramiento de la calidad del software. 14.4.1  Métodos de la ingeniería de software Si espera construir software de alta calidad, debe entender el problema que se quiere resolver. También debe ser capaz de crear un diseño que esté de acuerdo con el problema y que al mismo tiempo tenga características que lleven al software a las dimensiones y factores de calidad que se estudiaron en la sección 14.2. En la parte 2 de este libro se presentó una amplia variedad de conceptos y métodos que con- ducen a una comprensión razonablemente completa del problema y al diseño exhaustivo que establece un fundamento sólido para la actividad de construcción. Si el lector aplica estos con-ceptos y adopta métodos apropiados de análisis y diseño, se eleva sustancialmente la probabi-lidad de crear software de alta calidad. 14.4.2  Técnicas de administración de proyectos El efecto de las malas decisiones de administración sobre la calidad del software se estudió en la sección 14.3.6. Las implicaciones son claras: si 1) un gerente de proyecto usa estimaciones para verificar que las fechas pueden cumplirse, 2) se comprenden las dependencias de las acti-vidades programadas y el equipo resiste la tentación de usar atajos, 3) la planeación del riesgo se lleva a cabo de manera que los problemas no alienten el caos, entonces la calidad del soft-ware se verá influida de manera positiva. Además, el plan del proyecto debe incluir técnicas explícitas para la administración de la  calidad y el cambio. Las técnicas que llevan a buenas prácticas de administración de proyectos se estudian en la parte 4 de este libro.¿Qué necesito hacer  para influir en la calidad de manera positiva?? 14Pressman(337-353).indd   35014Pressman(337-353).indd   350 14/1/10   16:51:3114/1/10   16:51:31