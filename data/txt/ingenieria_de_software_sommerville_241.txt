224 capítulo 8 ■ pruebas de software software (jeffries y melnik, 2007). en algunos ensayos, se demostró que conduce a mejo- rar la calidad del código; en otros, los resultados no son concluyentes. sin embargo, no hay evidencia de que el tdd conduzca a un código con menor calidad. 8. 3 pruebas de versión las pruebas de versión son el proceso de poner a prueba una versión particular de un sis-tema que se pretende usar fuera del equipo de desarrollo. por lo general, la versión del sistema es para clientes y usuarios. no obstante, en un proyecto complejo, la versión podría ser para otros equipos que desarrollan sistemas relacionados. para productos de software, la versión sería para el gerente de producto, quien después la prepara para su venta. existen dos distinciones importantes entre las pruebas de versión y las pruebas del sistema durante el proceso de desarrollo: 1. un equipo independiente que no intervino en el desarrollo del sistema debe ser el responsable de las pruebas de versión. 2. las pruebas del sistema por parte del equipo de desarrollo deben enfocarse en el descubrimiento de bugs en el sistema (pruebas de defecto). el objetivo de las prue-bas de versión es comprobar que el sistema cumpla con los requerimientos y sea suficientemente bueno para uso externo (pruebas de validación). la principal meta del proceso de pruebas de versión es convencer al proveedor del sistema de que éste es suficientemente apto para su uso. si es así, puede liberarse como un producto o entregarse al cliente. por lo tanto, las pruebas de versión deben mostrar que el sistema entrega su funcionalidad, rendimiento y confiabilidad especificados, y que no falla durante el uso normal. deben considerarse todos los requerimientos del sistema, no sólo los de los usuarios finales del sistema. las pruebas de versión, por lo regular, son un proceso de prueba de caja negra, donde las pruebas se derivan a partir de la especificación del sistema. el sistema se trata como una caja negra cuyo comportamiento sólo puede determinarse por el estudio de entradas y salidas relacionadas. otro nombre para esto es “prueba funcional”, llamada así porque al examinador sólo le preocupa la funcionalidad y no la aplicación del software. 8.3.1 pruebas basadas en requerimientos un principio general de buena práctica en la ingeniería de requerimientos es que éstos deben ser comprobables; esto es, los requerimientos tienen que escribirse de forma que pueda diseñarse una prueba para dicho requerimiento. luego, un examinador comprueba que el requerimiento se cumpla. en consecuencia, las pruebas basadas en requerimientos son un enfoque sistemático al diseño de casos de prueba, donde se considera cada reque-rimiento y se deriva un conjunto de pruebas para éste. las pruebas basadas en requeri-mientos son pruebas de validación más que de defecto: se intenta demostrar que el sistema implementó adecuadamente sus requerimientos. m08_sommerville_ingenieria_1ed_se_205-233.indd  224m08_sommerville_ingenieria_1ed_se_205-233.indd  224 3/18/11  5:40:00 pm3/18/11  5:40:00 pm