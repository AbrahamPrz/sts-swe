612 capítulo 22 ■ gestión de proyectos miembros del grupo. los programadores trabajan en pares para diseñar un código y asu- men responsabilidad conjunta de los programas que desarrollaron. los grupos informales pueden ser muy exitosos, en particular cuando la mayoría de los miembros del grupo son experimentados y competentes. tal grupo toma decisiones por consenso, lo que mejora la cohesión y el rendimiento. sin embargo, si un grupo está compuesto principalmente por miembros inexpertos e incompetentes, la informalidad puede ser un obstáculo porque no existe autoridad definida para dirigir el trabajo, lo que causa una falta de coordinación entre los miembros del grupo y, posiblemente, una even-tual falla del proyecto. los grupos jerárquicos son grupos que comparten una estructura jerárquica con el líder del grupo en la parte superior del escalafón. el líder tiene autoridad más formal que los miembros del grupo y así puede dirigir el trabajo. existe una clara estructura organizacional, y las decisiones se toman hacia la parte superior de la jerarquía y se aplican por las personas que están más abajo en la jerarquía. las comunicaciones, ante todo, son instrucciones del personal ejecutivo y existe relativamente poca comunica-ción ascendente, es decir, desde los niveles más bajos hacia los niveles superiores en la jerarquía. este enfoque funciona bien cuando un problema bien entendido puede descompo-nerse fácilmente en subproblemas en los que las soluciones se desarrollan en diferentes partes de la jerarquía. en dichas situaciones se requiere muy poca comunicación a través de la jerarquía. sin embargo, tales situaciones, en proporción, son poco comunes en la ingeniería de software por las siguientes razones: 1. los cambios al software requieren con frecuencia cambios en varias partes del sistema y esto conduce a una discusión y negociación en todos los niveles de la jerarquía. 2. las tecnologías de software cambian tan rápido que muchas veces el personal más joven conoce más de la tecnología que el personal experimentado. las comu-nicaciones descendentes pueden significar que el administrador del proyecto no vislumbra las oportunidades de usar nuevas tecnologías. el personal más joven puede frustrarse debido a que considera obsoletas las tecnologías usadas para el desarrollo. las organizaciones grupales democráticas y jerárquicas no reconocen formalmente que puede haber diferencias muy grandes de habilidad técnica entre los miembros del grupo. los mejores programadores pueden ser hasta 25 veces más productivos que los peores programadores. tiene sentido aprovechar las capacidades de los mejores elemen-tos en la forma más efectiva y brindarles tanto apoyo como sea posible. uno de los pri-meros modelos organizacionales que tenía la intención de ofrecer apoyo fue el llamado equipo programador jefe. para aprovechar de manera más efectiva a los programadores con mayor habilidad, baker (1972) y otros (aron, 1974; brooks, 1975) sugieren que los equipos deben cons-truirse en torno a un programador jefe individual con gran habilidad. el principio subya-cente del equipo programador jefe es que el personal habilidoso y experimentado debe ser responsable de todo el desarrollo del software. sus integrantes no deben preocuparse por cuestiones rutinarias y deben tener buen apoyo técnico y administrativo para realizar su trabajo. deben enfocarse en el software a desarrollar y no perder mucho tiempo en reuniones externas. m22_sommerville_ingenieria_1ed_se_591-617.indd  612m22_sommerville_ingenieria_1ed_se_591-617.indd  612 3/18/11  5:11:45 pm3/18/11  5:11:45 pm