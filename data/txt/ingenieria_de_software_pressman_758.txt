APÉNDICE 1  INTRODUCCIÓN A UML 727 Los diagramas de clase también pueden mostrar relaciones entre clases. Una clase que sea  una subclase de otra clase se conecta con ella mediante una flecha con una línea sólida y  con una punta triangular hueca. La flecha apunta de la subclase a la superclase. En UML, tal relación se llama generalización. Por ejemplo, en la figura A1.2, las clases Thoroughbred y  QuarterHorse (caballo cuarto de milla) se muestran como subclases de la clase abstracta Horse. Una flecha con una línea punteada indica implementación de una interfaz. En UML, tal relación se llama realización. Por ejemplo, en la figura A1.2, la clase Horse implementa o realiza la interfaz OwnedObject. Una asociación entre dos clases significa que existe una relación estructural entre ellas. Las  asociaciones se representan mediante líneas sólidas. Una asociación tiene muchas partes op-cionales. Puede etiquetarse, así como cada una de sus terminaciones, para indicar el papel de cada clase en la asociación. Por ejemplo, en la figura A1.2, existe una asociación entre Owned- Object y Person, en la que Person juega el papel de owner (propietario). Las flechas en cual- quiera o en ambos lados de una línea de asociación indican navegabilidad. Además, cada ex-tremo de la línea de asociación puede tener un valor de multiplicidad desplegado. Navegabilidad y multiplicidad se explican con más detalle más adelante, en esta sección. Una asociación tam-bién puede conectar una clase consigo misma, mediante un bucle. Tal asociación indica la co-nexión de un objeto de la clase con otros objetos de la misma clase. Una asociación con una flecha en un extremo indica navegabilidad en un sentido. La flecha  significa que, desde una clase, es posible acceder con facilidad a la segunda clase asociada ha-cia la que apunta la asociación; sin embargo, desde la segunda clase, no necesariamente puede accederse con facilidad a la primera clase. Otra forma de pensar en esto es que la primera clase está al tanto de la segunda, pero el segundo objeto de clase no necesariamente está directa-mente al tanto de la primera clase. Una asociación sin flechas por lo general indica una asocia-ción de dos vías, que es lo que se pretende en la figura A1.2; pero también simplemente podría significar que la navegabilidad no es importante y, por tanto, que queda fuera. Debe observarse que un atributo de una clase es muy parecido a una asociación de la clase  con el tipo de clase del atributo. Es decir, para indicar que una clase tiene una propiedad llamada “name” (nombre) de tipo String, podría desplegarse dicha propiedad como atributo, como en la clase Horse en la figura A1.2. De manera alternativa, podría crearse una asociación de una  vía desde la clase Horse hasta la clase String donde el papel de la clase String es “name”. El  enfoque de atributo es mejor para tipos de datos primitivos, mientras que el enfoque de asocia-ción con frecuencia es mejor si la clase propietaria juega un papel principal en el diseño, en cuyo caso es valioso tener una caja de clase para dicho tipo.Horse -name:String +getName():String+getOwner().Person<< interface >> OwnedObject Thoroughbred QuarterHorsePerson*      pro- pietario DateusaFIGURA A1.2 Diagrama  de clase concerniente a caballos 33Pressman(725-742)app1.indd   72733Pressman(725-742)app1.indd   727 20/1/10   19:01:4820/1/10   19:01:48