que el código siempre sea limpio. ¿el arte del código limpio? imagine que cree que el código incorrecto es un obstáculo significativo. imagine que acepta que la única forma de avanzar es mantener el código limpio. entonces se preguntará cómo crear código limpio. no tiene sentido intentar crearlo si no sabe lo que es. la mala noticia es que crear código limpio es como pintar un cuadro. muchos sabemos si un cuadro se ha pintado bien o no, pero poder reconocer la calidad de una obra no significa que sepamos pintar. por ello, reconocer código limpio no significa que sepamos cómo crearlo. para crearlo se requiere el uso disciplinado de miles de técnicas aplicadas mediante un detallado sentido de la «corrección». este sentido del código es la clave. algunos nacen con este sentido. otros han de luchar para conseguirlo. no sólo permite distinguir entre código correcto e incorrecto, sino que también muestra la estrategia para aplicar nuestra disciplina y transformar código incorrecto en código correcto. un programador sin este sentido puede reconocer el desastre cometido en un módulo, pero no saber cómo solucionarlo. un programador con este sentido verá las posibles opciones y elegirá la variante óptima para definir una secuencia de cambios. en definitiva, un programador que cree código limpio es un artista que puede transformar un lienzo en blanco en un sistema de código elegante. concepto de código limpio existen tantas definiciones como programadores. por ello, he consultado la opinión de conocidos y experimentados programadores. bjarne stroustrup, inventor de c++ y autor de the c++ programming language 28