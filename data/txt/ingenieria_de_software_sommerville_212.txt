7.3 ■ conflictos de implementación 195 3. los costos por adaptar y configurar los componentes de software o sistemas reutili- zables, con la finalidad de reflejar los requerimientos del sistema que se desarrolla. 4. los costos de integrar elementos de software reutilizable unos con otros (si usa soft- ware de diferentes fuentes) y con el nuevo código que haya desarrollado. integrar software reutilizable de diferentes proveedores suele ser difícil y costoso, ya que los proveedores podrían hacer conjeturas conflictivas sobre cómo se reutilizará su software respectivo. cómo reutilizar el conocimiento y el software existentes sería el primer punto a con-siderar cuando se inicie un proyecto de desarrollo de software. hay que contemplar las posibilidades de reutilización antes de diseñar el software a detalle, pues tal vez usted quiera adaptar su diseño para reutilización de los activos de software existentes. como se estudió en el capítulo 2, en un proceso de desarrollo orientado a la reutilización uno busca elementos reutilizables y, luego, modifica los requerimientos y el diseño para hacer un mejor uso de ellos. para un gran número de sistemas de aplicación, la ingeniería de software significa en realidad reutilización de software. en consecuencia, en este libro se dedican a este tema varios capítulos de la sección de tecnologías de software (capítulos 16, 17 y 19). 7.3.2 administración de la configuración en el desarrollo de software, los cambios ocurren todo el tiempo, de modo que la adminis-tración del cambio es absolutamente esencial. cuando un equipo de individuos desarrolla software, hay que cerciorarse de que los miembros del equipo no interfieran con el trabajo de los demás. esto es, si dos personas trabajan sobre un componente, los cambios deben coordinarse. de otro modo, un programador podría realizar cambios y sobrescribir en el trabajo de otro. también se debe garantizar que todos tengan acceso a las versiones más actualizadas de componentes de software; de lo contrario, los desarrolladores pueden rehacer lo ya hecho. cuando algo salga mal con una nueva versión de un sistema, se debe poder retroceder a una versión operativa del sistema o componente. administración de la configuración es el nombre dado al proceso general de gestio-nar un sistema de software cambiante. la meta de la administración de la configuración es apoyar el proceso de integración del sistema, de modo que todos los desarrolladores tengan acceso en una forma controlada al código del proyecto y a los documentos, des-cubrir qué cambios se realizaron, así como compilar y vincular componentes para crear un sistema. por lo tanto, hay tres actividades fundamentales en la administración de la configuración: 1. gestión de versiones, donde se da soporte para hacer un seguimiento de las diferen- tes versiones de los componentes de software. los sistemas de gestión de versiones incluyen facilidades para que el desarrollo esté coordinado por varios programado-res. esto evita que un desarrollador sobrescriba un código que haya sido enviado al sistema por alguien más. 2. integración de sistema, donde se da soporte para ayudar a los desarrolladores a defi- nir qué versiones de componentes se usan para crear cada versión de un sistema. luego, esta descripción se utiliza para elaborar automáticamente un sistema al com-pilar y vincular los componentes requeridos. m07_sommerville_ingenieria_1ed_se_176-204.indd  195m07_sommerville_ingenieria_1ed_se_176-204.indd  195 3/18/11  4:50:14 pm3/18/11  4:50:14 pm