967 */ 968 public abstract boolean isOnOrAfter(SerialDate other); 969 970 /** 971 * Devuelve <code>true</code> si {@link SerialDate} se encuentra en el 972 * rango especificado (INCLUSIVE). El orden de fecha de d1 y d2 no es 973 * importante. 974 * 975 * @param d1 fecha límite del rango. 976 * @param d2 la otra fecha límite del rango. 977 * 978 * @return Un valor booleano. 979 */ 980 public abstract boolean isInRange(SerialDate d1, SerialDate d2); 981 982 /** 983 * Devuelve <code>true</code> si {@link SerialDate} se encuentra en el 984 * rango especificado (el invocador especifica si los puntos finales se 985 * incluyen o no). El orden de fecha de d1 y d2 no es importante. 986 * 987 * @param d1 fecha límite del rango. 988 * @param d2 la otra fecha límite del rango. 989 * @param include un código que controla si las fechas inicial y final 990 * se incluyen o no en el rango. 991 * 992 * @return Un valor booleano. 993 */ 994 public abstract boolean isInRange(SerialDate d1, SerialDate d2, 995 int include); 996 997 /** 998 * Devuelve la última fecha que coincide con el día de la semana especificado y 999 * que es ANTERIOR a esta fecha. 1000 * 1001 * @param targetDOW un código para el día de la semana de destino. 1002 * 1003 * @return la última fecha que coincide con el día de la semana especificado y 1004 * que es ANTERIOR a esta fecha. 1005 */ 1006 public SerialDate getPreviousDayOfWeek(final int targetDOW) { 1007 return getPreviousDayOfWeek(targetDOW, this); 1008 } 1009 461