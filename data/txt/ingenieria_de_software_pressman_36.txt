capítulo 1 el software y la ingeniería de software 5 sas elevadas de fallas al comienzo de la vida de un programa. sin embargo, éstas se co- rrigen y la curva se aplana, como se indica. la curva idealizada es una gran simplifica-ción de los modelos reales de las fallas del software. aun así, la implicación está clara: el software no se desgasta, ¡pero sí se deteriora! esta contradicción aparente se entiende mejor si se considera la curva real en la fi- gura 1.2. durante su vida, 2 el software sufrirá cambios. es probable que cuando éstos se realicen, se introduzcan errores que ocasionen que la curva de tasa de fallas tenga au-mentos súbitos, como se ilustra en la “curva real” (véase la figura 1.2). antes de que la curva vuelva a su tasa de fallas original de estado estable, surge la solicitud de otro cambio que hace que la curva se dispare otra vez. poco a poco, el nivel mínimo de la tasa de fallas comienza a aumentar: el software se está deteriorando como consecuen-cia del cambio. otro aspecto del desgaste ilustra la diferencia entre el hardware y el software. cuando un componente del hardware se desgasta es sustituido por una refacción. en cambio, no hay refacciones para el software. cada falla de éste indica un error en el di-seño o en el proceso que tradujo el diseño a código ejecutable por la máquina. enton-ces, las tareas de mantenimiento del software, que incluyen la satisfacción de peticio-nes de cambios, involucran una complejidad considerablemente mayor que el mantenimiento del hardware. 3. aunque la industria se mueve hacia la construcción basada en componentes, la mayor parte del software se construye para un uso individualizado. a medida que evoluciona una disciplina de ingeniería, se crea un conjunto de compo- nentes estandarizados para el diseño. los tornillos estándar y los circuitos integrados preconstruidos son sólo dos de los miles de componentes estándar que utilizan los in-genieros mecánicos y eléctricos conforme diseñan nuevos sistemas. los componentes reutilizables han sido creados para que el ingeniero pueda concentrarse en los elemen-tos verdaderamente innovadores de un diseño; es decir, en las partes de éste que repre-sentan algo nuevo. en el mundo del hardware, volver a usar componentes es una parte si quiere reducir el deterioro del software, tendrá que mejorar su diseño (capítulos 8 a 13).consejotasa de fallas incrementada debido a efectos colaterales tiempotasa de fallascambio curva real curva idealizadafigura 1.2 curvas de falla del software 2 en realidad, los distintos participantes solicitan cambios desde el momento en que comienza el desarrollo y mucho antes de que se disponga de la primera versión.punto clave los métodos de la ingeniería de software llevan a reducir la magnitud de los picos y de la pendiente de la curva real en la figura 1.2. cita: “las ideas son los ladrillos con los que se construyen las ideas.” jason zebehazy 01pressman(001-024).indd  501pressman(001-024).indd  5 14/1/10  13:30:5614/1/10  13:30:56