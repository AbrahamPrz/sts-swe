18.1 ■ conflictos de los sistemas distribuidos 483 el estándar corba (pope, 1997) desarrollado en la década de 1990 tenía la intención de conseguir esto, aunque nunca logró una cantidad suficiente que lo adoptaran. en vez de ello, muchas compañías eligieron desarrollar sistemas utilizando estándares propieta-rios para componentes de compañías como sun y microsoft. ello proporcionó mejores implementaciones y soporte de software, y a largo plazo mejor soporte para protocolos industriales. los estándares de servicio web (que se estudian en el capítulo 19) para arquitecturas orientadas a servicios se desarrollaron para ser estándares abiertos. sin embargo, existe significativa resistencia a dichos estándares debido a su percibida ineficiencia. algunos desarrolladores de sistemas basados en servicio optaron por los llamados protocolos restful, ya que tienen una sobrecarga inferior a los protocolos de servicio web. la escalabilidad de un sistema refleja su disponibilidad para entregar una alta calidad de servicio conforme aumentan las demandas al sistema. neuman (1994) identifica tres dimensiones de la escalabilidad: 1. tamaño debe ser posible agregar más recursos a un sistema para enfrentar el cre- ciente número de usuarios. 2. distribución debe ser posible dispersar geográficamente los componentes de un sistema sin reducir su rendimiento. 3. manejabilidad debe ser posible administrar un sistema conforme aumenta en tamaño, incluso si las partes del sistema se ubican en organizaciones independientes. en términos de tamaño, hay una distinción entre expandir (scaling up) y ampliar (scaling out). lo primero significa sustituir recursos en el sistema con recursos más poderosos. por ejemplo, es posible expandir o aumentar la memoria de un servidor de 16 gb a 64 gb. en cambio, ampliar significa agregar recursos adicionales al sistema (por ejem-plo, un servidor web adicional para trabajar junto a un servidor existente). ampliar es a menudo más efectivo en costo que expandir, aun cuando, por lo general, representa que el sistema debe diseñarse para que sea posible el procesamiento concurrente. en la parte 2 de este libro se analizaron los conflictos generales de la seguridad y los conflictos de la ingeniería de seguridad. sin embargo, cuando se distribuye un sistema, el número de formas en que éste puede ser atacado aumenta considerablemente, en compa-ración con los sistemas centralizados. si una parte del sistema es atacada con éxito, enton-ces el atacante podrá usar esto como una “puerta trasera” en otras partes del sistema. los tipos de ataques contra los que debe defenderse un sistema distribuido son los siguientes: 1. intercepción, en que un atacante intercepta las comunicaciones entre las partes del sistema, para que haya poca confidencialidad. 2. interrupción, que sucede cuando los servicios del sistema son atacados y no pueden entregarse como se esperaba. los ataques de negación de servicio implican el bom-bardeo de un nodo con peticiones de servicio ilegítimas, de modo que no se puede hacer frente a peticiones legítimas. 3. modificación, que se presenta cuando el atacante cambia los datos o servicios del sistema. 4. fabricación, que sucede cuando un atacante genera información que no debe existir y luego la usa para conseguir ciertos privilegios. por ejemplo, un atacante puede gene-rar una falsa entrada de contraseña y usarla para obtener el acceso a un sistema. m18_sommerville_ingenieria_1ed_se_479-507.indd  483m18_sommerville_ingenieria_1ed_se_479-507.indd  483 3/18/11  5:03:55 pm3/18/11  5:03:55 pm