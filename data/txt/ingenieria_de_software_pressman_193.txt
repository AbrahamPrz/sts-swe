162 parte dos modelado cohesión, que se utiliza para evaluar el objeto del procesamiento de una función dada. por ahora, se trata de mejorar los dfd hasta que cada burbuja tenga “un solo pensamiento”. 7.2.2 creación de un modelo de flujo de control para ciertos tipos de aplicaciones, el modelo de datos y el diagrama de flujo de datos es todo lo que se necesita para obtener una visión significativa de los requerimientos del software. sin embargo, como ya se dijo, un gran número de aplicaciones son “motivadas” por eventos y no por datos, producen información de control en lugar de reportes o pantallas, y procesan infor-mación con mucha atención en el tiempo y el desempeño. tales aplicaciones requieren el uso del modelado del flujo de control, además de modelar el flujo de datos. se dijo que un evento o aspecto del control se implementa como valor booleano (por ejemplo, verdadero o falso, encendido o apagado, 1 o 0) o como una lista discreta de condiciones (vacío, bloqueado, lleno, etc.). se sugieren los lineamientos siguientes para seleccionar eventos candi-datos potenciales: • enlistar todos los sensores que son “leídos” por el software. • enlistar todas las condiciones de interrupción. • enlistar todos los “interruptores” que son activados por un operador. • enlistar todas las condiciones de los datos. • revisar todos los “aspectos de control” como posibles entradas o salidas de especifica- ción del control, según el análisis gramatical de sustantivos y verbos que se aplicó a la narración del procesamiento. • describir el comportamiento de un sistema con la identificación de sus estados, identi- ficar cómo se llega a cada estado y definir las transiciones entre estados. • centrarse en las posibles omisiones, error muy común al especificar el control; por ejemplo, se debe preguntar: “¿hay otro modo de llegar a este estado o de salir de él?” entre los muchos eventos y aspectos del control que forman parte del software de casase- gura, se encuentran evento de sensor (por ejemplo, un sensor se descompone), bandera de cambio (señal para que la pantalla cambie) e interruptor iniciar/detener (señal para encen- der o apagar el sistema). 7.2.3 la especificación de control una especificación de control (cspec) representa de dos maneras distintas el comportamiento del sistema (en el nivel desde el que se hizo referencia a él).3 la cspec contiene un diagrama de estado que es una especificación secuencial del comportamiento. también puede contener una tabla de activación del programa, especificación combinatoria del comportamiento. la figura 7.4 ilustra un diagrama de estado preliminar 4 para el nivel 1 del modelo de flujo de control para casasegura. el diagrama indica cómo responde el sistema a eventos conforme pasa por los cuatro estados definidos en este nivel. con la revisión del diagrama de estado se deter-mina el comportamiento del sistema, y, lo que es más importante, se investiga si existen “agu-jeros” en el comportamiento especificado. por ejemplo, el diagrama de estado (véase la figura 7.4) indica que las transiciones del estado ocioso ocurren si el sistema se reinicia, se activa o se apaga. si el sistema se activa (por ejem-¿cómo seleccionar los eventos potenciales para un diagrama de flujo de control, de estado o cspec?? 3 en la sección 7.3 se presenta notación adicional de modelado por comportamiento. 4 la notación del diagrama de estado que se emplea aquí sigue la del uml. en el análisis estructurado se dispone de un “diagrama de transición de estado”, pero el formato uml es mejor en contenido y representación de la información. 07pressman(158-182).indd  16207pressman(158-182).indd  162 14/1/10  14:19:3814/1/10  14:19:38