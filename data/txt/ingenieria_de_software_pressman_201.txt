170 parte dos modelado una perspectiva diferente y da la oportunidad de descubrir patrones que tal vez suceden en un dominio de aplicación o por analogía en distintos dominios de aplicación. el elemento más fundamental en la descripción de un modelo de requerimientos es el caso de uso. en el contexto de este análisis, un conjunto coherente de casos de uso sirve como base para descubrir uno o más patrones de análisis. un patrón de análisis semántico (pas) “es un pa- trón que describe un conjunto pequeño de casos de uso coherentes que describen a su vez una aplicación general” [fer00]. considere el siguiente caso de uso preliminar para el software que se requiere a fin de con- trolar y vigilar una cámara de visión real y un sensor de proximidad para un automóvil: caso de uso: vigilar el movimiento en reversa descripción: cuando se coloca el vehículo en reversa, el software de control permite que se transmita un video a una pantalla que está en el tablero, desde una cámara colocada en la parte posterior. el software superpone varias líneas de orientación y distancia en la pantalla a fin de que el operador del auto mantenga la orientación cuando éste se mueve en reversa. el software de control también vigila un sensor de proximidad con el fin de determinar si un objeto se encuentra dentro de una distancia de 10 pies desde la parte trasera del carro. esto frenará al vehículo de manera automática si el sen-sor de proximidad indica que hay un objeto a x pies de la defensa trasera, donde x se determina con base en la velocidad del automóvil. este caso de uso implica varias funciones que se mejorarían y elaborarían (en un conjunto co- herente de casos de uso) durante la reunión para recabar y modelar los requerimientos. sin importar cuánta elaboración se logre, los casos de uso sugieren un pas sencillo pero con am-plias aplicaciones (la vigilancia y control de sensores y actuadores de un sistema físico con base en software). en este caso, los “sensores” dan información en video sobre la proximidad. el “actuador” es el sistema de frenado del vehículo (que se invoca si hay un objeto muy cerca de éste). pero en un caso más general, se descubre un patrón de aplicación muy amplio. en muchos dominios distintos de aplicación, se requiere software para vigilar sensores y controlar actuadores físicos. se concluye que podría usarse mucho un patrón de análisis que describa los requerimientos generales para esta capacidad. el patrón, llamado actuador-sen- sor, se aplicaría como parte del modelo de requerimientos para casasegura y se analiza en la sección 7.4.2, a continuación. 7.4.2 ejemplo de patrón de requerimientos: actuador-sensor12 uno de los requerimientos de la función de seguridad de casasegura es la capacidad de vigilar sensores de seguridad (por ejemplo, sensores de frenado, de incendio, de humo o contenido de co, de agua, etc.). las extensiones basadas en internet para casasegura requerirán la capacidad de controlar el movimiento (por ejemplo, apertura, acercamiento, etc.) de una cámara de segu-ridad dentro de una residencia. la implicación es que el software de casasegura debe manejar varios sensores y “actuadores” (como los mecanismos de control de las cámaras). konrad y cheng [kon02] sugieren un patrón llamado actuador-sensor que da una guía útil para modelar este requerimiento dentro del software de casasegura. a continuación se presenta una versión abreviada del patrón actuador-sensor, desarrollada originalmente para aplicacio- nes automotrices. nombre del patrón. actuador-sensor objetivo. especifica distintas clases de sensores y actuadores en un sistema incrustado. motivación. por lo general, los sistemas incrustados tienen varias clases de sensores y actua- dores, conectados en forma directa o indirecta con una unidad de control. a unque muchos de 12 esta sección se adaptó de [kon02] con permiso de los autores. 07pressman(158-182).indd  17007pressman(158-182).indd  170 14/1/10  14:19:4014/1/10  14:19:40