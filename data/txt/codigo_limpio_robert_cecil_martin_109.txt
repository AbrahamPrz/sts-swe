for (i = 2; i < Math.sqrt(s) + 1; i++) { if (f[i]) // si no está tachado, tachar sus múltiplos. { for (j = 2 * i; j < s; j += i) f[j] = false; // el múltiplo no es primo } } // ¿cuántos primos hay? int count = 0; for (i = 0; i < s; i++) { if (f[i]) count++; // contador. } int[] primes = new int[count]; // enviar primos al resultado for (i = 0, j = 0; i < s; i++) { if (f[i]) // si es primo primes[j++] = i; } return primes; // devolver los primos } else // maxValue < 2 return new int[0]; // devolver matriz null si la entrada no es correcta. } } En el Listado 4-8 puede ver una versión refactorizada del mismo módulo. Se ha limitado considerablemente el uso de comentarios. Hay sólo dos en todo el módulo y ambos claramente descriptivos. Listado 4-8 PrimeGenerator.java (refactorizado). /** * Esta clase genera números primos hasta la cantidad máxima especificada por el * usuario. El algoritmo usado es la Criba de Eratóstenes. Dada una matriz de enteros * empezando por el 2: buscar el primer entero sin tachar y tachar todos sus * múltiplos. Repetir hasta que no haya más múltiplos en la matriz. */ public class PrimeGenerator { 110