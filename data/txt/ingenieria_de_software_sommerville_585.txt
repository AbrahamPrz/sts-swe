568 capítulo 21 ■ ingeniería de software orientada a aspectos de un programa”, aunque ninguna de estas definiciones es particularmente útil en la prác- tica. sin duda, las competencias son más que simplemente elementos funcionales, pero una definición más general es tan vaga, que en realidad resulta inútil. según el autor, la mayoría de los intentos por definir las competencias son problemá-ticos porque tratan de relacionar las competencias a programas. de hecho, como explican jacobson y ng (2004), las competencias se consideran en realidad como reflejos de los requerimientos y las prioridades de las partes interesadas en el sistema. el rendimiento del sistema puede ser una competencia porque los usuarios quieren tener una respuesta rápida de un sistema; algunas partes interesadas tal vez se preocupen porque el sistema incluya una particular funcionalidad; las compañías que soportan un sistema pueden inclinarse en que sea fácil de mantener. por lo tanto, una competencia puede definirse como algo que es de interés o significado para un participante o un grupo de participantes. si piensa en las competencias como una forma de organizar los requerimientos, observará por qué es una buena práctica un enfoque de la implementación que separa las competencias en diferentes elementos de programa. se considera más fácil rastrear las competencias, expresadas como un requerimiento o un conjunto relacionado de requeri-mientos, a partir de los componentes del programa, que implementar dichas competen-cias. si los requerimientos cambian, entonces es evidente la parte del programa que debe cambiar. existen varios tipos diferentes de competencias o intereses para el participante: 1. competencias funcionales, que se relacionan con la funcionalidad específica a incluir en un sistema. por ejemplo, en un sistema de control ferroviario, una compe-tencia funcional específica consiste en el frenado del tren. 2. competencias de calidad del servicio, las cuales se relacionan con el comporta-miento no funcional de un sistema. éstas incluyen características como rendimiento, fiabilidad y disponibilidad. 3. competencias de política, que se relacionan con políticas generales que rigen el uso de un sistema. las limitaciones políticas incluyen competencias de seguridad y protección, y las competencias relacionadas con las reglas de negocio. 4. competencias de sistema, las cuales se relacionan con atributos del sistema como un todo, tales como su mantenibilidad o configurabilidad. 5. competencias organizacionales, que se relacionan con las metas y prioridades de la organización. entre ellas se incluyen producir un sistema dentro de presupuesto, usar los activos de software existentes y mantener la imagen de la organización. las competencias centrales de un sistema son aquellas competencias funcionales rela-cionadas con su propósito primario. así, para un sistema de información de pacientes en un hospital, las competencias funcionales centrales son la creación, edición, recuperación y gestión de registros de pacientes. además de las competencias centrales, los grandes sistemas tienen también competencias funcionales secundarias. éstas pueden incluir fun-cionalidad que comparte información con las competencias centrales, o que se requiere para que el sistema pueda cumplir con sus requerimientos no funcionales. por ejemplo, considere un sistema que tenga un requerimiento para ofrecer acceso con-currente a un buffer compartido. un proceso agrega datos al buffer y otro proceso toma datos del mismo buffer. este buffer compartido es parte de un sistema de adquisición de m21_sommerville_ingenieria_1ed_se_565-590.indd  568m21_sommerville_ingenieria_1ed_se_565-590.indd  568 3/18/11  5:38:57 pm3/18/11  5:38:57 pm