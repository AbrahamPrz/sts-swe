capítulo 16 ■ ejercicios 449 lecturas sugeridas reuse-based software engineering. un análisis completo de los diferentes enfoques para la reutilización de software. los autores examinan los conflictos de reutilización técnica y administración de los procesos de reutilización. (h. mili, a. mili, s. yacoub y e. addy, john wiley & sons, 2002.) “overlooked aspects of cots-based development”. un interesante artículo que examina una encuesta de desarrolladores que usan un enfoque basado en cots y los problemas encontrados. (m. torchiano y m. morisio, ieee software, 21 (2), marzo-abril de 2004.) http:/ /dx. doi. org/ 10. 1109/ ms. 2004. 1270770. “construction by configuration: a new challenge for software engineering”. se trata de un artículo que escribió el autor, en el que analiza los problemas y dificultades de construir una nueva aplicación al configurar sistemas existentes. (i. sommerville, proc. 19th australian software engineering conference, 2008.) http:/ /dx. doi. org/ 10. 1109/ aswec. 2008. 75. “architectural mismatch: why reuse is still so hard”. este artículo revisa un ensayo anterior que estudia los problemas de reutilización y la integración de algunos sistemas cots. los autores concluyeron que, aunque se ha realizado cierto progreso, aún hay problemas en las suposiciones conflictivas que hicieron los diseñadores de los sistemas individuales. (d. garlan et al., ieee software, 26 (4), julio-agosto de 2009.) http:/ /dx. doi. org/ /10. 1109/ ms. 2009. 86. ejercicios 16.1. ¿cuáles son los principales factores técnicos y no técnicos que impiden la reutilización de software? ¿usted reutiliza mucho software? si no es así, ¿por qué? 16.2. sugiera por qué los ahorros en costo de reutilizar software existente no son proporcionales al tamaño de los componentes que se reutilizan. 16.3. describa cuatro circunstancias donde desaconseje la reutilización de software. 16.4. explique qué entiende por “inversión de control” en los frameworks de aplicación. describa por qué este enfoque podría causar problemas si se integran dos sistemas separados que se crearon originalmente usando el mismo framework de aplicación. 16.5. con el ejemplo del sistema de estación meteorológica descrito en los capítulos 1 y 7, sugiera una arquitectura de línea de productos para una familia de aplicaciones que se ocupen de la monitorización remota y la recolección de datos. debe presentar su arquitectura como un modelo en capas, que muestre los componentes que puedan incluirse en cada nivel. 16.6. la mayoría del software de escritorio, como el software de procesamiento de textos, puede configurarse en algunas formas diferentes. examine el software que usa regularmente y mencione las opciones de configuración para dicho software. sugiera las dificultades que podrían enfrentar los usuarios para configurar el software. si usa microsoft office u open office, son buenos ejemplos para usar en este ejercicio. m16_sommerville_ingenieria_1ed_se_423-451.indd  449m16_sommerville_ingenieria_1ed_se_423-451.indd  449 3/18/11  5:02:14 pm3/18/11  5:02:14 pm