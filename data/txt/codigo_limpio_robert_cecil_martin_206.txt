urbanísticas, etc. algunos se encargan de aspectos generales y otros se centran en los detalles. las ciudades también funcionan porque disponen de evolucionados niveles de abstracción y modularidad que permiten a individuos y componentes trabajar de forma eficaz, sin necesidad de entender el trasfondo general. aunque los equipos de software se suelen organizar de esta forma, los sistemas en los que trabajan no suelen contar con la misma separación de aspectos y niveles de abstracción. en este capítulo veremos cómo mantener la limpieza en niveles superiores de abstracción, en el sistema. separar la construcción de un sistema de su uso en primer lugar, recuerde que la construcción es un proceso muy diferente al uso. mientras escribo estas líneas, a través de la ventana veo un nuevo hotel en construcción en chicago. hoy instalarán una gran grúa. todos los obreros llevan casco. dentro de un año habrán acabado el hotel. la grúa desaparecerá. el edificio estará terminado, con su reluciente fachada de cristal y su atractiva decoración. la gente que trabajará en él también será diferente. los sistemas de software deben separar el proceso de inicio, en el que se crean los objetos de la aplicación y se conectan las dependencias, de la lógica de ejecución que toma el testigo tras el inicio. el proceso de inicio es un aspecto que toda aplicación debe abordar. es el primero que veremos en este capítulo. la separación de aspectos es una de las técnicas de diseño más antiguas e importantes de nuestra profesión. desafortunadamente, muchas aplicaciones no lo hacen. el código del proceso de inicio se mezcla con la lógica de tiempo de ejecución. veamos un ejemplo típico: public service getservice() { if (service == null) service = new myserviceimpl (…); //¿lo bastante predeterminado para la 207