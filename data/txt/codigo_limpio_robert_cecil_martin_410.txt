conocer su biblioteca la estructura executor como mostramos en executorclientscheduler.java , la estructura executor de java 5 permite la ejecución sofisticada por medio de agrupaciones de subprocesos. es una clase del paquete java.util.concurrent . si va a crear subprocesos y no usa una agrupación de subprocesos o utiliza una creada a mano, considere el uso de executor. hace que el código sea más limpio, más fácil de entender y de menor tamaño. la estructura executor agrupa subprocesos, los cambia automáticamente de tamaño y los vuelve a crear si es necesario. también admite futuros , una construcción de programación concurrente habitual. la estructura executor funciona con clases que implementan runnable y también con clases que implementan la interfaz callable . callable se parece a runnable , pero puede devolver un resultado, una necesidad habitual en soluciones de múltiples subprocesos. un futuro resulta muy útil cuando el código tiene que ejecutar varias operaciones independientes y esperar a que terminen: public string processrequest(string message) throws exception { callable<string> makeexternalcall = new callable<string>() { public string call() throws exception { string result = “”; // realizar solicitud externa return result; } }; future<string> result = executorservice.submit(makeexternalcall); string partialresult = dosomelocalprocessing(); return result.get() + partialresult; } en este ejemplo, el método comienza a ejecutar el objeto makeexternalcall , prosigue con otro procesamiento y la última línea invoca result.get(), que se bloquea hasta que el futuro termina. 411