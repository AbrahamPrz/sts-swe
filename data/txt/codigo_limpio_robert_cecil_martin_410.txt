Conocer su biblioteca La estructura Executor Como mostramos en  ExecutorClientScheduler.java , la estructura Executor  de Java 5 permite la ejecución sofisticada por medio de agrupaciones de subprocesos. Es una clase del paquete java.util.concurrent . Si va a crear subprocesos y no usa una agrupación de subprocesos o utiliza una creada a mano, considere el uso de Executor. Hace que el código sea más limpio, más fácil de entender y de menor tamaño. La estructura  Executor  agrupa subprocesos, los cambia automáticamente de tamaño y los vuelve a crear si es necesario. También admite  futuros , una construcción de programación concurrente habitual. La estructura  Executor funciona con clases que implementan  Runnable  y también con clases que implementan la interfaz  Callable .  Callable  se parece a  Runnable , pero puede devolver un resultado, una necesidad habitual en soluciones de múltiples subprocesos. Un  futuro  resulta muy útil cuando el código tiene que ejecutar varias operaciones independientes y esperar a que terminen: public String processRequest(String message) throws Exception { Callable<String> makeExternalCall = new Callable<String>() { public String call() throws Exception { String result = “”; // realizar solicitud externa return result; } }; Future<String> result = executorService.submit(makeExternalCall); String partialResult = doSomeLocalProcessing(); return result.get() + partialResult; } En este ejemplo, el método comienza a ejecutar el objeto makeExternalCall , prosigue con otro procesamiento y la última línea invoca result.get(),  que se bloquea hasta que el futuro termina. 411