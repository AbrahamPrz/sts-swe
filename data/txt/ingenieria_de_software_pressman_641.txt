610 parte cuatro administración de proyectos de software componentes que probablemente se requieran para construir la aplicación. cada instancia de objeto (por ejemplo, una pantalla o reporte) se clasifica en uno de tres niveles de complejidad (simple, medio o difícil), usando criterios sugeridos por boehm [boe96]. en esencia, la comple-jidad es una función del número y de la fuente de las tablas de datos de cliente y servidor que se requieren para generar la pantalla o el reporte y el número de vistas o secciones que se pre-sentan como parte de la pantalla o del reporte. una vez determinada la complejidad, el número de pantallas, reportes y componentes se ponderan de acuerdo con la tabla que se ilustra en la figura 26.6. entonces se determina el con-teo de puntos de objeto multiplicando el número original de instancias de objeto por el factor de ponderación que hay en la figura y se suman para obtener un conteo total de puntos de objeto. cuando debe aplicarse desarrollo basado en componente o reuso de software general, se estima el porcentaje de reuso (%reuso) y el conteo de puntos de objeto se ajusta: nop /h11005 (puntos de objeto) /h11003 [(100 /h11002 %reuso)/100] donde nop se define como nuevos puntos de objeto. para derivar una estimación del esfuerzo con base en el valor nop calculado, debe derivarse una “tasa de productividad”. la figura 26.7 presenta la tasa de productividad prod /h11005 nop persona-mes para diferentes niveles de experiencia del desarrollador y de madurez del entorno de desa-rrollo. una vez determinada la tasa de productividad se calcula una estimación del esfuerzo del proyecto usando esfuerzo estimado /h11005 nop prod en modelos cocomo ii más avanzados, 12 se requieren varios factores de escala, controla- dores de costo y procedimientos de ajuste. una discusión completa de éstos está más allá del ámbito de este libro. si tiene más interés, vea [boe00] o visite el sitio web de cocomo ii. 26.7.3 la ecuación del software la ecuación del software [put92] es un modelo dinámico multivariable que supone una distribu- ción de esfuerzo específica durante la vida de un proyecto de desarrollo de software. el modelo 12 como se señaló anteriormente, estos modelos usan conteos pf y kloc para la variable tamaño.experiencia/capacidad del desarrollador madurez/capacidad del entorno prodmuy baja muy baja 4baja baja 7nominal nominal 13alta alta 25muy alta muy alta 50figura 26.7 tasa de productividad para puntos de objeto. fuente: [boe96]. 26pressman(593-619).indd  61026pressman(593-619).indd  610 21/1/10  10:55:5921/1/10  10:55:59