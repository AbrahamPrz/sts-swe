else if ( m instanceof stringargumentmarshaler ) setstringarg(argchar); else if ( m instanceof integerargumentmarshaler ) setintarg(argchar); else return false; return true; } tras ello, empecé a usar la asignación marshalers en las funciones set , dividiendo el uso de las otras tres asignaciones. comencé por los elementos boolean . private boolean setargument(char argchar) throws argsexception { argumentmarshaler m = marshalers.get(argchar); if (m instanceof booleanargumentmarshaler) setbooleanarg( m ); else if (m instanceof stringargumentmarshaler) setstringarg(argchar); else if (m instanceof integerargumentmarshaler) setintarg(argchar); else return false; return true; } … private void setbooleanarg( argumentmarshaler m ) { try { m .set(“true”); // era: booleanargs.get(argchar).set(“true”); } catch (argsexception e) { } } las pruebas seguían siendo correctas de modo que repetí la operación con las cadenas y los enteros. de esta manera se puede integrar parte del desagradable código de gestión de excepciones en la función setargument . private boolean setargument(char argchar) throws argsexception { argumentmarshaler m = marshalers.get(argchar); try { if (m instanceof booleanargumentmarshaler) setbooleanarg(m); else if (m instanceof stringargumentmarshaler) setstringarg( m ); else if (m instanceof integerargumentmarshaler) setintarg( m ); else return false; } catch (argsexception e) { valid = false; errorargumentid = argchar; 288