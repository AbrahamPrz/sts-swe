202 // assertEquals(1,stringToMonthCode(“JANUARY”)); 203 // assertEquals(2,stringToMonthCode(“FEBRUARY”)); 204 // assertEquals(3,stringToMonthCode(“MAR”)); 205 // assertEquals(4,stringToMonthCode(“APRIL”)); 206 // assertEquals(5,stringToMonthCode(“MAY”)); 207 // assertEquals(6,stringToMonthCode(“JUNE”)); 208 // assertEquals(7,stringToMonthCode(“JULY”)); 209 // assertEquals(8,stringToMonthCode(“AUGUST”)); 210 // assertEquals(9,stringToMonthCode(“SEPTEMBER”)); 211 // assertEquals(10,stringToMonthCode(“OCTOBER”)); 212 // assertEquals(11,stringToMonthCode(“NOVEMBER”)); 213 // assertEquals(12,stringToMonthCode(“DECEMBER”)); 214 } 215 216 public void testIsValidWeekInMonthCode() throws Exception { 217 for (int w = 0; w <= 4; w++) { 218 assertTrue(isValidWeekInMonthCode(w)); 219 } 220 assertFalse(isValidWeekInMonthCode(5)); 221 } 222 223 public void testIsLeapYear() throws Exception { 224 assertFalse(isLeapYear(1900)); 225 assertFalse(isLeapYear(1901)); 226 assertFalse(isLeapYear(1902)); 227 assertFalse(isLeapYear(1903)); 228 assertTrue(isLeapYear(1904)); 229 assertTrue(isLeapYear(1908)); 230 assertFalse(isLeapYear(1955)); 231 assertTrue(isLeapYear(1964)); 232 assertTrue(isLeapYear(1980)); 233 assertTrue(isLeapYear(2000)); 234 assertFalse(isLeapYear(2001)); 235 assertFalse(isLeapYear(2100)); 236 } 237 238 public void testLeapYearCount() throws Exception { 239 assertEquals(0, leapYearCount(1900)); 240 assertEquals(0, leapYearCount(1901)); 241 assertEquals(0, leapYearCount(1902)); 242 assertEquals(0, leapYearCount(1903)); 243 assertEquals(1, leapYearCount(1904)); 244 assertEquals(1, leapYearCount(1905)); 245 assertEquals(1, leapYearCount(1906)); 246 assertEquals(1, leapYearCount(1907)); 477