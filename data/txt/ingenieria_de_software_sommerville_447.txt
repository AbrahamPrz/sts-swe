430 capítulo 16 ■ reutilización de software 6. la plataforma en la que operará el sistema algunos modelos de componentes, como .net, se especifican para plataformas microsoft. de igual modo, sistemas genéricos de aplicación pueden ser específicos de plataforma y sólo podrá reutilizar-los si su sistema está diseñado para la misma plataforma.enfoque descripción patrones arquitectónicos se usan arquitecturas de software estándar que apoyan tipos comunes de sistemas de aplicación, tales como la base de las aplicaciones. se describen en los capítulos 6, 13 y 20. patrones de diseño las abstracciones genéricas que ocurren a través de las aplicaciones se representan como patrones de diseño que muestran objetos e interacciones abstractas y concretas. se detallan en el capítulo 7. desarrollo basado en componentesse desarrollan sistemas al integrar componentes (colecciones de objetos) que se conforman a estándares de modelo de componentes. se estudian en el capítulo 17. frameworks de aplicación colecciones de clases abstractas y concretas adaptadas y extendidas para crear sistemas de aplicación. encadenamiento de sistemas heredadoslos sistemas heredados (véase el capítulo 9) se “enlazan” al definir un conjunto de interfaces y proporcionar acceso a estos sistemas heredados a través de dichas interfaces. sistemas orientados a servicios se desarrollan sistemas mediante la vinculación de servicios compartidos, que pueden proporcionarse externamente. se tratan en el capítulo 19. líneas de producto de software un tipo de aplicación se generaliza en torno a una arquitectura común, de forma que pueda adaptarse para diferentes clientes. reutilización de productos cots los sistemas se desarrollan al configurar e integrar sistemas de aplicación existentes. sistemas erp los sistemas a gran escala que encapsulan funcionalidad empresarial genérica y reglas se configuran para una organización. aplicaciones verticales configurablesse diseñan sistemas genéricos de manera que puedan configurarse a las necesidades específicas de clientes del sistema. librerías de programa librerías de clase y función que implementan abstracciones de uso común están disponibles para reutilización. ingeniería dirigida por modelo el software se representa como modelos de dominio y modelos independientes de implementación, y se genera un código a partir de dichos modelos. se refiere en el capítulo 5. generadores de programa un sistema generador incrusta conocimiento de un tipo de aplicación y se usa para generar sistemas en dicho dominio a partir de un modelo de sistema suministrado por el usuario. desarrollo de software orientado a aspectos cuando se compila el programa, los componentes compartidos se hilvanan dentro de una aplicación en lugares diferentes. se expone en el capítulo 21. figura 16.4 enfoques que apoyan la reutilización de software m16_sommerville_ingenieria_1ed_se_423-451.indd  430m16_sommerville_ingenieria_1ed_se_423-451.indd  430 3/18/11  5:02:13 pm3/18/11  5:02:13 pm