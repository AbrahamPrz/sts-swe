298 capítulo 11 ■ conﬁ abilidad y seguridad algunas caídas del sistema. sin embargo, el usuario 1 y el usuario 3 nunca usan entradas del conjunto erróneo. para ellos, el software siempre será fiable. la fiabilidad práctica de un programa depende del número de entradas que causan sali-das erróneas (caídas), durante el uso normal del sistema por la mayoría de los usuarios. las fallas en el desarrollo de software que sólo ocurren en situaciones excepcionales tienen poco efecto práctico sobre la fiabilidad del sistema. en consecuencia, eliminar las fallas del software quizá no mejore significativamente la fiabilidad total del sistema. mills y sus colaboradores (1987) descubrieron que eliminar el 60% de los errores conocidos en su software llevó a una mejoría del 3% en la fiabilidad. adams (1984), en un estudio de pro-ductos de software ibm, notó que muchos defectos en los productos sólo era probable que causaran caídas después de cientos o miles de meses de uso del producto. las fallas en el desarrollo no siempre derivan en errores del sistema, y los errores del sistema no necesariamente originan caídas del sistema. las razones para esto son las siguientes: 1. no todo el código en un programa se ejecuta. el código que incluye una falla en el desarrollo (por ejemplo, equivocarse al inicializar una variable) tal vez nunca se ejecute debido a la forma en que se usa el programa.conjunto salida salidas erróneasoeconjunto entrada programaentradas que causansalidas erróneas ie figura 11.4 un sistema como un mapeo entrada/salida posibles entradas usuario 1 usuario 3usuario 2entradas erróneas figura 11.5 patrones de uso de software m11_sommerville_ingenieria_1ed_se_289-308.indd  298m11_sommerville_ingenieria_1ed_se_289-308.indd  298 3/18/11  4:54:18 pm3/18/11  4:54:18 pm