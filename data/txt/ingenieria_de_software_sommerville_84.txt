3.3 ■ programación extrema 67 a veces, durante la planeación del juego, salen a la luz preguntas que no pueden res- ponderse fácilmente y se requiere trabajo adicional para explorar posibles soluciones. el equipo puede elaborar algún prototipo o tratar de desarrollarlo para entender el problema y la solución. en términos xp, éste es un “pico” (spike), es decir, un incremento donde no se realiza programación. también suele haber “picos” para diseñar la arquitectura del sistema o desarrollar la documentación del sistema. la programación extrema toma un enfoque “extremo” para el desarrollo incremental. nuevas versiones del software se construyen varias veces al día y las versiones se entre-gan a los clientes aproximadamente cada dos semanas. nunca se descuidan las fechas límite de las liberaciones; si hay problemas de desarrollo, se consulta al cliente y la fun-cionalidad se elimina de la liberación planeada. cuando un programador diseña el sistema para crear una nueva versión, debe correr todas las pruebas automatizadas existentes, así como las pruebas para la nueva funcionali-dad. la nueva construcción del software se acepta siempre que todas las pruebas se ejecu-ten con éxito. entonces esto se convierte en la base para la siguiente iteración del sistema. un precepto fundamental de la ingeniería de software tradicional es que se tiene que diseñar para cambiar. esto es, deben anticiparse cambios futuros al software y diseñarlo de manera que dichos cambios se implementen con facilidad. sin embargo, la programa-ción extrema descartó este principio basada en el hecho de que al diseñar para el cambio con frecuencia se desperdicia esfuerzo. no vale la pena gastar tiempo en adicionar gene-ralidad a un programa para enfrentar el cambio. los cambios anticipados casi nunca se materializan y en realidad pueden hacerse peticiones de cambio diametralmente opues-tas. por lo tanto, el enfoque xp acepta que los cambios sucederán y cuando éstos ocurran realmente se reorganizará el software.prescripción de medicamentos kate es una médica que quiere prescribir fármacos a un paciente que se atiende en una clínica. el archivo del paciente ya se desplegó en su computadora, de manera que da clic en el campo del medicamento y luego puede seleccionar “medicamento actual”, “medicamento nuevo” o “formulario”. si selecciona “medicamento actual”, el sistema le pide comprobar la dosis. si quiere cambiar la dosis, ingresa la dosis y luego confirma la prescripción. si elige “medicamento nuevo”, el sistema supone que kate sabe cuál medicamento prescribir. ella teclea las primeras letras del nombre del medicamento. el sistema muestra una lista de medicamentos posibles cuyo nombre inicia con dichas letras. posteriormente elige el fármaco requerido y el sistema responde solicitándole que verifique que el medicamento seleccionado sea el correcto. ella ingresa la dosis y luego confirma la prescripción. si kate elige “formulario”, el sistema muestra un recuadro de búsqueda para el formulario aprobado. entonces busca el medicamento requerido. ella selecciona un medicamento y el sistema le pide comprobar que éste sea el correcto. luego ingresa la dosis y confirma la prescripción. el sistema siempre verifica que la dosis esté dentro del rango aprobado. si no es así, le pide a kate que la modifique. después de que ella confirma la prescripción, se desplegará para su verificación. kate hace clic o en “ok” o en “cambiar”. si hace clic en “ok”, la prescripción se registra en la base de datos de auditoría. si hace clic en “cambiar”, reingresa al proceso de “prescripción de medicamento”. figura 3.5 una historia de la “prescripción de medicamento” m03_sommerville_ingenieria_1ed_se_056-081.indd  67m03_sommerville_ingenieria_1ed_se_056-081.indd  67 3/18/11  4:46:25 pm3/18/11  4:46:25 pm