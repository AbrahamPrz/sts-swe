comportamiento no son invasivas [57]  para el código de destino. Veamos tres aspectos o mecanismos similares en Java. Proxies de Java Los  proxies  de Java son útiles en casos sencillos, como envolver invocaciones de métodos en objetos o clases concretas. Sin embargo, los proxies dinámicos proporcionados en el JDK sólo funcionan con interfaces. Para aplicarlos a clases, debe usar una biblioteca de manipulación de código de  bytes , como CGLIB, ASM o Javassist [58] . El Listado 11-3 muestra la estructura de un proxy JDK para ofrecer asistencia de persistencia a nuestra aplicación Bank; únicamente abarca los métodos para obtener y establecer la lista de cuentas. Listado 11-3 Ejemplo de proxy del JDK. // Bank.java (eliminando nombres de paquetes…) import java.utils.*; // La abstracción de un banco. public interface Bank { Collection<Account> getAccounts(); void setAccounts(Collection<Accounts> accounts); } // BankImpl.java import java.utils.*; // “Plain Old Java Object” POJO que implementa la abstracción. public class BankImpl implements Bank { private List<Account> accounts; public Collection<Account> getAccounts() { return accounts; } public void setAccounts(Collections<Accounts> accounts) { this.accounts = new ArrayList<Accounts>(); for (Account account: accounts) { this.accounts.add(account); } } } 216