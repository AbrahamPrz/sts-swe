especificado 388 * (el invocador especifica si los puntos finales se incluyen o no). El orden 389 * de d1 y d2 no es importante. 390 * 391 * @param d1 una fecha límite para el rango. 392 * @param d2 la otra fecha límite para el rango. 393 * @param include un código que controla si la fecha inicial y final 394 * se incluyen en el intervalo. 395 * 396 * @return <code>true</code> si esta SerialDate se encuentra en el intervalo 397 * especificado. 398 */ 399 public boolean isInRange(final SerialDate d1, final SerialDate d2, 400 final int include) { 401 final int s1 = d1.toSerial(); 402 final int s2 = d2.toSerial(); 403 final int start = Math.min(s1, s2); 404 final int end = Math.max(s1, s2); 405 406 final int s = toSerial(); 407 if (include == SerialDate.INCLUDE_BOTH) { 408 return (s >= start && s <= end); 409 } 410 else if (include == SerialDate.INCLUDE_FIRST) { 411 return (s >= start && s < end); 412 } 413 else if (include == SerialDate.INCLUDE_SECOND) { 414 return (s > start && s <= end); 415 } 416 else { 417 return (s > start && s < end); 418 } 419 } 420 421 /** 422 * Calcular el número de serie a partir del día, mes y año. 423 * <P> 424 * 1-Ene-1900 = 2. 425 * 426 * @param d el día. 427 * @param m el mes. 428 * @param y el año. 429 * 430 * @return el número de serie a partir del día, mes y año. 494