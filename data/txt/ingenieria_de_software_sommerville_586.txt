21.1 ■ la separación de intereses 569 datos en el que un proceso productor pone datos en el buffer y un proceso consumidor toma los datos éste. aquí la competencia central es mantener un buffer compartido de manera que la funcionalidad central está asociada con agregar y eliminar elementos del buffer. sin embargo, para garantizar que los procesos productor y consumidor no inter-fieran entre sí, existe una competencia secundaria esencial de sincronización. el sistema debe diseñarse de forma que el proceso productor no pueda sobrescribir datos que no se hayan consumido, ni el proceso consumidor pueda tomar datos de un buffer vacío. aparte de estas competencias secundarias, otras competencias como calidad de servi-cio y políticas organizacionales reflejan requerimientos esenciales del sistema. en gene-ral, se trata de competencias del sistema: se aplican al sistema como un todo en lugar de implementarse a requerimientos individuales o a la realización de dichos requerimientos en un programa. son las llamadas competencias transversales (cross-cutting), para dis-tinguirlas de las competencias centrales. las competencias funcionales secundarias tam-bién pueden ser transversales, aunque no siempre atraviesan todo el sistema; en vez de ello, se asocian con agrupamientos de competencias centrales que ofrecen funcionalidad relacionada. las competencias transversales se muestran en la figura 21.1, la cual se basa en un ejemplo de un sistema de banca por internet. este sistema tiene requerimientos relacio-nados con nuevos clientes, como comprobación de crédito y verificación de dirección. asimismo, posee requerimientos relacionados con la administración de los clientes exis-tentes y la gestión de cuentas de los clientes. todas ellas son competencias centrales que se asocian con el propósito primario del sistema: proveer un servicio de banca por internet. sin embargo, el sistema también cuenta con requerimientos de seguridad con base en la política de seguridad del banco, y requerimientos de recuperación para garanti-zar que los datos no se pierdan en caso de una falla del sistema. se trata de competencias transversales, ya que pueden influir en la implementación de todos los otros requerimien-tos del sistema. las abstracciones de lenguaje de programación, tales como procedimientos y cla-ses, son el mecanismo que se usa normalmente para organizar y estructurar las compe-tencias centrales de un sistema. no obstante, la implementación de las competencias centrales en lenguajes de programación convencionales incluye por lo general código adicional para implementar las competencias transversales, funcionales, de calidad de servicio y de políticas. esto conduce a dos fenómenos indeseables: enredos ( tangling) y dispersión (scattering).requerimientos de seguridad requerimientos de recuperación competencias centralesrequerimientos de cliente nuevorequerimientos de gestión de clientesrequerimientos de cuenta competencias transversales figura 21.1 competencias transversales m21_sommerville_ingenieria_1ed_se_565-590.indd  569m21_sommerville_ingenieria_1ed_se_565-590.indd  569 3/18/11  5:38:57 pm3/18/11  5:38:57 pm