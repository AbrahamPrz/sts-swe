CAPÍTULO 11  DISEÑO DE LA INTERFAZ DE USUARIO 267 Permitir que la interacción del usuario sea interrumpible y también reversible.  El  usuario debe poder suspender la secuencia de su trabajo (aun cuando consista en una secuencia  de acciones) para hacer otra cosa (sin perder el trabajo realizado hasta ese momento). T ambién  debe poder “deshacer” cualquier acción. Facilitar la interacción a medida que aumenta la habilidad y permitir que aquélla se personalice.  Es frecuente que los usuarios realicen la misma secuencia de interacciones en  forma repetida. Es benéfico diseñar un mecanismo de “macros” que permita que un usuario avanzado personalice la interfaz para facilitar la interacción. Ocultar los tecnicismos internos al usuario ocasional.  La interfaz de usuario debe intro- ducirlo al mundo virtual de la aplicación. El usuario no debe tener que preocuparse del sistema operativo, de las funciones de administración de archivos ni de ninguna otra tecnología de computación secreta. En esencia, la interfaz no debe requerir que el usuario interactúe en un nivel “interno” de la máquina (nunca debería tener que escribir comandos del sistema operativo desde una aplicación de software). Diseñar la interacción directa con objetos que aparezcan en la pantalla.  El usuario  tiene la sensación de control cuando puede manipular los objetos que se necesitan a fin de ejecutar un trabajo en la misma forma en la que lo haría si el objeto fuera algo físico. Por ejem-plo, una interfaz de aplicación que le permita “estirar” un objeto (modificar su tamaño) es una implementación de manipulación directa. 11.1.2  Reducir la necesidad de que el usuario memorice Entre más cosas tenga que recordar el usuario, más fácil será que cometa errores al interactuar con el sistema. Es por esto que una interfaz de usuario bien diseñada no sobrecarga la memoria del usuario. Siempre que sea posible, el sistema debe “recordar” la información pertinente y ayudar al usuario con un escenario de interacción que lo ayude a recordar. Mandel [Man97] define los siguientes principios de diseño que permiten que una interfaz reduzca la necesidad de que el usuario memorice: Reducir la demanda de memoria de corto plazo.  Cuando los usuarios se involucran en  tareas complejas, la demanda de memoria de corto plazo es significativa. La interfaz debe dise- ñarse para disminuir la necesidad de recordar acciones, entradas y resultados del pasado. Esto se logra dando claves visuales que permitan al usuario reconocer acciones anteriores, en lugar de que tenga que recordarlas. Hacer que lo preestablecido sea significativo.  Lo que al principio se dé por preestablecido  debe tener sentido para el usuario promedio, pero éste debería poder especificar sus preferen-cias individuales. Sin embargo, debe disponerse de la opción de “reiniciar” para restablecer los valores originales. Definir atajos que sean intuitivos.  Cuando se utilice nemotecnia para ejecutar una función  del sistema (como la secuencia Ctrl-B para in vocar la función de buscar), debe estar ligada con  la acción, de modo que sea fácil de recordar (por ejemplo, con la primera letra de la tarea que se va a realizar). La distribución visual de la interfaz debe basarse en una metáfora del mundo real.  Por  ejemplo, un sistema de pagos debe usar una metáfora de chequera y talonario que guíe al usua-rio a través del proceso de pago. Esto permite que el usuario se base en claves visuales que comprende bien, en vez de tener que memorizar una secuencia críptica de interacciones. Revelar información de manera progresiva.  La interfaz debe estar organizada de manera  jerárquica. Es decir , la información acerca de una tarea, objeto o comportamiento debe presen-Cita: “Siempre deseé que mi compu- tadora fuera tan fácil de usar como mi teléfono. Mi deseo se ha vuelto realidad. Ya no sé cómo se utiliza mi teléfono.” Bjarne Stronstrup (iniciador  de C/H11545/H11545 ) 11Pressman(265-294).indd   26711Pressman(265-294).indd   267 14/1/10   16:13:4314/1/10   16:13:43