APÉNDICE 2  CONCEPTOS ORIENTADOS A OBJETO 745   ATRIBUTOS Usted aprendió que los atributos se vinculan a las clases y que describen la clase en alguna  forma. Un atributo puede tomar un valor definido por un dominio enumerado. En la mayoría de  los casos, un dominio es simplemente un conjunto de valores específicos. Por ejemplo, suponga que una clase Automóvil tiene un atributo color. El dominio de valores para color es { blanco,  negro, plata, gris, azul, rojo, amarillo, verde }. En situaciones más complejas, el dominio  puede ser una clase. Continuando con el ejemplo, la clase Automóvil también tiene un atributo trenPotencia que en sí mismo es una clase. La clase TrenPotencia contendría atributos que des- criben el motor y la transmisión específicos del vehículo. Las características (valores del dominio) pueden aumentar al asignar un valor por defecto  (característica) a un atributo. Por ejemplo, el atributo color por defecto es blanco. También puede  ser útil asociar una probabilidad con una característica particular al asignar pares {valor, proba-bilidad}. Considere el atributo color para automóvil. En algunas aplicaciones (por ejemplo, pla- nificar la fabricación) puede ser necesario asignar una probabilidad a cada uno de los colores (por ejemplo, blanco y negro son enormemente probables como colores de automóvil).   OPERACIONES , MÉTODOS  Y SERVICIOS Un objeto encapsula datos (representados como una colección de atributos) y los algoritmos que los procesan. Dichos algoritmos se llaman operaciones, métodos o servicios 2 y pueden verse  como componentes de procesamiento. Cada una de las operaciones que se encapsula mediante un objeto proporciona una repre- sentación de uno de los comportamientos del objeto. Por ejemplo, la operación ObtenerColor()  para el objeto Automóvil extraerá el color almacenado en el atributo color. La implicación de la  existencia de estas operaciones es que la clase Automóvil se diseñó para recibir un estímulo (a  los estímulos se les llama mensajes) que solicitan el color de la instancia particular de una clase.  Siempre que un objeto recibe un estímulo, inicia cierto comportamiento. Esto puede ser tan simple como recuperar el color del automóvil o tan complejo como el inicio de una cadena de estímulos que pasan entre varios objetos diferentes. En el último caso, considere un ejemplo donde el estímulo inicial recibido por el Objeto 1 da como resultado la generación de otros dos  estímulos que se envían al Objeto 2  y al Objeto 3 . Las operaciones encapsuladas por el se- gundo y tercer objetos actúan sobre los estímulos, y regresan información necesaria al primer objeto. Entonces el Objeto 1 usa la información devuelta para satisfacer el comportamiento demandado por el estímulo inicial.   CONCEPTOS  DE ANÁLISIS  Y DISEÑO  ORIENTADO  A OBJETO El modelado de requerimientos (también llamado modelado de análisis) se enfoca principal-mente en clases que se extraen directamente del enunciado del problema. Dichas clases de en-tidad por lo general representan cosas que deben almacenarse en una base de datos y que persisten a lo largo de la duración de la aplicación (a menos que se borren de manera especí-fica). El diseño refina y extiende el conjunto de clases de entidad. Las clases frontera y controlador  se desarrollan y/o refinan durante el diseño. Las clases frontera crean la interfaz (por ejemplo,  pantalla interactiva y reportes impresos) que el usuario ve y con la cual interactúa conforme se  2 En el contexto de esta discusión se usa el término operaciones, pero los términos métodos y servicios son igual- mente populares. 34Pressman(743-750)app2.indd   74534Pressman(743-750)app2.indd   745 26/1/10   17:32:2726/1/10   17:32:27