52  Capítulo 2 ■ Procesos de software  El enfoque práctico del RUP describe las buenas prácticas de ingeniería de software  que se recomiendan para su uso en el desarrollo de sistemas. Las seis mejores prácticas fundamentales que se recomiendan son: 1. Desarrollo de software de manera iterativa Incrementar el plan del sistema con  base en las prioridades del cliente, y desarrollar oportunamente las características del sistema de mayor prioridad en el proceso de desarrollo. 2. Gestión de requerimientos Documentar de manera explícita los requerimientos del cliente y seguir la huella de los cambios a dichos requerimientos. Analizar el efecto de los cambios sobre el sistema antes de aceptarlos. 3. Usar arquitecturas basadas en componentes  Estructurar la arquitectura del sis- tema en componentes, como se estudió anteriormente en este capítulo. 4. Software modelado visualmente Usar modelos UML gráficos para elaborar repre-sentaciones de software estáticas y dinámicas. 5. Verificar la calidad del software Garantizar que el software cumpla con los están-dares de calidad de la organización.Figura 2.13 Flujos de  trabajo estáticos en el Proceso Unificado RacionalFlujo de trabajo Descripción Modelado del negocio Se modelan los procesos de negocios utilizando casos de uso de la empresa. Requerimientos Se identifican los actores que interactúan con el sistema y se desarrollan casos de uso para modelar los requerimientos del sistema. Análisis y diseño Se crea y documenta un modelo de diseño utilizando modelos arquitectónicos, de componentes, de objetos y de secuencias. Implementación Se implementan y estructuran los componentes del sistema en subsistemas de implementación. La generación automática de código a partir de modelos de diseño ayuda a acelerar este proceso. Pruebas Las pruebas son un proceso iterativo que se realiza en conjunto con la implementación. Las pruebas del sistema siguen al completar la implementación. Despliegue Se crea la liberación de un producto, se distribuye a los usuarios y se instala en su lugar de trabajo. Administración de la configuración y del cambioEste flujo de trabajo de apoyo gestiona los cambios al sistema (véase el capítulo 25). Administración del proyecto Este flujo de trabajo de apoyo gestiona el desarrollo del sistema (véase los capítulos 22 y 23). Entorno Este flujo de trabajo pone a disposición del equipo de desarrollo de software, las herramientas adecuadas de software. M02_SOMMERVILLE_INGENIERIA_1ED_SE_027-055.indd   52M02_SOMMERVILLE_INGENIERIA_1ED_SE_027-055.indd   52 3/18/11   4:45:32 PM3/18/11   4:45:32 PM