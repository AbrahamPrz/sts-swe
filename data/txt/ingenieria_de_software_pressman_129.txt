98 PARTE DOS  MODELADO del software, o para todo el proyecto. Sin que esto importe, debe definir lo que se hará, quién lo  hará y cuándo se terminará el trabajo. El modelado incluye tanto el análisis como el diseño, y describe representaciones cada vez  más detalladas del software. El objetivo de los modelos es afirmar el entendimiento del trabajo que se va a hacer y dar una guía técnica a quienes implementarán el software. Los principios de modelado dan fundamento a los métodos y notación que se utilizan para crear representaciones del software. La construcción incorpora un ciclo de codificación y pruebas en el que se genera código  fuente para cierto componente y es sometido a pruebas. Los principios de codificación definen las acciones generales que deben tener lugar antes de que se escriba el código, mientras se es-cribe y una vez terminado. Aunque hay muchos principios para las pruebas, sólo uno predomina: la prueba es el proceso que lleva a ejecutar un programa con objeto de encontrar un error. El despliegue ocurre cuando se presenta al cliente un incremento de software, e incluye la  entrega, apoyo y retroalimentación. Los principios clave para la entrega consideran la adminis-tración de las expectativas del cliente y darle información de apoyo adecuada sobre el software. El apoyo demanda preparación anticipada. La retroalimentación permite al cliente sugerir cam-bios que tengan valor para el negocio y que brinden al desarrollador información para el ciclo iterativo siguiente de ingeniería de software.   PROBLEMAS  Y PUNTOS  POR EVALUAR 4.1. Toda vez que la búsqueda de la calidad reclama recursos y tiempo, ¿es posible ser ágil y centrarse en  ella? 4.2. De los ocho principios fundamentales que guían el proceso (lo que se estudió en la sección 4.2.1), ¿cuál  cree que sea el más importante?4.3. Describa con sus propias palabras el concepto de separación de entidades. 4.4. Un principio de comunicación importante establece que hay que “prepararse antes de comunicarse”.  ¿Cómo debe manifestarse esta preparación en los primeros trabajos que se hacen? ¿Qué productos del tra- bajo son resultado de la preparación temprana? 4.5. Haga algunas investigaciones acerca de cómo “facilitar” la actividad de comunicación (use las referen- cias que se dan u otras distintas) y prepare algunos lineamientos que se centren en la facilitación.4.6. ¿En qué difiere la comunicación ágil de la comunicación tradicional de la ingeniería de software? ¿En  qué se parecen?4.7. ¿Por qué es necesario “avanzar”? 4.8. Investigue sobre la “negociación” para la actividad de comunicación y prepare algunos lineamientos  que se centren sólo en ella.4.9. Describa lo que significa granularidad en el contexto de la programación de actividades de un proyecto. 4.10. ¿Por qué son importantes los modelos en el trabajo de ingeniería de software? ¿Siempre son necesa- rios? ¿Hay calificadores para la respuesta que se dio sobre esta necesidad?4.11. ¿Cuáles son los tres “dominios” considerados durante el modelado de requerimientos? 4.12. Trate de agregar un principio adicional a los que se mencionan en la sección 4.3.4 para la codifica- ción.4.13. ¿Qué es una prueba exitosa? 4.14. Diga si está de acuerdo o en desacuerdo con el enunciado siguiente: “Como entregamos incrementos  múltiples al cliente, no debiéramos preocuparnos por la calidad en los primeros incrementos; en las iteracio- nes posteriores podemos corregir los problemas. Explique su respuesta. 4.15. ¿Por qué es importante la retroalimentación para el equipo de software? 04Pressman(081-100).indd   9804Pressman(081-100).indd   98 26/1/10   17:32:0126/1/10   17:32:01