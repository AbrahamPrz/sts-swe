de código fuente). estas herramientas identifican, almacenan y controlan el acceso a las diferentes versiones de los componentes. se hallan disponibles muchos sistemas dife-rentes de gestión de versiones, incluidos los sistemas de código abierto ampliamente usados como cvs y subversion (pilato et al., 2004; vesperman, 2003). los sistemas de gestión de versiones ofrecen a menudo varias características: 1. identificación de versión y entrega (release) a las versiones gestionadas se les asig- nan identificadores cuando se envían al sistema. dichos identificadores se basan, por lo general, en el nombre del ítem de configuración (por ejemplo, buttonmanager), seguido por uno o más números. de esta manera, buttonmanager 1.3 significa la tercera versión en codeline 1 del componente buttonmanager. algunos sistemas cm también permiten la asociación de atributos con versiones (por ejemplo, móvil, pantalla pequeña), que también pueden usarse para identificación de la versión. es importante que el sistema de identificación sea consistente, ya que esto simplifica el problema de definir configuraciones. hace más sencillo el uso de referencias abre-viadas (por ejemplo, *.v2, que significa la versión 2 de todos los componentes). 2. gestión de almacenamiento para reducir el espacio de almacenamiento requerido por múltiples versiones de los componentes que difieren sólo ligeramente, los siste-mas de gestión de versiones ofrecen, por lo general, facilidades de gestión de alma-cenamiento. en vez de conservar una copia completa de cada versión, el sistema almacena una lista de diferencias (deltas) entre una versión y otra. al aplicar esto a una versión fuente (por lo regular, la versión más reciente), puede recrearse una versión objetivo. esto se ilustra en la figura 25.7. 3. registro del historial de cambios todos los cambios realizados al código de un sistema o componente se registran y enumeran. en algunos sistemas, dichos cam-bios pueden usarse para seleccionar la versión de un sistema en particular. esto implica etiquetar componentes con palabras clave que describan los cambios reali-zados. entonces se pueden usar dichas etiquetas (tags) para seleccionar los compo-nentes a incluir en una línea base. 4. desarrollo independiente es posible que diferentes desarrolladores trabajen en el mismo componente al mismo tiempo. el sistema de gestión de versiones hace un seguimiento de los componentes que se marcaron para la edición y se asegura de que no interfieran los cambios hechos a un componente por diferentes desarrolladores. 5. soporte de proyecto un sistema de gestión de versiones puede soportar el desarro-llo de varios proyectos que comparten componentes. en los sistemas de soporte de fecha de creación secuencia de versión más reciente estructura de almacenamientoversión 1.0versión 1.1versión 1.2 versión 1.3 d1 d2 d3código fuente v1.3figura 25.7 gestión de almacenamiento con deltas25.2 ■ gestión de versiones 691 m25_sommerville_ingenieria_1ed_se_681-704.indd  691m25_sommerville_ingenieria_1ed_se_681-704.indd  691 3/18/11  5:16:31 pm3/18/11  5:16:31 pm