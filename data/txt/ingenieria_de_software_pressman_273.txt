242 PARTE DOS  MODELADO En lugar de abordar cada clase individual, es frecuente que sea mejor agrupar las que sean  reutilizables en paquetes que puedan manejarse y controlar a medida que evolucionen las nue-vas versiones. Principio de cierre común (PCC).  “Las clases que cambian juntas pertenecen a lo mismo”  [Mar00]. Las clases deben empacarse en forma cohesiva. Es decir  , cuando las clases se agrupan  como parte de un diseño, deben estar dirigidas a la misma área de funciones o comportamiento.  Cuando deba cambiar alguna característica de dicha área, es probable que sólo aquellas clases que haya dentro del paquete requieran modificación. Esto lleva a un control de cambios y a un manejo de la liberación más eficaces. Principio de la reutilización común (PRC).   “Las clases que no se reutilizan juntas no deben  agruparse juntas” [Mar00]. Cuando cambia una o más clases dentro de un paquete , cambia el  número de liberación del paquete. Entonces, todas las demás clases o paquetes que permane-cen en el paquete que cambió deben actualizarse con la liberación más reciente y someterse a pruebas a fin de garantizar que la nueva versión opera sin problemas. Si las clases no se agrupan de manera cohesiva, es posible que se cambie una clase sin relación junto con las demás que hay dentro del paquete. Esto generará integración y pruebas innecesarias. Por esta razón, sólo las clases que se reutilicen juntas deben incluirse dentro de un paquete. 10.2.2  Lineamientos de diseño en el nivel de componentes Además de los principios estudiados en la sección 10.2.1, conforme avanza el diseño en el nivel de componentes se aplican lineamientos prácticos a los componentes, a sus interfaces y a las características de dependencia y herencia que tengan algún efecto en el diseño resultante. Am-bler [Amb02b] sugiere los lineamientos siguientes: Componentes.  Deben establecerse convenciones para dar nombre a los componentes que se  especifique que forman parte del modelo arquitectónico, para luego mejorarlos y elaborarlos como parte del modelo en el nivel de componentes. Los nombres de los componentes arquitec-tónicos deben pro venir del dominio del problema y significar algo para todos los participantes  que vean el modelo arquitectónico. Por ejemplo, el nombre de la clase PlanodelaCasa tiene un  significado para todos los que lo lean, aunque no tengan formación técnica. Por otro lado, los componentes de infraestructura o clases elaboradas en el nivel de componentes deben recibir un nombre que tenga un significado específico de la implantación. Si como parte de la implan-tación de PlanodelaCasa va a administrarse una lista vinculada, es apropiada la operación  AdministrarLista( ), aun si una persona sin capacitación técnica pudiera interpretarlo mal. 3 Pueden usarse estereotipos para ayudar a identificar la naturaleza de los componentes en el  nivel de diseño detallado. Por ejemplo, <<infraestructura>>  debiera usarse para identificar un  componente de infraestructura, <<basededatos>>  podría emplearse para identificar una base de  datos que dé servicio a una o más clases de diseño o a todo el sistema; se usaría <<tabla>>  para  identificar una tabla dentro de una base de datos. Interfaces.  Las interfaces dan información importante sobre la comunicación y la colabora- ción (también nos ayudan a cumplir el P AC). Sin embargo, la representación sin restricciones de  las interfaces tiende a complicar los diagramas de componentes. Ambler [Amb02c] recomienda que 1) si los diagramas aumentan en complejidad, en lugar del enfoque formal del UML con recuadro y flecha, debe representarse la interfaz con una paleta; 2) en aras de la consistencia, las interfaces deben fluir a partir del lado izquierdo del recuadro del componente; 3) sólo deben aparecer aquellas interfaces que sean relevantes para el componente que se está considerando, ¿Qué es lo que hay que  tomar en cuenta al dar nombre a los componentes?? 3 No es probable que alguien de mercadotecnia o de la organización cliente (de tipo no técnico) analice la infor- mación de diseño detallado. 10Pressman(234-264).indd   24210Pressman(234-264).indd   242 26/1/10   17:33:1926/1/10   17:33:19