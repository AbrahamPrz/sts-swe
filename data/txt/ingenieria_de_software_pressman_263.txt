232 PARTE DOS  MODELADO es uno de los verdaderos beneficios que se logran con el desarrollo de una representación de la  arquitectura del software. Es importante observar que la sencillez estructural con frecuencia refleja tanto elegancia  como eficiencia. El refinamiento del diseño debe perseguir el menor número de componentes que sea consistente con la modularidad efectiva y la estructura de datos menos compleja que cumpla de modo adecuado con los requerimientos de información.  9.7 RESUMEN La arquitectura del software proporciona una visión holística del sistema que se va a construir. Ilustra la estructura y organización de los componentes del software, sus propiedades y conexio-nes. Los componentes del software incluyen módulos de programa y las distintas representa-ciones de datos que manipula éste. Por tanto, el diseño de los datos es parte integral de la ge-neración de la arquitectura del software. Ésta subraya las primeras decisiones respecto del diseño y provee un mecanismo para considerar los beneficios de las estructuras alternativas para el sistema. Dentro de un género arquitectónico dado, hay varios estilos y patrones diferentes disponibles  para el ingeniero de software. Cada estilo describe una categoría de sistemas que agrupa un conjunto de componentes que realizan una función requerida por el sistema; un grupo de co-nectores que permiten comunicación, coordinación y cooperación entre los componentes; restricciones que definen cómo pueden integrarse éstos para formar el sistema y modelos se-mánticos que permiten que un diseñador entienda las propiedades generales del sistema. En un sentido general, el diseño arquitectónico se obtiene con el empleo de cuatro pasos. En  primer lugar, el sistema debe representarse en contexto. Es decir, el diseñador debe definir las entidades externas con las que interactúa el software y la naturaleza de la interacción. Una vez especificado el contexto, el diseñador debe identificar un conjunto de abstracciones de alto ni-vel, llamadas arquetipos, que representan elementos fundamentales del comportamiento o función del sistema. Ya que se definieron las abstracciones, el diseño comienza a avanzar cerca del dominio de la implementación. Se identifican los componentes y se representan dentro del contexto de una arquitectura que les da apoyo. Por último, se desarrollan instancias específicas de la arquitectura para “probar” el diseño en el contexto del mundo real. Como ejemplo sencillo del diseño arquitectónico, el método del mapeo presentado en este  capítulo usa las características del flujo de datos para obtener un estilo arquitectónico de uso muy común. El diagrama de flujo de datos se mapea en la estructura del programa con el uso del enfoque del mapeo de la transformación. Éste se aplica a un flujo de información que presente fronteras distintas entre los datos de entrada y los de salida. El diagrama de flujo de datos se mapea en una estructura que asigna el control a la entrada, al procesamiento y a la salida junto con tres jerarquías de módulos diseñados por separado. Una vez que se tiene la arquitectura, se elabora y analiza mediante criterios de calidad.   PROBLEMAS  Y PUNTOS  POR EVALUAR 9.1. Con el uso de la arquitectura de una casa o edificio como metáfora, establezca comparaciones con la  arquitectura del software. ¿En qué se parecen las disciplinas de la arquitectura clásica y la del software? ¿En  qué difieren? 9.2. Diga dos o tres ejemplos de aplicaciones para cada uno de los estilos arquitectónicos mencionados en  la sección 9.3.1.9.3. Algunos de los estilos arquitectónicos citados en la sección 9.3.1 tienen naturaleza jerárquica, mientras  que otros no. Elabore una lista de cada tipo. ¿Cómo se implementarían los estilos arquitectónicos que no son  jerárquicos? 09Pressman(206-233).indd   23209Pressman(206-233).indd   232 14/1/10   15:44:4214/1/10   15:44:42