tiene que cambiar el estado de un elemento, haga que cambie el estado de su objeto contenedor. separación de consultas de comando las funciones deben hacer algo o responder a algo, pero no ambas cosas. su función debe cambiar el estado de un objeto o devolver información sobre el mismo, pero ambas operaciones causan confusión. fíjese en la siguiente función: public boolean set(string attribute, string value); esta función establece el valor de un atributo y devuelve true en caso de éxito o false si el atributo no existe. esto provoca la presencia de una extraña instrucción como la siguiente: if (set(“username”, “unclebob”))… imagínelo desde el punto de vista del lector. ¿qué significa? ¿pregunta si el atributo « username » se ha establecido antes en « unclebob », o si el atributo «username» se ha establecido correctamente en « unclebob »? es complicado saberlo por la invocación ya que no es evidente si set es un verbo o un adjetivo. el autor pretendía que set fuera un verbo, pero el contexto de la instrucción if parece un adjetivo. la instrucción se lee como «si el atributo username se ha establecido previamente en unclebob », no como «establecer el atributo username en unclebob y si funciona, entonces…». podríamos solucionarlo si cambiamos el nombre de la función set por setandcheckifexists , pero no mejoraría la legibilidad de la instrucción if . la verdadera solución es separar el comando de la consulta para evitar la ambigüedad. if (attributeexists(“username”)) { setattribute(“username”, “unclebob”); … } 78