incluso en la literatura arquitectónica encontramos ejemplos de estos detalles. piense en los pomos de mies van der rohe. eso es seiri . es la atención a todos los nombres de variables. debe bautizar a una variable con el mismo cuidado como si fuera su primogénito. y como todo sabemos, este cuidado no acaba nunca. el arquitecto christopher alexander, padre de patrones y lenguajes de patrones, considera todo acto de diseño como un pequeño acto local de reparación, y considera la maestría de la estructura como competencia única del arquitecto; las formas mayores se ceden a los patrones y su aplicación a los habitantes. el diseño es interminable no sólo al añadir una nueva habitación a una casa, sino al prestar atención a la pintura, a cambiar las alfombras o a instalar un nuevo fregadero en la cocina. otras artes muestran sentimientos análogos. en nuestra búsqueda por la importancia de los detalles, nos topamos con el autor francés del siglo xix gustav flaubert. el poeta francés paul valery afirma que un poema no se acaba nunca y que tiene que retocarse continuamente, y que dejar de trabajar en el poema es señal de abandono. tal preocupación por el detalle es común en todas las empresas de excelencia. puede que esto no sea nada nuevo, pero al leer este libro sentirá la necesidad de adoptar disciplinas rechazadas en su momento por apatía o por un deseo de espontaneidad o una simple respuesta al cambio. desafortunadamente, no solemos considerar estas preocupaciones la clave del arte de la programación. renunciamos pronto a nuestro código, no porque lo hayamos completado, sino porque nuestro sistema de valores se centra en el futuro más que en la sustancia de nuestros productos. esto tiene un precio final: hierba mala nunca muere . la investigación, ni en el mundo industrial ni en el académico, se reduce a mantener limpio el código. cuando trabajaba en la organización bell labs software production research (sin duda de producción) comprobamos que un estilo de sangrado coherente era uno de los mayores indicadores estadísticamente significativos de una baja densidad de errores. queremos que una arquitectura, un lenguaje de programación u otra noción superior sea el motivo de la calidad; como seres cuya supuesta profesionalidad se debe al dominio de herramientas y métodos de diseño, nos sentimos insultados por el valor que los programadores añaden con tan sólo aplicar un estilo de sangrado coherente. 12