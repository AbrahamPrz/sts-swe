131 calendar.set(getYear(), ordinalMonth, getDayOfMonth(), 0, 0, 0); 132 return calendar.getTime(); 133 } 134 135 public String toString() { 136 return String.format(“%02d-%s-%d”, getDayOfMonth(), getMonth(), getYear()); 137 } 138 139 public Day getDayOfWeek() { 140 Day startingDay = getDayOfWeekForOrdinalZero(); 141 int startingOffset = startingDay.toInt() - Day.SUNDAY.toInt(); 142 int ordinalOfDayOfWeek = (getOrdinalDay() + startingOffset) % 7; 143 return Day.fromInt(ordinalOfDayOfWeek + Day.SUNDAY.toInt()); 144 } 145 146 public int daysSince(DayDate date) { 147 return getOrdinalDay() - date.getOrdinalDay(); 148 } 149 150 public boolean isOn(DayDate other) { 151 return getOrdinalDay() == other.getOrdinalDay(); 152 } 153 154 public boolean isBefore(DayDate other) { 155 return getOrdinalDay() < other.getOrdinalDay(); 156 } 157 158 public boolean isOnOrBefore(DayDate other) { 159 return getOrdinalDay() <= other.getOrdinalDay(); 160 } 161 162 public boolean isAfter(DayDate other) { 163 return getOrdinalDay() > other.getOrdinalDay(); 164 } 165 166 public boolean isOnOrAfter(DayDate other) { 167 return getOrdinalDay() >= other.getOrdinalDay(); 168 } 169 170 public boolean isInRange(DayDate d1, DayDate d2) { 171 return isInRange(d1, d2, DateInterval.CLOSED); 172 } 173 174 public boolean isInRange(DayDate d1, DayDate d2, DateInterval interval) { 504