incumplir una o varias partes de esta regla. Usar nombres descriptivos En el Listado 3-7, hemos cambiado el nombre de la función de ejemplo de testableHtml  a  SetupTeardownIncluder.render . Es un nombre más apropiado ya que describe mejor el cometido de la función. También hemos asignado a los métodos privados un nombre descriptivo como  isTestable  o includeSetupAndTeardownPages . No hay que olvidar el valor de los nombres correctos. Recuerde el principio de Ward: «Sabemos que trabajamos con código limpio cuando cada rutina es más o menos lo que esperábamos». Para alcanzar este principio, gran parte del esfuerzo se basa en seleccionar nombres adecuados para pequeñas funciones que hacen una cosa. Cuanto más reducida y concreta sea una función, más sencillo será elegir un nombre descriptivo. No tema los nombres extensos. Un nombre descriptivo extenso es mucho mejor que uno breve pero enigmático. Use una convención de nombres que permita leer varias palabras en los nombres de las funciones y use esas palabras para asignar a la función un nombre que describa su cometido. No tema dedicar tiempo a elegir un buen nombre. De hecho, debería probar con varios nombres y leer el código con todos ellos. Los IDE modernos como Eclipse o IntelliJ facilitan el cambio de nombres. Use uno de estos IDE y experimente con diferentes nombres hasta que encuentre uno que sea lo bastante descriptivo. La elección de nombres descriptivos clarifica el diseño de los módulos y le permite mejorarlos. No es extraño que la búsqueda de nombres adecuados genere una reestructuración favorable del código. Sea coherente con los nombres. Use las mismas frases, sustantivos y verbos en los nombres de función que elija para los módulos. Pruebe, por ejemplo, con includeSetupAndTeardownPages ,  includeSetupPages , includeSuiteSetupPage  e  includeSetupPage . La estructura similar de estos nombres permite que la secuencia cuente una historia. En realidad, si ve la secuencia anterior, seguramente se pregunte qué ha pasado con 70