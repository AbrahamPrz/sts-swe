223 224 /** 225 * 2000 es un año bisiesto. 226 */ 227 public void testisleapyear2000() { 228 asserttrue(serialdate.isleapyear(2000)); 229 } 230 231 /** 232 * el número de años bisiestos desde 1900 y hasta 1899 incluido es 0. 233 */ 234 public void testleapyearcount1899() { 235 assertequals(serialdate.leapyearcount(1899), 0); 236 } 237 238 /** 239 * el número de años bisiestos desde 1900 y hasta 1903 incluido es 0. 240 */ 241 public void testleapyearcount1903() { 242 assertequals(serialdate.leapyearcount(1903), 0); 243 } 244 245 /** 246 * el número de años bisiestos desde 1900 y hasta 1904 incluido es 1. 247 */ 248 public void testleapyearcount1904() { 249 assertequals(serialdate.leapyearcount(1904), 1); 250 } 251 252 /** 253 * el número de años bisiestos desde 1900 y hasta 1999 incluido es 24. 254 */ 255 public void testleapyearcount1999() { 256 assertequals(serialdate.leapyearcount(1999), 24); 257 } 258 259 /** 260 * el número de años bisiestos desde 1900 y hasta 2000 incluido es 25. 261 */ 262 public void testleapyearcount2000() { 263 assertequals(serialdate.leapyearcount(2000), 25); 264 } 265 266 /** 267 * serializar una instancia, restaurarla y comprobar la igualdad. 468