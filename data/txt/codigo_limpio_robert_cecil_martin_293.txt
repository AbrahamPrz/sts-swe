if (m instanceof booleanargumentmarshaler) setbooleanarg(m); else if (m instanceof stringargumentmarshaler) setstringarg(m); else if (m instanceof integerargumentmarshaler) setintarg(m); else return false; } catch (argsexception e) { valid = false; errorargumentid = argchar; throw e; } return true; } private void setintarg(argumentmarshaler m) throws argsexception { currentargument++; string parameter = null; try { parameter = args[currentargument]; m.set(parameter); } catch (arrayindexoutofboundsexception e) { errorcode = errorcode.missing_integer; throw new argsexception(); } catch (argsexception e) { errorparameter = parameter; errorcode = errorcode.invalid_integer; throw e; } } private void setstringarg(argumentmarshaler m) throws argsexception { currentargument++; try { m.set (args[currentargument]); } catch (arrayindexoutofboundsexception e) { errorcode = errorcode.missing_string; throw new argsexception(); } } private void setbooleanarg(argumentmarshaler m) { try { m.set(“true”); } catch (argsexception e) { } } public int cardinality() { return argsfound.size(); } public string usage() { 294