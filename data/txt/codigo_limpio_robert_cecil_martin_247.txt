porque las pruebas superen una ejecución posterior . hay muchos factores que tener en cuenta. veamos algunas recomendaciones concretas: considere los fallos como posibles problemas de los procesos. consiga que primero funcione el código sin procesos. el código con procesos se debe poder conectar a otros elementos. el código con procesos debe ser modificable. ejecute con más procesos que procesadores. ejecute en diferentes plataformas. diseñe el código para probar y forzar fallos. considerar los fallos como posibles problemas de los procesos el código con procesos hace que fallen elementos que no deberían fallar. muchos desarrolladores desconocen cómo interactúan los procesos con otro tipo de código. los problemas del código con procesos pueden mostrar sus síntomas una vez cada mil o un millón de ejecuciones. los intentos por repetir los sistemas pueden resultar frustrantes, lo que suele provocar que los programadores consideren el fallo como algo aislado. es recomendable asumir que los fallos aislados no existen. cuanto más los ignore, mayor será la cantidad de código que se acumule sobre un enfoque defectuoso. recomendación : no ignore los fallos del sistema como algo aislado . conseguir que primero funcione el código sin procesos puede parecer evidente pero no está de más recordarlo. asegúrese de que el código funciona fuera de sus procesos. por lo general, esto significa crear algunos pojo que los procesos deban invocar. los pojo no son compatibles con los procesos y por tanto se pueden probar fuera de su entorno. conviene 248