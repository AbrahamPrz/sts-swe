574 parte cuatro administración de proyectos de software • usar el sentido común y sensibilidad organizacional cuando se interpreten datos de métricas. • proporcionar retroalimentación regular a los individuos y equipos que recopilan medidas y métricas. • no usar métricas para valorar a los individuos. • trabajar con los profesionales y con los equipos para establecer metas y métricas claras que se usarán para lograr las primeras. • nunca usar métricas para amenazar a los individuos o a los equipos. • no considerar “negativos” los datos de métricas que indiquen un área problemática. dichos datos simplemente son un indicio para mejorar el proceso. • no obsesionarse con una sola métrica ni excluir otras métricas importantes. conforme una organización se siente más cómoda con la recolección y uso de métricas de proceso, la derivación de los indicadores simples da lugar a un enfoque más riguroso llamado mejora estadística de proceso de software (meps). en esencia, meps usa análisis de falla del soft-ware para recopilar información acerca de todos los errores y defectos 2 que se encuentren conforme se desarrolle y use una aplicación, sistema o producto. 25.1.2 métricas de proyecto a diferencia de las métricas de proceso de software que se usaron con propósitos estratégicos, las medidas de proyecto de software son tácticas. es decir, el gerente de proyecto y un equipo de software usan las métricas de proyecto y los indicadores derivados de ellas para adaptar el flujo de trabajo del proyecto y las actividades técnicas. la primera aplicación de las métricas de proyecto sobre la mayoría de los proyectos de soft- ware ocurre durante la estimación. las métricas recopiladas de proyectos anteriores se usan como la base desde la cual se hacen estimaciones de esfuerzo y tiempo para el trabajo de soft-ware nuevo. conforme avanza un proyecto, las medidas de esfuerzo y tiempo calendario utili-zadas se comparan con las estimaciones originales (y con la agenda del proyecto). el gerente del proyecto usa dichos datos para monitorear y controlar el progreso. mientras comienza el trabajo técnico, otras métricas del proyecto empiezan a tener signifi- cado. se miden las tasas de producción representadas en términos de modelos creados, horas de revisión, puntos de función y líneas de fuente entregadas. además, se rastrean los erro-res descubiertos durante cada tarea de ingeniería del software. conforme el software evolu-ciona desde los requerimientos hasta el diseño, se recopilan métricas técnicas (capítulo 23) a fin de valorar la calidad del diseño y proporcionar indicios que influirán en el enfoque tomado para generación y prueba de código. la intención de las métricas de proyecto es doble. primero, se usan para minimizar el calen- dario de desarrollo al hacer los ajustes necesarios para evitar demoras y mitigar potenciales problemas y riesgos. segundo, se usan para valorar la calidad del producto sobre una base en marcha y, cuando es necesario, modificar el enfoque técnico para mejorar la calidad. conforme la calidad mejora, los defectos se minimizan, y conforme el conteo de defectos baja, la cantidad de reelaboración requerida durante el proyecto también se reduce. esto con-duce a una reducción en el costo global del proyecto. 2 en este libro, un error se define como un fallo en un producto operativo de la ingeniería del software que se descubre antes de que el software se entregue al usuario final. un defecto es un fallo que se descubre después de entregar el software al usuario final. debe destacarse que otros no hacen esta distinción.¿qué lineamientos deben aplicarse cuando se recopilan métricas de software?? ¿cómo deben usarse las métricas durante el proyecto en sí?? 25pressman(571-592).indd  57425pressman(571-592).indd  574 19/1/10  23:39:5419/1/10  23:39:54