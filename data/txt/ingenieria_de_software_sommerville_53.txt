36 capítulo 2 ■ procesos de software existen tres tipos de componentes de software que pueden usarse en un proceso orien- tado a la reutilización: 1. servicios web que se desarrollan en concordancia para atender servicios estándares y que están disponibles para la invocación remota. 2. colecciones de objetos que se desarrollan como un paquete para su integración con un marco de componentes como .net o j2ee. 3. sistemas de software independientes que se configuran para usar en un entorno par- ticular. la ingeniería de software orientada a la reutilización tiene la clara ventaja de reducir la cantidad de software a desarrollar y, por lo tanto, la de disminuir costos y riesgos; por lo general, también conduce a entregas más rápidas del software. sin embargo, son inevitables los compromisos de requerimientos y esto conduciría hacia un sistema que no cubra las necesidades reales de los usuarios. más aún, se pierde algo de control sobre la evolución del sistema, conforme las nuevas versiones de los componentes reutilizables no estén bajo el control de la organización que los usa. la reutilización de software es muy importante y en la tercera parte del libro se dedican varios capítulos a este tema. en el capítulo 16 se tratan los conflictos generales de la reutili-zación de software y la reutilización de cots, en los capítulos 17 y 18 se estudia la in ge niería de software basada en componentes, y en el capítulo 19 se explican los sistemas orientados al servicio. 2.2 actividades del proceso los procesos de software real son secuencias entrelazadas de actividades técnicas, colabo-rativas y administrativas con la meta general de especificar, diseñar, implementar y pro-bar un sistema de software. los desarrolladores de software usan en su trabajo diferentes herramientas de software. las herramientas son útiles particularmente para dar apoyo a la edición de distintos tipos de documento y para manejar el inmenso volumen de informa-ción detallada que se reproduce en un gran proyecto de software. las cuatro actividades básicas de proceso de especificación, desarrollo, validación y evolución se organizan de diversa manera en diferentes procesos de desarrollo. en el modelo en cascada se organizan en secuencia, mientras que se entrelazan en el desarro-llo incremental. la forma en que se llevan a cabo estas actividades depende del tipo de software, del personal y de la inclusión de estructuras organizativas. en la programación extrema, por ejemplo, las especificaciones se escriben en tarjetas. las pruebas son ejecu-tables y se desarrollan antes del programa en sí. la evolución incluye la reestructuración o refactorización sustancial del sistema. 2.2.1 especificación del software la especificación del software o la ingeniería de requerimientos consisten en el proce-so de comprender y definir qué servicios se requieren del sistema, así como la identifica-ción de las restricciones sobre la operación y el desarrollo del sistema. la ingeniería de requerimientos es una etapa particularmente crítica del proceso de software, ya que los m02_sommerville_ingenieria_1ed_se_027-055.indd  36m02_sommerville_ingenieria_1ed_se_027-055.indd  36 3/18/11  4:45:30 pm3/18/11  4:45:30 pm