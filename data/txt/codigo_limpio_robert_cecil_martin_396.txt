Preste especial atención a las pruebas de condiciones de límite. Solemos acertar con la parte central de un algoritmo pero malinterpretar los límites. T6: Probar de forma exhaustiva junto a los errores Los errores suelen congregarse. Si detecta un error en una función, es recomendable probarla de forma exhaustiva. Seguramente no sea el único error. T7: Los patrones de fallo son reveladores En ocasiones diagnosticamos un problema detectando patrones de fallo en los casos de prueba. Es otro argumento para crear casos de prueba lo más completos posibles. Los casos de prueba completos, si se ordenan de forma razonable, revelan patrones. Como ejemplo, imagine que ha detectado que todas las pruebas con un entero mayor de cinco caracteres fallan. O que fallan todas las pruebas que pasan un número negativo al segundo argumento de una función. En ocasiones, con ver el patrón de rojos y verdes de un informe de pruebas basta para hacer saltar la chispa y llegar a una solución. En el capítulo 16 encontrará un interesante ejemplo en el caso de  SerialDate . T8: Los patrones de cobertura de pruebas pueden ser reveladores El análisis del código que se ejecuta o no en las pruebas superadas suele indicar porqué fallan las pruebas no superadas. T9: Las pruebas deben ser rápidas Una prueba lenta no se ejecuta. Cuando las cosas se ponen feas, las pruebas lentas se eliminan de la  suite . Por lo tanto, intente que sus pruebas sean 397