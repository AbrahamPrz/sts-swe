538 /** 539 * devuelve el número del último día del mes, teniendo en cuenta los 540 * años bisiestos. 541 * 542 * @param month el mes. 543 * @param yyyy el año (entre 1900 y 9999). 544 * 545 * @return el número del último día del mes. 546 */ 547 public static int lastdayofmonth(final int month, final int yyyy) { 548 549 final int result = last_day_of_month[month]; 550 if (month != february) { 551 return result; 552 } 553 else if (isleapyear(yyyy)) { 554 return result + 1; 555 } 556 else { 557 return result; 558 } 559 560 } 561 562 /** 563 * crea una nueva fecha añadiendo el número especificado de días a la fecha 564 * base. 565 * 566 * @param days el número de días que añadir (puede ser negativo). 567 * @param base la fecha base. 568 * 569 * @return una nueva fecha. 570 */ 571 public static serialdate adddays(final int days, final serialdate base) { 572 573 final int serialdaynumber = base.toserial() + days; 574 return serialdate.createinstance(serialdaynumber); 575 576 } 577 578 /** 579 * crea una nueva fecha añadiendo el número especificado de meses a la fecha 580 * base. 451