capítulo 23 métricas de producto 529 las métricas de software serán útiles sólo si se caracterizan efectivamente y si se validan de manera adecuada. los siguientes principios [let03b] son representativos de muchos que pue-den proponerse para la caracterización y validación de métricas: • una métrica debe tener propiedades matemáticas deseables, es decir, el valor de la métrica debe estar en un rango significativo (por ejemplo, 0 a 1, donde 0 realmente significa ausencia, 1 indica el valor máximo y 0.5 representa el “punto medio”). además, una métrica que intente estar en una escala racional no debe constituirse con componentes que sólo se miden en una escala ordinal. • cuando una métrica representa una característica de software que aumenta cuando ocurren rasgos positivos o que disminuye cuando se encuentran rasgos indeseables, el valor de la métrica debe aumentar o disminuir en la misma forma. • cada métrica debe validarse de manera empírica en una gran variedad de contextos antes de publicarse o utilizarse para tomar decisiones. una métrica debe medir el factor de interés, independientemente de otros factores. debe “escalar” a sistemas más grandes y funcionar en varios lenguajes de programación y dominios de sistema. aunque la formulación, caracterización y validación son cruciales, la recolección y el análisis son las actividades que impulsan el proceso de medición. roche [roc94] sugiere los siguientes principios para dichas actividades: 1) siempre que sea posible, la recolección y el análisis de datos deben automatizarse; 2) deben aplicarse técnicas estadísticas válidas para establecer re-laciones entre atributos de producto internos y características de calidad externas (por ejemplo, si el nivel de complejidad arquitectónica se correlaciona con el número de defectos reportados en el uso de producción), y 3) para cada métrica deben establecerse lineamientos y recomenda-ciones interpretativos. 23.1.4 medición de software orientado a meta el paradigma meta/pregunta/métrica (mpm) fue desarrollado por basili y weiss [bas84] como una técnica para identificar métricas significativas para cualquier parte del proceso de software. mpm enfatiza la necesidad de: 1) establecer una meta de medición explícita que sea específica para la actividad del proceso o para la característica del producto que se quiera valorar, 2) defi-nir un conjunto de preguntas que deban responderse con la finalidad de lograr la meta y 3) identificar métricas bien formuladas que ayuden a responder dichas preguntas. para definir cada meta de medición, puede usarse una plantilla de definición de meta [bas94]. la plantilla toma la forma: analizar {el nombre de la actividad o atributo que se va a medir} con el propósito de {el objetivo global del análisis2} con respecto a {el aspecto de la actividad o atributo que se considera} desde el punto de vista de {las personas que tienen interés en la medición} en el contexto de {el entorno en el que tiene lugar la medición}. como ejemplo, considere una plantilla de definición de meta para casasegura: analizar la arquitectura del software casasegura con el propósito de evaluar los componentes ar- quitectónicos con respecto a la capacidad de hacer casasegura más extensible desde el punto de vista de los ingenieros de software que realizan el trabajo en el contexto de mejora del producto durante los próximos tres años.en realidad, muchas métricas de producto actualmente en uso no concuerdan con dichos principios tanto como debieran. pero eso no significa que no tengan valor; sólo tenga cuidado cuando los use y entienda que tienen la intención de proporcionar comprensión, no estricta verificación científica.consejo webref en www.thedacts.com/ goldpractices/practices/gqma.html puede encontrar un útil foro de discusión sobre el mpm. 2 van solingen y berghout [sol90] sugieren que el objeto casi siempre es “comprender, controlar o mejorar” la actividad del proceso o el atributo del producto. 23pressman(526-552).indd  52923pressman(526-552).indd  529 19/1/10  23:29:5319/1/10  23:29:53