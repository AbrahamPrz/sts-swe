492 PARTE TRES  ADMINISTRACIÓN DE LA CALIDAD BlockQueue′ /H11005 BlockQueue /H6114 ⟨Ablocks ⟩ /H11625 used′ /H11005 used /H11625 free′ /H11005 free No hay duda de que la especificación matemática de la fila de bloques es considerablemente más rigurosa que una narrativa de lenguaje natural o que un modelo gráfico. El rigor adicional requiere esfuerzo, pero los beneficios obtenidos de la consistencia mejorada y de la completitud pueden justificarse para algunos dominios de aplicación.  21.7 L ENGUAJES  DE ESPECIFICACIÓN  FORMAL Un lenguaje de especificación formal por lo general se compone de tres componentes primarios: 1) una sintaxis que define la notación específica con la que se representa la especificación, 2) semántica para ayudar a definir un “universo de objetos” [Win90] que se usarán para describir el sistema y 3) un conjunto de relaciones que definen las reglas que indican cuáles objetos sa-tisfacen adecuadamente la especificación. El dominio sintáctico de un lenguaje de especificación formal con frecuencia se basa en una  sintaxis que se deriva de la notación estándar de la teoría de conjuntos y del cálculo de predi-cados. El dominio semántico  de un lenguaje de especificación indica cómo representa el lenguaje  los requerimientos del sistema. Es posible usar diferentes abstracciones semánticas para describir el mismo sistema en for- mas distintas. En los capítulos 6 y 7, se hizo esto de manera menos formal. Se representaron información, función y comportamiento. Para representar el mismo sistema, puede usarse una notación de modelado diferente. La semántica de cada representación proporciona visiones complementarias del sistema. Para ilustrar este enfoque cuando se usan métodos formales, suponga que utiliza un lenguaje de especificación formal para describir el conjunto de eventos que hacen que ocurra un estado particular en un sistema. Otra relación formal muestra todas las funciones que ocurren dentro de un estado determinado. La intersección de estas dos rela-ciones proporciona un indicio de los eventos que producirán funciones específicas. En la actualidad se usan varios lenguajes de especificación formales. OCL [OMG03b], Z  [ISO02], LARCH [Gut93] y VDM [Jon91] son lenguajes de especificación formal representativos que muestran las características anotadas anteriormente. En este capítulo se presenta un breve estudio de OCL y Z. 21.7.1   Lenguaje de restricción de objeto (OCL)8 El lenguaje de restricción de objeto (OCL) es una notación formal desarrollada de modo que los  usuarios de UML puedan agregar más precisión a sus especificaciones. En el lenguaje está dis-ponible todo el poder de la lógica y de la matemática discreta. Sin embargo, los diseñadores de OCL decidieron que, en los enunciados OCL, sólo deberían usarse caracteres ASCII (en lugar de la notación matemática tradicional). Esto hace que el lenguaje sea más amistoso para las personas que tienen menos inclinación matemática y que la computadora lo procese más fácil-mente. Pero también hace al OCL un poco farragoso en algunos lugares. Para usar OCL, comience con uno o más diagramas UML: los diagramas de clase, estado o  actividad más comunes (apéndice 1). Se agregan expresiones OCL y hechos de estado acerca de elementos de los diagramas. Dichas expresiones se llaman restricciones; cualquier implementa-ción derivada del modelo debe asegurar que cada una de las restricciones siempre sigue siendo verdadera. 8 Esta sección es aportación del profesor Timothy Lethbridge, de la Universidad de Ottawa, y se presenta aquí con  permiso. 21Pressman(478-500).indd   49221Pressman(478-500).indd   492 19/1/10   12:43:2719/1/10   12:43:27