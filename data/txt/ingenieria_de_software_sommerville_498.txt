18.1 ■ Conflictos de los sistemas distribuidos  481 Por ejemplo, en vez de que el rendimiento del sistema dependa de la velocidad de ejecu- ción de un procesador, depende del ancho de banda de la red, la carga de la red y la velo-cidad de todas las computadoras que forman parte del sistema. Trasladar los recursos de una parte del sistema a otra puede afectar significativamente el rendimiento del sistema. Más aún, como saben todos los usuarios de la WWW, los sistemas distribuidos son impredecibles en su respuesta. El tiempo de respuesta depende de la carga total del sis-tema, su arquitectura y la carga de la red. Puesto que todo esto puede cambiar a corto plazo, el tiempo para responder a la petición de un usuario puede variar drásticamente de una petición a otra. El desarrollo más importante que ha afectado a los sistemas de software distribuidos en los años anteriores es el enfoque orientado a servicios. Gran parte de este capítulose enfoca en los conflictos generales de los sistemas distribuidos, pero en la sección 18.4 setrata la noción de aplicaciones implementadas como servicios. Esto complementa el material del capítulo 19, que se enfoca en los servicios como componentes en una arqui-tectura orientada a servicios, y en los conflictos más generales de la ingeniería de soft-ware orientada a servicios.  18.1 Conflictos de los sistemas distribuidos Como se explicó en la introducción de este capítulo, los sistemas distribuidos son más complejos que los sistemas que se ejecutan en un solo procesador. Esta complejidad surge porque es prácticamente imposible tener un modelo descendente de control de dichos sis-temas. Los nodos en el sistema que entregan funcionalidad con frecuencia son sistemas independientes sin una sola autoridad encargada de ellos. La red que conecta dichos nodos es un sistema de gestión independiente. Es un sistema complejo por derecho propio y no puede controlarse por los propietarios de los sistemas que usan la red. Por lo tanto, existe una imprevisibilidad inherente en la operación de los sistemas distribuidos que debe con-siderar el diseñador del sistema. Algunos de los conflictos de diseño más importantes que deben considerarse en la ingeniería de sistemas distribuidos son: 1. Transparencia ¿En qué medida el sistema distribuido debe aparecer al usuario  como un solo sistema? ¿Cuándo es útil para los usuarios entender que el sistema es distribuido? 2. Apertura ¿Un sistema debe diseñarse usando protocolos estándar que soporten interoperabilidad o deben usarse protocolos más especializados que restrinjan la libertad del diseñador? 3. Escalabilidad ¿Cómo puede construirse el sistema para que sea escalable? Esto es, ¿cómo podría diseñarse un sistema global para que su capacidad se pueda aumentar en respuesta a demandas crecientes hechas sobre el sistema? 4. Seguridad ¿Cómo pueden definirse e implementarse políticas de seguridad útiles que se apliquen a través de un conjunto de sistemas administrados de manera inde-pendiente? M18_SOMMERVILLE_INGENIERIA_1ED_SE_479-507.indd   481M18_SOMMERVILLE_INGENIERIA_1ED_SE_479-507.indd   481 3/18/11   5:03:55 PM3/18/11   5:03:55 PM