desempeña. De hecho, el nombre es la primera forma para determinar el tamaño de una clase. Si no podemos derivar un nombre conciso para una clase, seguramente sea demasiado extenso. Cuanto más ambiguo sea el nombre de la clase, más probabilidades hay de que tenga demasiadas responsabilidades. Por ejemplo, los nombres de clase con palabras como Processor ,  Manager  o  Super  suelen indicar una desafortunada acumulación de responsabilidades. También debemos ser capaces de escribir una breve descripción de la clase en unas 25 palabras, sin usar las palabras « si », « o », « y » o « pero ». ¿Cómo describiríamos  SuperDashboard ?:  SuperDashboard  permite acceder al componente con el enfoque y nos permite controlar los números de versión y producto. El primer  y  indica que  SuperDashboard  tiene demasiadas responsabilidades. El Principio de responsabilidad única El Principio de responsabilidad única ( Single Responsibility Principle , SRP) [46]  indica que una clase o módulo debe tener uno y sólo un motivo para cambiar. Este principio nos indica la definición de responsabilidad y una directriz para el tamaño de la clase. Las clases sólo deben tener una responsabilidad, un motivo para cambiar. La clase  SuperDashboard aparentemente reducida del Listado 10-2 tiene dos motivos para cambiar. Primero, controla información de versión que supuestamente debe actualizarse cada vez que se comercialice el  software . Por otra parte, gestiona componentes de Java Swing (un derivado de JFrame, la representación Swing de una ventana de IGU de nivel superior). Sin duda, querremos cambiar el número de versión si cambiamos el código Swing, pero lo contrario no es necesario: podríamos cambiar la información de versión en función de los cambios de otro código del sistema. La identificación de responsabilidades (los motivos del cambio) nos permite reconocer y mejorar las abstracciones en nuestro código. Podemos extraer los tres métodos de  SuperDashboard relacionados con la información de versiones en una clase independiente como  Version  (véase el Listado 10-3.) La clase  Version  es una construcción 189