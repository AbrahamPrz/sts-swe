178 PARTE DOS  MODELADO Como hay muchas herramientas para construir webapps baratas y poderosas en sus funcio- nes, es mejor crear el prototipo de la interfaz con el empleo de ellas. El prototipo debe imple- mentar los vínculos de navegación principales y representar la pantalla general en forma muy parecida a la que se construirá. Por ejemplo, si van a ponerse a disposición del usuario final cinco funciones principales del sistema, el prototipo debe representarlas tal como las verá cuando entre por primera vez a la webapp. ¿Se darán vínculos gráficos? ¿Dónde se desplegará el  menú de navegación? ¿Qué otra información verá el usuario? Preguntas como éstas son las que debe responder el prototipo. 7.5.6  Modelo funcional para las webapps Muchas webapps proporcionan una amplia variedad de funciones de computación y manipu- lación que se asocian directamente con el contenido (porque lo utilizan o porque lo producen) y es frecuente que sean un objetivo importante de la interacción entre el usuario y la webapp. Por esta razón, deben analizarse los requerimientos funcionales y modelarlos cuando sea ne-cesario. El modelo funcional enfrenta dos elementos de procesamiento de la webapp, cada uno de los  cuales representa un nivel distinto de abstracción del procedimiento: 1) funciones observables por los usuarios que entrega la webapp a éstos y 2) las operaciones contenidas en las clases de  análisis que implementan comportamientos asociados con la clase. La funcionalidad observable por el usuario agrupa cualesquiera funciones de procesamiento  que inicie directamente el usuario. Por ejemplo, una webapp financiera tal vez implemente va- rias funciones de finanzas (como una calculadora de ahorros para una colegiatura universitaria o un fondo para el retiro). Estas funciones en realidad se implementan con el uso de operaciones dentro de clases de análisis, pero desde el punto de vista del usuario final; el resultado visible es la función (más correctamente, los datos que provee la función). En un nivel más bajo de abstracción del procedimiento, el modelo de requerimientos describe  el procesamiento que se realizará por medio de operaciones de clase de análisis. Estas opera-ciones manipulan los atributos de clase y se involucran como clases que colaboran entre sí para lograr algún comportamiento que se desea. Sin que importe el nivel de abstracción del procedimiento, el diagrama de actividades UML  se utiliza para representar detalles de éste. En el nivel de análisis, los diagramas de actividades deben usarse sólo donde la funcionalidad sea relativamente compleja. Gran parte de la comple-jidad de muchas webapps ocurre no en las funciones que proveen, sino en la naturaleza de la información a que se accede y en las formas en las que se manipula. Un ejemplo de complejidad relativa de la funcionalidad para CasaSeguraAsegurada.com se  aborda en un caso de uso llamado Obtener recomendaciones para la distribución de sensores en mi espacio. El usuario ya ha desarrollado la distribución del espacio que se vigilará y en este caso de uso selecciona dicha distribución y solicita ubicaciones recomendables para los sensores dentro de ella. CasaSeguraAsegurada.com responde con la representación gráfica de la dis- tribución por medio de información adicional acerca de la ubicación recomendable para los sensores. La interacción es muy sencilla, el contenido es algo más complejo, pero la funciona-lidad subyacente es muy sofisticada. El sistema debe realizar un análisis relativamente complejo de la planta del piso para determinar el conjunto óptimo de sensores. Debe examinar las dimen-siones de la habitación, la ubicación de puertas y ventanas, y coordinar éstas con la capacidad y especificaciones de los sensores. ¡No es una tarea fácil! Para describir el procesamiento de este caso de uso se utiliza un conjunto de diagramas de actividades. El segundo ejemplo es el caso de uso Controlar cámaras. En éste, la interacción es relativa- mente sencilla, pero existe el potencial de una funcionalidad compleja, dado que dicha opera-ción “sencilla” requiere una comunicación compleja con dispositivos ubicados en posiciones remotas y a los que se accede por internet. Una complicación adicional se relaciona con la ne- 07Pressman(158-182).indd   17807Pressman(158-182).indd   178 14/1/10   14:19:4214/1/10   14:19:42