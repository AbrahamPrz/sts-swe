470  Capítulo 17 ■ Ingeniería de software basada en componentes de composición. En ocasiones, como en el siguiente ejemplo, el adaptador toma un resul- tado de un componente y lo convierte en una forma en que puede usarse como entrada a otro. En otros casos, el adaptador puede llamarse por el componente A como un proxy para el componente B. Esta situación ocurre si A quiere llamar a B, pero los detalles de la interfaz “requiere” de A no coinciden con los detalles de la interfaz “proporciona” de B. El adaptador reconcilia dichas diferencias al convertir sus parámetros de entrada desde A en los parámetros de entrada requeridos por B. Entonces llama a B para entregar los servicios requeridos por A. Para ilustrar los adaptadores, considere los dos componentes que se muestran en la figura 17.11, cuyas interfaces son incompatibles. Esto puede ser parte de un sistema usado por los servicios de emergencia. Cuando el operador de emergencia recibe una llamada, el número telefónico se ingresa al componente  addressFinder  para localizar la dirección.  Entonces, al usar el componente mapper, el operador imprime un mapa para mandarlo al vehículo que acude a la emergencia. De hecho, los componentes tendrían interfaces más complejas que las mostradas aquí, pero la versión simplificada ilustra el concepto de adaptador. El primer componente,  addressFinder , encuentra la dirección que coincide con un  número telefónico. También puede regresar al dueño de la propiedad asociada con el nú-mero telefónico y el tipo de propiedad. El componente  mapper  toma un código postal  (en Estados Unidos, un código ZIP estándar con los cuatro dígitos adicionales que iden-tifican la ubicación de la propiedad) y muestra o imprime un mapa de las calles del área que rodean dicho código a una escala específica. Tales componentes se pueden componer, en principio, porque la ubicación de la pro-piedad incluye un código postal o ZIP. Sin embargo, se debe escribir un componente adaptador llamado  postCodeStripper  que toma los datos de ubicación del addressFinder  y consigue el código postal. Entonces este código postal se usa como entrada a mapper, y el mapa de las calles se muestra a una escala de 1:10,000. El siguiente código, que es un ejemplo de composición secuencial, ilustra la secuencia de llamadas que se requieren para implementar esto: address = addressFinder.location (phonenumber) ; postCode = postCodeStripper.getPostCode (address) ;mapper.displayMap(postCode, 10000) ;phoneDatabase (cadena command)cadena location (cadena pn) cadena owner (cadena pn) cadena propertyType (cadena pn) mapDB (cadena command)displayMap (cadena postCode, scale) printMap (cadena postCode, scale)addressFinder mapperFigura 17.11  Componentes con interfaces incompatibles M17_SOMMERVILLE_INGENIERIA_1ED_SE_452-478.indd   470M17_SOMMERVILLE_INGENIERIA_1ED_SE_452-478.indd   470 3/18/11   5:03:06 PM3/18/11   5:03:06 PM