46  Capítulo 2 ■ Procesos de software del usuario, y diseñar un sistema que valide los requerimientos funcionales del sistema  o desarrolle un sistema que demuestre a los administradores la factibilidad de la aplicación. El mismo prototipo no puede cumplir con todos los objetivos, ya que si éstos quedan sin especificar, los administradores o usuarios finales quizá malinterpreten la función del pro-totipo. En consecuencia, es posible que no obtengan los beneficios esperados del desarrollo del prototipo. La siguiente etapa del proceso consiste en decidir qué poner y, algo quizá más impor-tante, qué dejar fuera del sistema de prototipo. Para reducir los costos de creación de prototipos y acelerar las fechas de entrega, es posible dejar cierta funcionalidad fuera del prototipo y, también, decidir hacer más flexible los requerimientos no funcionales, como el tiempo de respuesta y la utilización de memoria. El manejo y la gestión de erro-res pueden ignorarse, a menos que el objetivo del prototipo sea establecer una interfaz de usuario. Además, es posible reducir los estándares de fiabilidad y calidad del programa. La etapa final del proceso es la evaluación del prototipo. Hay que tomar provisiones durante esta etapa para la capacitación del usuario y usar los objetivos del prototipo para derivar un plan de evaluación. Los usuarios requieren tiempo para sentirse cómodos con un nuevo sistema e integrarse a un patrón normal de uso. Una vez que utilizan el sistema de manera normal, descubren errores y omisiones en los requerimientos. Un problema general con la creación de prototipos es que quizás el prototipo no se utilice necesariamente en la misma forma que el sistema final. El revisor del prototipo tal vez no sea un usuario típico del sistema. También, podría resultar insuficiente el tiempo de capacitación durante la evaluación del prototipo. Si el prototipo es lento, los evalua-dores podrían ajustar su forma de trabajar y evitar aquellas características del sistema con tiempos de respuesta lentos. Cuando se da una mejor respuesta en el sistema final, se puede usar de forma diferente. En ocasiones, los desarrolladores están presionados por los administradores para entregar prototipos desechables, sobre todo cuando existen demoras en la entrega de la versión final del software. Sin embargo, por lo general esto no es aconsejable: 1. Puede ser imposible corregir el prototipo para cubrir requerimientos no funcionales,  como los requerimientos de rendimiento, seguridad, robustez y fiabilidad, ignorados  durante el desarrollo del prototipo. 2. El cambio rápido durante el desarrollo significa claramente que el prototipo no está  documentado. La única especificación de diseño es el código del prototipo. Esto no es muy bueno para el mantenimiento a largo plazo. 3. Probablemente los cambios realizados durante el desarrollo de prototipos degrada- rán la estructura del sistema, y este último será difícil y costoso de mantener. 4. Por lo general, durante el desarrollo de prototipos se hacen más flexibles los están- dares de calidad de la organización.  Los prototipos no tienen que ser ejecutables para ser útiles. Los modelos en papel de la interfaz de usuario del sistema (Rettig, 1994) pueden ser efectivos para ayudar a los usuarios a refinar un diseño de interfaz y trabajar a través de escenarios de uso. Su desarrollo es muy económico y suelen construirse en pocos días. Una extensión de esta técnica es un prototipo de Mago de Oz, donde sólo se desarrolle la interfaz del usuario. Los usuarios interactúan con esta interfaz, pero sus solicitudes pasan a una persona que los interpreta y les devuelve la respuesta adecuada. M02_SOMMERVILLE_INGENIERIA_1ED_SE_027-055.indd   46M02_SOMMERVILLE_INGENIERIA_1ED_SE_027-055.indd   46 3/18/11   4:45:31 PM3/18/11   4:45:31 PM