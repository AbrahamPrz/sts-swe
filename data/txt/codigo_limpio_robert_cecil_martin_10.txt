raíz de la profesionalidad responsable de una profesión que debería preocuparse del ciclo vital de un producto. al igual que mantenemos coches y otras máquinas, el mantenimiento divisible, esperar a que surjan los errores, es la excepción. por el contrario, ascendemos un nivel: inspeccionamos diariamente las máquinas y arreglamos los componentes gastados antes de que se rompan, o cambiamos el aceite cada varios miles de kilómetros para evitar problemas. en el código, debemos refactorizar sin compasión. puede ascender otro nivel más, como hizo el movimiento tpm hace 50 años: crear máquinas que se pueden mantener mejor. crear código legible es tan importante como crear código ejecutable. la práctica definitiva, que apareció en los círculos tpm en 1960, es la que se centra en introducir nuevas máquinas o sustituir las antiguas. como fred brooks nos advirtió, deberíamos rehacer el software cada siete años para eliminar los problemas latentes. tendríamos que actualizar este plazo por semanas, días e incluso horas en lugar de años. ahí es donde se encuentra el detalle. el detalle tiene un gran poder, y es un enfoque vital humilde y profundo, como es de esperar de cualquier enfoque de origen japonés. pero no es sólo la visión oriental de la vida; también lo encontramos en el pueblo norteamericano. la cita seiton anterior proviene de la pluma de un ministro de ohio que, literalmente, consideraba la limpieza como un remedio para todas las formas del mal. ¿y seiso ? la limpieza es la pureza . aunque una casa sea bella, el mobiliario inadecuado acaba con su encanto. ¿y la opinión de shutsuke al respecto? el que confíe en lo pequeño confiará en lo superior . ¿y la predisposición a refactorizar en el momento adecuado, reforzando nuestra posición para las posteriores grandes decisiones, en lugar de dejarlo pasar? una puntada a tiempo ahorra ciento. al que madruga, dios le ayuda. no dejes para mañana lo que puedas hacer hoy (éste era el sentido original de la frase «en el momento adecuado» de lean hasta que cayó en manos de consultores de software ). ¿y sobre calibrar la importancia de los pequeños esfuerzos individuales en un todo mayor? de pequeñas semillas crecen grandes árboles . ¿y la integración de sencillas tareas preventivas en la vida diaria? más vale prevenir que curar . el código limpio honra las raíces de la sabiduría popular, de antes o de ahora, y se puede aplicar con atención al detalle. 11