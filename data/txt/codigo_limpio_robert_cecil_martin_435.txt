MessageUtils.java. package common; import java.io.IOException; import java.io.InputStream; import java.io.ObjectInputStream; import java.io.ObjectOutputStream; import java.io.OutputStream; import java.net.Socket; public class MessageUtils { public static void sendMessage(Socket socket, String message) throws IOException { OutputStream stream = socket.getOutputStream(); ObjectOutputStream oos = new ObjectOutputStream(stream); oos.writeUTF(message); oos.flush(); } public static String getMessage(Socket socket) throws IOException { InputStream stream = socket.getInputStream(); ObjectInputStream ois = new ObjectInputStream(stream); return ois.readUTF(); } } Cliente/Servidor con subprocesos Para cambiar el servidor para que use subprocesos basta con cambiar el mensaje  process  (las nuevas líneas se muestran en negrita para destacarlas): void process(final Socket socket) { if (socket == null) return; Runnable clientHandler = new Runnable() { public void run() { try { System.out.printf(“Server: getting message\n”); String message = MessageUtils.getMessage(socket); System.out.printf(“Server: got message: %s\n”, message); Thread.sleep(1000); System.out.printf(“Server: sending reply: %s\n”, message); MessageUtils.sendMessage(socket, “Processed: ” + message); System.out.printf(“Server: sent\n”); closeIgnoringException(socket); } catch (Exception e) { e.printStackTrace(); } } 436