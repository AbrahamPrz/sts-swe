messageutils.java. package common; import java.io.ioexception; import java.io.inputstream; import java.io.objectinputstream; import java.io.objectoutputstream; import java.io.outputstream; import java.net.socket; public class messageutils { public static void sendmessage(socket socket, string message) throws ioexception { outputstream stream = socket.getoutputstream(); objectoutputstream oos = new objectoutputstream(stream); oos.writeutf(message); oos.flush(); } public static string getmessage(socket socket) throws ioexception { inputstream stream = socket.getinputstream(); objectinputstream ois = new objectinputstream(stream); return ois.readutf(); } } cliente/servidor con subprocesos para cambiar el servidor para que use subprocesos basta con cambiar el mensaje process (las nuevas líneas se muestran en negrita para destacarlas): void process(final socket socket) { if (socket == null) return; runnable clienthandler = new runnable() { public void run() { try { system.out.printf(“server: getting message\n”); string message = messageutils.getmessage(socket); system.out.printf(“server: got message: %s\n”, message); thread.sleep(1000); system.out.printf(“server: sending reply: %s\n”, message); messageutils.sendmessage(socket, “processed: ” + message); system.out.printf(“server: sent\n”); closeignoringexception(socket); } catch (exception e) { e.printstacktrace(); } } 436