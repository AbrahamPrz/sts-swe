247 assertequals(2, leapyearcount(1908)); 248 assertequals(24, leapyearcount(1999)); 249 assertequals(25, leapyearcount(2001)); 250 assertequals(49, leapyearcount(2101)); 251 assertequals(73, leapyearcount(2201)); 252 assertequals(97, leapyearcount(2301)); 253 assertequals(122, leapyearcount(2401)); 254 } 255 256 public void testlastdayofmonth() throws exception { 257 assertequals(31, lastdayofmonth(january, 1901)); 258 assertequals(28, lastdayofmonth(february, 1901)); 259 assertequals(31, lastdayofmonth(march, 1901)); 260 assertequals(30, lastdayofmonth(april, 1901)); 261 assertequals(31, lastdayofmonth(may, 1901)); 262 assertequals(30, lastdayofmonth(june, 1901)); 263 assertequals(31, lastdayofmonth(july, 1901)); 264 assertequals(31, lastdayofmonth(august, 1901)); 265 assertequals(30, lastdayofmonth(september, 1901)); 266 assertequals(31, lastdayofmonth(october, 1901)); 267 assertequals(30, lastdayofmonth(november, 1901)); 268 assertequals(31, lastdayofmonth(december, 1901)); 269 assertequals(29, lastdayofmonth(february, 1904)); 270 } 271 272 public void testadddays() throws exception { 273 serialdate newyears = d(1, january, 1900); 274 assertequals(d(2, january, 1900), adddays(1, newyears)); 275 assertequals(d(1, february, 1900), adddays(31, newyears)); 276 assertequals(d(1, january, 1901), adddays(365, newyears)); 277 assertequals(d(31, december, 1904), adddays(5 * 365, newyears)); 278 } 279 280 private static spreadsheetdate d(int day, int month, int year) { return new spreadsheetdate(day, month, year); } 281 282 public void testaddmonths() throws exception { 283 assertequals(d(1, february, 1900), addmonths(1, d(1, january, 1900))); 284 assertequals(d(28, february, 1900), addmonths(1, d(31, january, 1900))); 285 assertequals(d(28, february, 1900), addmonths(1, d(30, january, 1900))); 286 assertequals(d(28, february, 1900), addmonths(1, d(29, january, 1900))); 287 assertequals(d(28, february, 1900), addmonths(1, d(28, january, 478