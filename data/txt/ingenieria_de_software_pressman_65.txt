34 PARTE UNO  EL PROCESO DEL SOFTWARE El modelo de la cascada, a veces llamado ciclo de vida clásico, sugiere un enfoque sistemático  y secuencial6 para el desarrollo del software, que comienza con la especificación de los reque- rimientos por parte del cliente y avanza a través de planeación, modelado, construcción y des- pliegue, para concluir con el apoyo del software terminado (véase la figura 2.3). Una variante de la representación del modelo de la cascada se denomina modelo en V. En la  figura 2.4 se ilustra el modelo en V [Buc99], donde se aprecia la relación entre las acciones para el aseguramiento de la calidad y aquellas asociadas con la comunicación, modelado y construc-ción temprana. A medida que el equipo de software avanza hacia abajo desde el lado izquierdo de la V, los requerimientos básicos del problema mejoran hacia representaciones técnicas cada vez más detalladas del problema y de su solución. Una vez que se ha generado el código, el equipo sube por el lado derecho de la V, y en esencia ejecuta una serie de pruebas (acciones para asegurar la calidad) que validan cada uno de los modelos creados cuando el equipo fue hacia abajo por el lado izquierdo. 7 En realidad, no hay diferencias fundamentales entre el ciclo de vida  clásico y el modelo en V. Este último proporciona una forma de visualizar el modo de aplicación de las acciones de verificación y validación al trabajo de ingeniería inicial. El modelo de la cascada es el paradigma más antiguo de la ingeniería de software. Sin em- bargo, en las últimas tres décadas, las críticas hechas al modelo han ocasionado que incluso sus defensores más obstinados cuestionen su eficacia [Han95]. Entre los problemas que en ocasio-nes surgen al aplicar el modelo de la cascada se encuentran los siguientes:  1. Es raro que los proyectos reales sigan el flujo secuencial propuesto por el modelo. Aun-que el modelo lineal acepta repeticiones, lo hace en forma indirecta. Como resultado, los cambios generan confusión conforme el equipo del proyecto avanza.  2. A menudo, es difícil para el cliente enunciar en forma explícita todos los requerimien-tos. El modelo de la cascada necesita que se haga y tiene dificultades para aceptar la in-certidumbre natural que existe al principio de muchos proyectos.  3. El cliente debe tener paciencia. No se dispondrá de una versión funcional del(de los) programa(s) hasta que el proyecto esté muy avanzado. Un error grande sería desastroso si se detectara hasta revisar el programa en funcionamiento. En un análisis interesante de proyectos reales, Bradac [Bra94] encontró que la naturaleza  lineal del ciclo de vida clásico llega a “estados de bloqueo” en los que ciertos miembros del equipo de proyecto deben esperar a otros a fin de terminar tareas interdependientes. En reali-dad, ¡el tiempo de espera llega a superar al dedicado al trabajo productivo! Los estados de bloqueo tienden a ocurrir más al principio y al final de un proceso secuencial lineal. Hoy en día, el trabajo de software es acelerado y está sujeto a una corriente sin fin de cambios  (en las características, funciones y contenido de información). El modelo de la cascada suele ser Comunicación  inicio del proyecto  recabar los requerimientosPlaneación  estimación programación seguimientoModelado  análisis diseño Despliegue  entrega asistencia retroalimentaciónConstrucción  código pruebasFIGURA 2.3 Modelo de la cascada 6 Aunque el modelo de la cascada propuesto originalmente por Winston Royce [Roy70] prevé los “bucles de retroa- limentación”, la gran mayoría de organizaciones que aplican este modelo de proceso lo tratan como si fuera  estrictamente lineal. 7 En la parte 3 del libro se estudian con detalle las acciones de aseguramiento de la calidad.PUNTO CLAVE El modelo en V ilustra la forma en la  que se asocian las acciones de verificación y validación con las primeras acciones de ingeniería. ¿Por qué a veces falla el modelo de la cascada? ? Cita: “Con demasiada frecuencia, el trabajo de software sigue la pri-mera ley del ciclismo: no importa hacia dónde te dirijas, vas hacia arriba y contra el viento.” Anónimo 02Pressman(025-054).indd   3402Pressman(025-054).indd   34 14/1/10   13:36:4714/1/10   13:36:47