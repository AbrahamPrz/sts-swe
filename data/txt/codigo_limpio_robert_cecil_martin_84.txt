private void includesuitesetuppage() throws exception { include(suiteresponder.suite_setup_name, “-setup”); } private void includesetuppage() throws exception { include(“setup”, “-setup”); } private void includepagecontent() throws exception { newpagecontent.append(pagedata.getcontent()); } private void includeteardownpages() throws exception { includeteardownpage(); if (issuite) includesuiteteardownpage(); } private void includeteardownpage() throws exception { include(“teardown”, “-teardown”); } private void includesuiteteardownpage() throws exception { include(suiteresponder.suite_teardown_name, “-teardown”); } private void updatepagecontent() throws exception { pagedata.setcontent(newpagecontent.tostring()); } private void include(string pagename, string arg) throws exception ( wikipage inheritedpage = findinheritedpage(pagename); if (inheritedpage != null) { string pagepathname = getpathnameforpage(inheritedpage); buildincludedirective(pagepathname, arg); } } private wikipage findinheritedpage(string pagename) throws exception { return pagecrawlerimpl.getinheritedpage(pagename, testpage); } private string getpathnameforpage(wikipage page) throws exception { wikipagepath pagepath = pagecrawler.getfullpath(page); return pathparser.render(pagepath); } private void buildincludedirective(string pagepathname, string arg) { newpagecontent .append(“\n!include ”) .append(arg) .append(“ .”) .append(pagepathname) .append(“\n”); } 85