460 parte tres administración de la calidad consultas pasan a una capa de gestión de datos4 que se comunica con las rutinas de acceso a la base de datos (potencialmente ubicadas en otra máquina). las capas de transformación de datos, de gestión de datos y de acceso a base de datos que se muestran en la figura 20.2, con frecuencia se construyen con componentes reutilizables que se validaron por separado y como paquete. si éste es el caso, la prueba de webapps se en- foca en el diseño de casos de prueba para ejercitar las interacciones entre la capa cliente y las primeras dos capas servidor (webapp y transformación de datos) que se muestran en la figura. la capa de interfaz de usuario se prueba para garantizar que los guiones se construyeron de manera adecuada para cada consulta de usuario y que transmiten adecuadamente al lado ser-vidor. la capa webapp en el lado servidor se prueba para asegurar que los datos de usuario se extraen de manera adecuada de los guiones y que se transmite adecuadamente a la capa de transformación de datos en el lado servidor. las funciones de transformación de datos se prueban para asegurar que se creó el sql correcto y que pasó a componentes de gestión de datos adecuados. un análisis detallado de la tecnología subyacente que debe comprenderse para diseñar ade- cuadamente estas pruebas de base de datos está más allá del ámbito de este libro. si usted tiene interés adicional, vea [sce02], [ngu01] y [bro01]. 20.4 p rueba de interfaz de usuario la verificación y validación de una interfaz de usuario de webapp ocurre en tres puntos distintos. durante el análisis de requerimientos, el modelo de interfaz se revisa para garantizar que se da conformidad a los requerimientos de los participantes y a otros elementos del modelo de reque-rimientos. durante el diseño, se revisa el modelo de diseño de interfaz para garantizar que se logran los criterios de calidad genéricos establecidos para todas las interfaces de usuario (capí-tulo 11) y que los temas de diseño de interfaz específicos de la aplicación se abordaron de ma-nera adecuada. durante la prueba, la atención se centra en la ejecución de aspectos específicos de la aplicación de la interacción con el usuario, conforme se manifiesten por la sintaxis y la semántica de la interfaz. además, la prueba proporciona una valoración final de la usabilidad. 20.4.1 estrategia de prueba de interfaz la prueba de interfaz ejercita los mecanismos de interacción y valida los aspectos estéticos de la interfaz de usuario. la estrategia global para la prueba de interfaz es 1) descubrir errores rela-cionados con mecanismos de interfaz específicos (por ejemplo, en la ejecución adecuada de un vínculo de menú o en la forma como entran los datos en un formulario) y 2) descubrir errores en la forma como la interfaz implanta la semántica de navegación, la funcionalidad de la webapp o el despliegue de contenido. para lograr esta estrategia, se inician algunos pasos tácticos: • las características de la interfaz se prueban para garantizar que las reglas del diseño, estética y contenido visual relacionado estén disponibles sin error para el usuario. las carac- terísticas incluyen tipo de fuente, uso de color, marcos, imágenes, bordes, tablas y carac-terísticas de interfaz relacionadas que se generan conforme avanza la ejecución de la webapp. • los mecanismos de interfaz individuales se prueban en forma análoga a la prueba de unidad. por ejemplo, las pruebas se diseñan para ejercitar todas las formas, guiones del lado cliente, html dinámicos, guiones, contenido de streaming (transmisión continua) y 4 la capa de gestión de datos por lo general incorpora una interfaz sql en el nivel de llamado (sql-cli), como microsoft ole/ado o java database connectivity (jdbc).cita: “... es improbable que uno tenga confianza en un sitio web que sufre de constantes perio-dos de inactividad, que se pasma en medio de una tran-sacción o que tiene una pobre sensación de funcionalidad. por tanto, las pruebas tienen un papel vital en el proceso de desarrollo global.” wing lam con excepción de especificaciones orientadas a webapp, la estrategia de interfaz que se anota aquí es aplicable a todo tipo de software cliente-servidor.consejo 20pressman(453-477).indd  46020pressman(453-477).indd  460 21/1/10  10:58:0821/1/10  10:58:08