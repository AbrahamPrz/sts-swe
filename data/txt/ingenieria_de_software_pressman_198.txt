capítulo 7 modelado de los requerimientos 167 en los párrafos que siguen se analizan dos representaciones distintas del comportamiento. la primera indica la manera en la que una clase individual cambia su estado con base en even- tos externos, y la segunda muestra el comportamiento del software como una función del tiempo. diagramas de estado para clases de análisis. un componente de modelo de comporta- miento es un diagrama de estado uml 9 que representa estados activos para cada clase y los eventos (disparadores) que causan cambios en dichos estados activos. la figura 7.6 ilustra un diagrama de estado para el objeto paneldecontrol en la función de seguridad de casasegura. cada flecha que aparece en la figura 7.6 representa una transición de un estado activo de un objeto a otro. las leyendas en cada flecha representan el evento que dispara la transición. aun-que el modelo de estado activo da una perspectiva útil de la “historia de la vida” de un objeto, es posible especificar información adicional para llegar a más profundidad en la comprensión del comportamiento de un objeto. además de especificar el evento que hace que la transi-ción ocurra, puede especificarse una guardia y una acción [cha93]. una guardia es una con- dición booleana que debe satisfacerse para que tenga lugar una transición. por ejemplo, la guardia para la transición del estado de “lectura” al de “comparación” en la figura 7.6 se deter-mina con el análisis del caso de uso: si (password de entrada = 4 dígitos) entonces comparar con el password guardado en general, la guardia para una transición depende del valor de uno o más atributos de un ob-jeto. en otras palabras, depende del estado pasivo del objeto. una acción sucede en forma concurrente con la transición de estado o como consecuencia de ella, y por lo general involucra una o más operaciones (responsabilidades) del objeto. por 9 si el lector no está familiarizado con uml, puede consultar en el apéndice 1 una breve introducción a esta im- portante notación de modelación.lecturabloqueado selecciónpassword introducidocomparaciónpassword = incorrecto y númerodeintentos < máximodeintentos password = correcto activación exitosaoprimir tecla hacer: validarpasswordnúmerodeintentos > máximodeintentoscronómetro ≤ tiempobloqueado cronómetro > tiempobloqueadofigura 7.6 diagrama de estadopara la clase paneldecontrol 07pressman(158-182).indd  16707pressman(158-182).indd  167 14/1/10  14:19:3914/1/10  14:19:39