capítulo 3 desarrollo ágil 73 donde <objeto> es “una persona, lugar o cosa (incluso roles, momentos del tiempo o intervalos temporales, o descripciones parecidas a las entradas de un catálogo)”. algunos ejemplos de características para una aplicación de comercio electrónico son los siguientes: agregar el producto al carrito de compras mostrar las especificaciones técnicas del productoguardar la información de envío para el cliente un conjunto de características agrupa las que son similares en categorías relacionadas con el negocio y se define así: <acción><ndo> un <objeto> por ejemplo: haciendo una venta del producto es un conjunto de características que agruparía las que ya se mencionaron y otras más. el enfoque dic define cinco actividades estructurales “colaborativas” [coa99] (en el enfoque dic se llaman “procesos”), como se muestra en la figura 3.5. el dic pone más énfasis que otros métodos ágiles en los lineamientos y técnicas para la ad- ministración de proyectos. a medida que éstos aumentan su tamaño y complejidad, no es raro que la administración de proyectos ad hoc sea inadecuada. para los desarrolladores, sus geren- tes y otros participantes, es esencial entender el estado del proyecto, es decir, los avances rea-lizados y los problemas que han surgido. si la presión por cumplir el plazo de entrega es mucha, tiene importancia crítica determinar si la entrega de los incrementos del software está progra-mada en forma adecuada. para lograr esto, el dic define seis puntos de referencia durante el diseño e implementación de una característica: “recorrido por el diseño, diseño, inspección del diseño, código, inspección del código, decisión de construir” [coa99]. 3.5.6 desarrollo esbelto de software (des) el desarrollo esbelto de software (des) adapta los principios de la manufactura esbelta al mundo de la ingeniería de software. los principios de esbeltez que inspiran al proceso des se resumen como sigue ([pop03], [pop06a]): eliminar el desperdicio, generar calidad, crear conocimiento, apla-zar el compromiso, entregar rápido, respetar a las personas y optimizar al todo. es posible adaptar cada uno de estos principios al proceso del software. por ejemplo, eliminar el desperdicio en el contexto de un proyecto de software ágil significa [das05]: 1) no agregar características o funciones extrañas, 2) evaluar el costo y el efecto que tendrá en la programa-ción de actividades cualquier nuevo requerimiento solicitado, 3) eliminar cualesquiera etapas superfluas del proceso, 4) establecer mecanismos para mejorar la forma en la que los miembros desarrollar un modelo generalelaborar una lista de carac- terísticasplan según carac- terísticasdiseño según carac- terísticasconstruir según carac- terísticas (más forma que contenido)lista de caracte-rísticas agrupadasen conjuntosy áreas temáticasplan de desarrollopropietarios de clasepropietariosde conjuntos decaracterísticaspaquetede diseño(secuencias)función terminadacon valor parael clientefigura 3.5 desarrollo impulsado por las características [coa99] (con permiso) 03pressman(055-080).indd  7303pressman(055-080).indd  73 14/1/10  13:41:1314/1/10  13:41:13