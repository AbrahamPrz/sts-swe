Organización de clases De acuerdo a la convención estándar de Java, una clase debe comenzar con una lista de variables. Las constantes estáticas públicas, si existen, deben aparecer primero. Tras ello, las variables estáticas privadas y después las variables de instancia privadas. No suele ser necesario usar variables públicas. Las funciones públicas deben seguir a la lista de variables. Incluimos las utilidades públicas invocadas por una función pública tras la propia función pública. Este sistema cumple la regla descendente y permite que el programa se lea como un artículo de periódico. Encapsulación Queremos que nuestras variables y funciones de utilidad sean privadas, pero no es imprescindible. En ocasiones podemos proteger una variable o función de utilidad para que sea accesible para una prueba. Las reglas mandan. Si una regla del mismo paquete tiene que invocar una función o acceder a una variable, hacemos que tenga ámbito  protected  o de paquete. Sin embargo, primero veremos una forma de mantener la privacidad. La relajación de la encapsulación siempre es un último resorte. Las clases deben ser de tamaño reducido La primera regla de las clases es que deben ser de tamaño reducido. La segunda regla es que deben ser todavía más reducidas. No, no vamos a repetir el mismo texto en el capítulo sobre las funciones, pero como sucede con las funciones, el tamaño reducido es lo principal a la hora de diseñar una clase. Y la pregunta inmediata es qué nivel de reducción. Con las funciones medimos el tamaño contando líneas físicas. Con las clases usamos otra medida distinta: las responsabilidades [45] . El Listado 10-1 muestra una clase,  SuperDashboard , que muestra 70 186