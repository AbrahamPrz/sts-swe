430 parte tres administración de la calidad adaptarse a situaciones especializadas, vale la pena considerar individualmente sus necesida- des únicas. 18.8.1 pruebas de interfaces gráficas de usuario las interfaces gráficas para usuario (gui, por sus siglas en inglés) presentan interesantes re-tos de prueba. puesto que los componentes reutilizables ahora son parte común en los entornos de desarrollo gui, la creación de la interfaz para el usuario se ha vuelto menos consumidora de tiempo y más precisa (capítulo 11). pero, al mismo tiempo, la complejidad de las gui ha crecido, lo que conduce a más dificultad en el diseño y ejecución de los casos de prueba. debido a que muchas gui modernas tienen la misma apariencia y ambiente, puede derivarse una serie de pruebas estándar. es posible usar las gráficas de modelado de estado finito para derivar una serie de pruebas que aborden objetos de datos y programa específicos que sean relevantes para la gui. esta técnica de prueba basada en modelo se estudió en la sección 18.7. como producto del gran número de permutaciones asociadas con las operaciones de la gui, la prueba de gui debe abordarse usando herramientas automatizadas. durante los últimos años apareció una amplia gama de herramientas de prueba gui. 8 18.8.2 prueba de arquitecturas cliente-servidor la naturaleza distribuida de los entornos cliente-servidor, los conflictos de rendimiento asocia-dos con el procesamiento de transacciones, la potencial presencia de algunas plataformas de hardware diferentes, las complejidades de la comunicación en red, la necesidad de atender a múltiples clientes desde una base de datos centralizada (o en algunos casos, distribuida) y los requerimientos de coordinación impuestos al servidor se combinan para realizar las pruebas de las arquitecturas cliente-servidor y el software que reside dentro de ellas es considerablemente más difícil que las aplicaciones independientes. de hecho, estudios industriales recientes indi-can un aumento significativo en el tiempo y costo de las pruebas cuando se desarrollan los entornos cliente-servidor. en general, la prueba del software cliente-servidor ocurre en tres niveles diferentes: 1) las aplicaciones cliente individuales se prueban en un modo “desconectado”; no se considera la operación del servidor ni la red subyacente. 2) el software cliente y las aplicaciones servidor asociadas se prueban en concierto, pero las operaciones de red no se revisan de manera explí-cita. 3) se prueba la arquitectura cliente-servidor completa, incluidos la operación de red y el rendimiento. aunque en cada uno de estos niveles de detalle se realizan muchos tipos de pruebas diferen- tes, para las aplicaciones cliente-servidor se encuentran comúnmente los siguientes abordajes de prueba: • pruebas de función de aplicación. la funcionalidad de las aplicaciones cliente se prueba usando los métodos analizados anteriormente en este capítulo y en los capítulos 19 y 20. en esencia, la aplicación se prueba en forma independiente con la intención de descubrir errores en su operación. • pruebas de servidor. se prueban las funciones de coordinación y gestión de datos del servidor. también se considera el rendimiento del servidor (tiempo de respuesta global y cantidad de datos transmitidos). • pruebas de base de datos. se prueban la precisión y la integridad de los datos alma-cenados por el servidor. se examinan las transacciones colocadas por las aplicaciones 8 cientos, si no miles, de recursos acerca de herramientas de prueba gui pueden evaluarse en la web. un buen punto de partida para herramientas de fuente abierta es www.opensourcetesting.org/functional.php.cita: “el tema de las pruebas es un área en la que existe una buena cantidad de comunión entre los sistemas tradicionales y los sis-temas cliente-servidor.” kelley bourne webref en www.csst-technologies.com pueden encontrarse información y recursos útiles para pruebas cliente-servidor. ¿qué tipos de pruebas se llevan a cabo para los sistemas cliente-servidor?? 18pressman(411-436).indd  43018pressman(411-436).indd  430 21/1/10  10:59:0021/1/10  10:59:00