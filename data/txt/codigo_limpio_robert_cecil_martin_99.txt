* 12-Nov- 2001 : IBD requiere el método setDescription(), una vez eliminada la clase NotableDate * (DG); se cambian getPreviousDayOfWeek(), getFollowingDayOfWeek() * y getNearestDayOfWeek() para corregir errores (DG); * 05-Dic- 2001 : Error corregido en la clase SpreadsheetDate (DG); * 29-May- 2002 : Se transfieren todas las constantes de mes a una interfaz * independiente (MonthConstants) (DG); * 27-Ago- 2002 : Error corregido en el método addMonths(), gracias a Nálevka Petr (DG); * 03-Oct- 2002 : Errores indicados por Checkstyle (DG) corregidos; * 13-Mar- 2003 : Implementación de Serializable (DG); * 29-May- 2003 : Error corregido en el método addMonths (DG); * 04-Sep- 2003 : Implementación de Comparable. Actualización de los javadoc isInRange (DG); * 05-Ene- 2005 : Error corregido en el método addYears() (1096202) (DG); Hace tiempo hubo una buena razón para crear y mantener estas entradas de registro al inicio de cada módulo. Carecíamos de sistemas de control de código fuente que se encargaran de ello, pero en la actualidad, estas entradas son elementos sobrantes que complican los módulos. Debe eliminarlas totalmente. Comentarios sobrantes En ocasiones vemos comentarios que simplemente sobran. Restan importancia a lo evidente y no ofrecen información nueva. /** * Constructor predeterminado. */ protected AnnualDateRule() { } ¿En serio? ¿Y este otro?: /** Día del mes. */ private int dayOfMonth; Y aquí el parangón de la redundancia: /** * Devuelve el día del mes. 100