} catch (ArgsException e) { valid = false; errorArgumentId = argChar; throw e; } return true; } Las pruebas siguen siendo satisfactorias y la función  set  se implementa en Boolean  ArgumentMarshaler . Podemos repetir la operación con las cadenas y los enteros. private boolean setArgument(char argChar) throws ArgsException { ArgumentMarshaler m = marshalers.get(argChar); if (m == null) return false; try { if (m instanceof BooleanArgumentMarshaler) m.set(currentArgument); else if (m instanceof StringArgumentMarshaler) m.set(currentArgument); else if (m instanceof IntegerArgumentMarshaler) m.set(currentArgument); } catch (ArgsException e) { valid = false; errorArgumentId = argChar; throw e; } return true; } --- private class StringArgumentMarshaler extends ArgumentMarshaler { private String stringValue = “”; public void set(Iterator<String> currentArgument) throws ArgsException { try { stringValue = currentArgument.next(); } catch (NoSuchElementException e) { errorCode = ErrorCode.MISSING_STRING; throw new ArgsException(); } } public void set(String s){ } public Object get() { return stringValue; } } private class IntegerArgumentMarshaler extends ArgumentMarshaler { 302