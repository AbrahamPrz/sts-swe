capítulo 16 ■ reutilización de software 427 programa. cuando se reutilizan conceptos, el proceso de reutilización incluye una activi- dad donde los conceptos abstractos se ejemplifican para crear componentes ejecutables de reutilización. una ventaja evidente de la reutilización de software es que deberían reducirse los costos totales de desarrollo. habrá que especificar, diseñar, implementar y validar menos componentes de software. sin embargo, la reducción del costo es sólo una ventaja de la reutilización. en la figura 16.1 se mencionan otras ventajas de la reutilización de los activos de software. no obstante, existen costos y problemas asociados con la reutilización (figura 16.2). hay un costo significativo asociado con entender si un componente es adecuado o no para su reutilización en una situación particular, y probar dicho componente para garanti-zar su confiabilidad. tales costos adicionales significan que las reducciones en los costos totales del desarrollo mediante la reutilización pueden ser menores que lo previsto. como se estudió en el capítulo 2, los procesos de desarrollo de software deben adap-tarse para tomar en cuenta la reutilización. en particular, debe haber una etapa de correc-ción de requerimientos en la que se modifiquen los requerimientos del sistema para reflejar el software de reutilización disponible. las etapas de diseño e implementación del sistema pueden incluir también actividades explícitas para buscar y evaluar compo-nentes candidatos para su reutilización. la reutilización de software es más efectiva cuando se planea como parte de un pro-grama de reutilización de toda la organización. un programa de reutilización implica la creación de activos reutilizables y la adaptación de procesos de desarrollo para incorporar dichos activos en el software nuevo. la importancia de la planeación de reutilización se reconoce desde hace varios años en japón (matsumoto, 1984), donde la reutilización era parte integral del enfoque “fabril” japonés al desarrollo de software (cusamano, 1989). beneficio explicación confiabilidad creciente el software de reutilización, que se experimentó y ensayó en sistemas operativos, debe ser más confiable que el software nuevo. sus fallas de diseño e implementación debieron descubrirse y corregirse. reducción de riesgo de procesose conoce ya el costo del software existente, mientras que el de desarrollo siempre es una cuestión de juicio. éste es un factor importante para la gestión del proyecto, ya que reduce el margen de error en la estimación de costos del proyecto. esto es particularmente cierto cuando se reutilizan componentes de software relativamente grandes, como los subsistemas. uso efectivo de especialistas en lugar de hacer el mismo trabajo una y otra vez, los especialistas de aplicación pueden desarrollar software de reutilización que encapsule su conocimiento. cumplimiento de estándares algunos estándares, como los de la interfaz de usuario, pueden implementarse como un conjunto de componentes de reutilización. por ejemplo, si los menús en una interfaz de usuario se implementan con componentes reutilizables, todas las aplicaciones presentan a los usuarios los mismos formatos de menú. el uso de interfaces de usuario estándar mejora la confiabilidad, porque los usuarios cometen menos errores cuando se les presenta una interfaz familiar. desarrollo acelerado llevar un sistema al mercado tan rápido como sea posible con frecuencia es más importante que los costos totales de desarrollo. la reutilización de software puede acelerar la producción del sistema, ya que pueden reducirse los tiempos de desarrollo y validación. figura 16.1 beneficios de la reutilización de software m16_sommerville_ingenieria_1ed_se_423-451.indd  427m16_sommerville_ingenieria_1ed_se_423-451.indd  427 3/18/11  5:02:12 pm3/18/11  5:02:12 pm