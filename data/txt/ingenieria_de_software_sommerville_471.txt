454  Capítulo 17 ■ Ingeniería de software basada en componentes requerimientos, dependiendo de la funcionalidad de los componentes disponibles.  En la sección 17.2 se estudian los procesos de desarrollo CBSE.  El desarrollo basado en componentes implica una buena práctica de ingeniería de soft-ware. Tiene sentido diseñar un sistema mediante componentes, incluso si usted debe desa-rrollarlos en vez de reutilizarlos. En la base de la CBSE existen firmes principios de diseño que apoyan la construcción de software comprensible y mantenible: 1. Los componentes son independientes, de manera que sus ejecuciones no interfieren  entre sí. Se ocultan los detalles de la implementación. La implementación de com-ponentes puede cambiar sin afectar al resto del sistema. 2. Los componentes se comunican a través de interfaces bien definidas. Si dichas inter-faces se mantienen, es posible sustituir un componente por otro, lo que ofrece fun-cionalidad adicional o mayor. 3. Las infraestructuras de componentes ofrecen varios servicios estándar que pueden usarse en sistemas de aplicación. Esto reduce la cantidad de código nuevo que debe desarrollarse.  La motivación inicial para la CBSE fue la necesidad de brindar apoyo tanto a la inge-niería de software de reutilización como a la distribuida. Un componente se considera como un elemento de un sistema de software al que se podría acceder, mediante un meca-nismo llamado procedimiento remoto, por parte de otros componentes que se ejecutan en computadoras independientes. Cada sistema que reutiliza un componente debe incorporar su propia copia de dicho componente. Esta idea de componente se extiende a la noción de objetos distribuidos, como se define en modelos de sistemas distribuidos, tales como la especificación CORBA (Pope, 1997). Para apoyar esta visión de componente, se han desarrollado muchos y diferentes protocolos y estándares, como el Enterprise Java Beans (EJB) de Sun, COM y .NET de Microsoft, y CCM de CORBA (Lau y Wang, 2007). En la práctica, estos estándares múltiples obstaculizan la aceptación de CBSE. Era imposible que componentes desarrollados mediante diferentes enfoques funcionaran jun-tos. Los componentes diseñados para distintas plataformas, tales como .NET o J2EE, no pueden interoperar. Más aún, los estándares y protocolos propuestos se consideraban complejos y difíciles de entender. Esto también se presentaba como una barrera para su adopción. En respuesta a tales problemas, se desarrolló la noción de componente como un servi-cio, y se propusieron estándares para apoyar la ingeniería de software orientada a servicios. Problemas con CBSE La CBSE es ahora un enfoque de mantenimiento a la ingeniería de software: es una buena forma de construir  sistemas. Sin embargo, cuando se usa como enfoque para la reutilización, los problemas se relacionan con la fiabilidad y certificación de los componentes, los compromisos de requerimientos y la predicción de las propiedades de los componentes, en especial al integrarse con otros. http://www.SoftwareEngineering-9.com/Web/CBSE/problems.html M17_SOMMERVILLE_INGENIERIA_1ED_SE_452-478.indd   454M17_SOMMERVILLE_INGENIERIA_1ED_SE_452-478.indd   454 3/18/11   5:03:04 PM3/18/11   5:03:04 PM