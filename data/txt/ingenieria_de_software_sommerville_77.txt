60  Capítulo 3 ■ Desarrollo ágil de software  Como se analiza en la sección final de este capítulo, el éxito de los métodos ágiles se  debe al interés considerable por usar dichos métodos para otros tipos de desarrollo del software. No obstante, dado su enfoque en equipos reducidos firmemente integrados, hay problemas en escalarlos hacia grandes sistemas. También se ha experimentado en el uso de enfoques ágiles para la ingeniería de sistemas críticos (Drobna et al., 2004). Sin embargo, a causa de las necesidades de seguridad, protección y análisis de confiabilidad en los sistemas críticos, los métodos ágiles requieren modificaciones significativas antes de usarse cotidianamente con la ingeniería de sistemas críticos. En la práctica, los principios que subyacen a los métodos ágiles son a veces difíciles de cumplir: 1. Aunque es atractiva la idea del involucramiento del cliente en el proceso de desarro- llo, su éxito radica en tener un cliente que desee y pueda pasar tiempo con el equipo  de desarrollo, y éste represente a todos los participantes del sistema. Los represen-tantes del cliente están comúnmente sujetos a otras presiones, así que no intervienen por completo en el desarrollo del software. 2. Quizás algunos miembros del equipo no cuenten con la personalidad adecuada para  la participación intensa característica de los métodos ágiles y, en consecuencia, no podrán interactuar adecuadamente con los otros integrantes del equipo. 3. Priorizar los cambios sería extremadamente difícil, sobre todo en sistemas donde  existen muchos participantes. Cada uno por lo general ofrece diversas prioridades a diferentes cambios. 4. Mantener la simplicidad requiere trabajo adicional. Bajo la presión de fechas de  entrega, es posible que los miembros del equipo carezcan de tiempo para realizar las simplificaciones deseables al sistema.Figura 3.1 Los  principios de los métodos ágilesPrincipio Descripción Participación del cliente Los clientes deben intervenir estrechamente durante el proceso de desarrollo. Su función consiste en ofrecer y priorizar nuevos requerimientos del sistema y evaluar las iteraciones del mismo. Entrega incremental El software se desarrolla en incrementos y el cliente especifica los requerimientos que se van a incluir en cada incremento. Personas, no procesos Tienen que reconocerse y aprovecharse las habilidades del equipo de desarrollo. Debe permitirse a los miembros del equipo desarrollar sus propias formas de trabajar sin procesos establecidos. Adoptar el cambio Esperar a que cambien los requerimientos del sistema y, de este modo, diseñar el sistema para adaptar dichos cambios. Mantener simplicidad Enfocarse en la simplicidad tanto en el software a desarrollar como en el proceso de desarrollo. Siempre que sea posible, trabajar de manera activa para eliminar la complejidad del sistema. M03_SOMMERVILLE_INGENIERIA_1ED_SE_056-081.indd   60M03_SOMMERVILLE_INGENIERIA_1ED_SE_056-081.indd   60 3/18/11   4:46:24 PM3/18/11   4:46:24 PM