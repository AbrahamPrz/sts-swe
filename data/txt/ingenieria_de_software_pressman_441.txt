410 parte tres administración de la calidad in software testing, wiley, 2001) presentan una colección de más de 300 “lecciones” pragmáticas (lineamien- tos) que todo examinador de software debe aprender. watkins (testing it: an off-the-shelf testing process , cambridge university press, 2001) establece un marco conceptual de prueba efectivo para todo tipo de soft-ware desarrollado o adquirido. manges y o’brien ( agile testing with ruby and rails, apress, 2008) abordan estrategias y técnicas de prueba para el lenguaje de programación ruby y el marco conceptual web. sykes y mcgregor (practical guide to testing object-oriented software, addison-wesley, 2001), bashir y goel (testing object-oriented software, springer-verlag, 2000), binder ( testing object-oriented systems, addi- son-wesley, 1999), kung et. al. (testing object- oriented software, ieee computer society press, 1998) y marick (the craft of software testing, prentice-hall, 1997) presentan estrategias y métodos para probar siste- mas oo. lineamientos para depuración se encuentran en los libros de grötker et al. (the developer’s guide to de- bugging, springer, 2008), agans (debugging, amacon, 2006), zeller (why programs fail: a guide to systematic debugging, morgan kaufmann, 2005), tells y hsieh ( the science of debugging, the coreolis group, 2001), y robbins (debugging applications, microsoft press, 2000). kaspersky (hacker debugging uncovered, a-list publishing, 2005) addresses the technology of debugging tools. younessi ( object-oriented defect management of software, prentice-hall, 2002) aborda la tecnología de las herramientas para depuración. younessi (object- oriented defect management of software, prentice-hall, 2002) presenta técnicas para manejar defectos que se encuentran en sistemas orientados a objetos. beizer [bei84] presenta una interesante “taxonomía de errores” que puede conducir a métodos efectivos para planificación de pruebas. los libros de madisetti y akgul ( debugging embedded systems, springer, 2007), robbins ( debugging mi- crosoft.net 2.0 applications, microsoft press, 2005), best (linux debugging and performance tuning, prentice- hall, 2005), ford y teorey ( practical debugging in c++, prentice-hall, 2002), brown ( debugging perl, mcgraw- hill, 2000) y mitchell ( debugging java, mcgraw-hill, 2000) abordan la naturaleza especial de la depuración para los entornos implicados en sus títulos. una gran variedad de fuentes de información acerca de estrategias para pruebas está disponible en inter- net. una lista actualizada de referencias en la world wide web, que son relevantes para las estrategias de prueba de software, puede encontrarse en el sitio web del libro: www.mhle.com/engcs/compsci/press-man/professional/olc/ser.htm. 17pressman(383-410).indd  41017pressman(383-410).indd  410 21/1/10  10:59:2721/1/10  10:59:27