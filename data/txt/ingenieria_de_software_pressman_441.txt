410 PARTE TRES  ADMINISTRACIÓN DE LA CALIDAD in Software Testing, Wiley, 2001) presentan una colección de más de 300 “lecciones” pragmáticas (lineamien- tos) que todo examinador de software debe aprender. Watkins (Testing IT: An off-the-Shelf Testing Process ,  Cambridge University Press, 2001) establece un marco conceptual de prueba efectivo para todo tipo de soft-ware desarrollado o adquirido. Manges y O’Brien ( Agile Testing with Ruby and Rails, Apress, 2008) abordan  estrategias y técnicas de prueba para el lenguaje de programación Ruby y el marco conceptual web. Sykes y McGregor (Practical Guide to Testing Object-Oriented Software, Addison-Wesley, 2001), Bashir y  Goel (Testing Object-Oriented Software, Springer-Verlag, 2000), Binder ( Testing Object-Oriented Systems, Addi- son-Wesley, 1999), Kung et. al. (Testing Object- Oriented Software, IEEE Computer Society Press, 1998) y Marick  (The Craft of Software Testing, Prentice-Hall, 1997) presentan estrategias y métodos para probar siste- mas OO. Lineamientos para depuración se encuentran en los libros de Grötker et al. (The Developer’s Guide to De- bugging, Springer, 2008), Agans (Debugging, Amacon, 2006), Zeller (Why  Programs Fail: A Guide to Systematic  Debugging, Morgan Kaufmann, 2005), Tells y Hsieh ( The Science of Debugging, The Coreolis Group, 2001), y  Robbins (Debugging Applications,  Microsoft Press, 2000). Kaspersky (Hacker Debugging Uncovered,  A-List  Publishing, 2005)  addresses the technology of debugging tools. Younessi ( Object-Oriented Defect Management  of Software,  Prentice-Hall, 2002) aborda la tecnología de las herramientas para depuración. Younessi (Object- Oriented Defect Management of Software, Prentice-Hall, 2002) presenta técnicas para manejar defectos que se encuentran en sistemas orientados a objetos. Beizer [Bei84] presenta una interesante “taxonomía de errores” que puede conducir a métodos efectivos para planificación de pruebas. Los libros de Madisetti y Akgul ( Debugging Embedded Systems, Springer, 2007), Robbins ( Debugging Mi- crosoft.NET 2.0 Applications, Microsoft Press, 2005), Best (Linux Debugging and Performance Tuning,  Prentice- Hall, 2005), Ford y Teorey ( Practical Debugging in C++,  Prentice-Hall, 2002), Brown ( Debugging Perl, McGraw- Hill, 2000) y Mitchell ( Debugging Java, McGraw-Hill, 2000) abordan la naturaleza especial de la depuración  para los entornos implicados en sus títulos. Una gran variedad de fuentes de información acerca de estrategias para pruebas está disponible en inter- net. Una lista actualizada de referencias en la World Wide Web, que son relevantes para las estrategias de prueba de software, puede encontrarse en el sitio web del libro: www.mhle.com/engcs/compsci/press-man/professional/olc/ser.htm. 17Pressman(383-410).indd   41017Pressman(383-410).indd   410 21/1/10   10:59:2721/1/10   10:59:27