88 89 private int correctlastdayofmonth(int day, month month, int year) { 90 int lastdayofmonth = dateutil.lastdayofmonth(month, year); 91 if (day > lastdayofmonth) 92 day = lastdayofmonth; 93 return day; 94 } 95 96 public daydate getpreviousdayofweek(day targetdayofweek) { 97 int offsettotarget = targetdayofweek.toint() - getdayofweek().toint(); 98 if (offsettotarget >= 0) 99 offsettotarget -= 7; 100 return plusdays(offsettotarget); 101 } 102 103 public daydate getfollowingdayofweek(day targetdayofweek) { 104 int offsettotarget = targetdayofweek.toint() - getdayofweek().toint(); 105 if (offsettotarget <= 0) 106 offsettotarget += 7; 107 return plusdays(offsettotarget); 108 } 109 110 public daydate getnearestdayofweek(day targetdayofweek) { 111 int offsettothisweekstarget = targetdayofweek.toint() - getdayofweek().toint(); 112 int offsettofuturetarget = (offsettothisweekstarget + 7) % 7; 113 int offsettoprevioustarget = offsettofuturetarget - 7; 114 115 if (offsettofuturetarget > 3) 116 return plusdays(offsettoprevioustarget); 117 else 118 return plusdays(offsettofuturetarget); 119 } 120 121 public daydate getendofmonth() { 122 month month = getmonth(); 123 int year = getyear(); 124 int lastday = dateutil.lastdayofmonth(month, year); 125 return daydatefactory.makedate(lastday, month, year); 126 } 127 128 public date todate() { 129 final calendar calendar = calendar.getinstance(); 130 int ordinalmonth = getmonth().toint() - month.january.toint(); 503