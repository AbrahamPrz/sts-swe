private int intvalue = 0; public void set(iterator<string> currentargument) throws argsexception { string parameter = null; try { parameter = currentargument.next(); set(parameter); } catch (nosuchelementexception e) { errorcode = errorcode.missing_integer; throw new argsexception(); } catch (argsexception e) { errorparameter = parameter; errorcode = errorcode.invalid_integer; throw e; } } public void set(string s) throws argsexception { try { intvalue = integer.parseint(s); } catch (numberformatexception e) { throw new argsexception(); } } public object get() { return intvalue; } } y el golpe de gracia: se elimina el caso de tipos. private boolean setargument(char argchar) throws argsexception { argumentmarshaler m = marshalers.get(argchar); if (m == null) return false; try { m.set(currentargument); return true; } catch (argsexception e) { valid = false; errorargumentid = argchar; throw e; } } ya podemos deshacernos de las funciones de integerargumentmarshaler y limpiar el resto. private class integerargumentmarshaler extends argumentmarshaler { private int intvalue = 0 public void set (iterator<string> currentargument) throws argsexception { string parameter = null; try { 303