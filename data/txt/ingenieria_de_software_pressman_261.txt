230 PARTE DOS  MODELADO formación en el lado del flujo de entrada. El centro de transformación del software del subsis- tema vigilar sensores se mapea de modo un poco distinto. Cada conversión de datos o transfor- mación de cálculo de la parte de transformación del diagrama de flujo de datos se mapea en un módulo subordinado al controlador de la transformación. En la figura 9.16 se presenta la arqui-tectura completa de primera iteración. Los componentes así mapeados que se aprecian en la figura 9.16 representan un diseño ini- cial de la arquitectura del software. Aunque los componentes reciben su nombre de manera que se implique la función, para cada uno debe escribirse una narración breve (adaptada de la es-pecificación del proceso desarrollada para la transformación de datos y que se generó durante el modelado de los requerimientos). La narración describe la interfaz del componente, las es-tructuras internas de los datos, un relato de las funciones y el análisis breve de las restricciones y otros rasgos especiales (como los archivos de entrada y salida, características que dependen del hardware, requerimientos especiales de tiempo, etcétera). Paso 7. Refinar la arquitectura de primera iteración con el empleo de heurísticos  de diseño par a mejorar la calidad del software.  Siempre es posible refinar la arquitectu- ra  de primera iteración, aplicando conceptos de independencia de funciones (véase el capí- tulo 8). Los componentes hacen explosión o implosión para producir un rediseño sensible, la separación de problemas, buena cohesión, acoplamiento mínimo y, lo más importante, una estructura que puede implementarse sin dificultad, probar sin confusión y mantener sin grandes problemas. Los refinamientos son impuestos por el análisis y los métodos de evaluación descritos en la  sección 9.5, así como por consideraciones prácticas y el sentido común. Por ejemplo, hay oca-siones en las que el controlador para el flujo de datos de entrada es totalmente innecesario, cuando se requiere algún procesamiento de las entradas en un componente subordinado al controlador de la transformación, cuando no es posible evitar mucho acoplamiento debido a datos globales o cuando no se logran características estructurales óptimas. El arbitraje final lo constituyen los requerimientos del software acoplados con el criterio humano. El objetivo de los siete pasos anteriores es desarrollar una representación arquitectónica del  software. Es decir, una vez definida la estructura, se evalúa y mejora considerándola como un todo. Las modificaciones que se hacen en este momento exigen poco trabajo adicional, pero tienen un efecto profundo en la calidad del software. Debe hacerse una pausa y considerar la diferencia entre el enfoque de diseño descrito y el  proceso de “escribir programas”. Si el código es la única representación del software, usted y Conserve módulos “trabajadores” en  un nivel bajo de la estructura del programa. Esto llevará a una arquitectura fácil de mantener.CONSEJOControlador de salida de alarma Generar señal de alarmaEstablecer conexión a la red telefónicaFormatear pantalla Generar pulsos a la líneaGenerar pantallaControlador de condiciones de alarma Seleccionar número telefónicoEstablecer condiciones de alarmaEjecutivo de vigilancia de sensores Controlador de sensor de entradas Adquirir información de respuesta Leer sensoresFIGURA 9.16 Estructura de  primera iteración para vigilar sensores Cita: “Hacerlo tan sencillo como sea  posible. Pero no más.” Albert Einstein 09Pressman(206-233).indd   23009Pressman(206-233).indd   230 14/1/10   15:44:4214/1/10   15:44:42