334 capítulo 12 ■ especificación de confiabilidad y seguridad el punto de partida para todos los procesos de desarrollo formal es un modelo de sistema formal, que sirve como una especificación de sistema. para crear este modelo, traduzca los requerimientos de usuario del sistema, que se expresan en lenguaje natural, diagramas y tablas, a un lenguaje matemático que tenga semántica definida formalmente. la especificación formal es una descripción sin ambigüedades de qué debe hacer el sis-tema. al usar métodos manuales o soportados por herramientas, es posible comprobar que el comportamiento de un programa es congruente con la especificación. las especificaciones formales no sólo son importantes para una verificación del diseño e implementación del software, sino también son la forma más precisa de especi-ficar sistemas y, por ende, de reducir el ámbito para las malas interpretaciones. más aún, construir una especificación formal fuerza un análisis detallado de los requerimientos y ésta es una forma efectiva de descubrir problemas de requerimientos. en una especifica-ción en lenguaje natural, los errores pueden ocultarse mediante la imprecisión del léxico. éste no es el caso si el sistema se especifica formalmente. las especificaciones formales se desarrollan con frecuencia como parte de un proce-so de software basado en un plan, en que el sistema se especifica completamente antes de su desarrollo. los requerimientos del sistema y el diseño se definen a detalle, y se analizan y comprueban cuidadosamente antes de comenzar la implementación. si se desarrolla una especificación formal del software, esto viene por lo general después de que se especifi-caron los requerimientos del sistema, pero antes del diseño detallado del sistema. hay un estrecho ciclo de retroalimentación entre la especificación detallada de requerimientos y la especificación formal. la figura 12.12 muestra las etapas de especificación de software y su interfaz con el diseño de software en un proceso de software basado en un plan. como es costoso desarrollar especificaciones formales, es posible decidir limitar el uso de este enfoque a aquellos componentes que son críticos para la operación del sistema. éstos se identifican en el diseño arquitectónico del sistema. hace pocos años se desarrolló el apoyo automatizado para analizar una especificación formal. los comprobadores de modelos (clarke et al., 2000) son herramientas de soft-ware que toman una especificación formal basada en un estado (un modelo de sistema) como una entrada, junto con la especificación de algunas propiedades deseables formal-mente expresadas, tales como “no hay estados inalcanzables”. el programa de compro-bación de modelo analiza exhaustivamente la especificación, y cualquier reporte de que el modelo satisface la propiedad del sistema, o presenta un ejemplo que muestra que no se satisface. la comprobación del modelo se relaciona estrechamente con la noción de análisis estático, y en el capítulo 15 se estudian estos enfoques generales para la verifica-ción del sistema.técnicas de especificación formal las especificaciones formales del sistema se expresan mediante dos enfoques fundamentales, como modelos de las interfaces del sistema (especificaciones algebraicas) o modelos del estado del sistema. se sugiere descargar el capítulo web adicional sobre este tema, donde se muestran ejemplos de ambos enfoques. el capítulo incluye una especificación formal de parte del sistema de la bomba de insulina. http://www.softwareengineering-9.com/web/extrachaps/formalspec.pdf m12_sommerville_ingenieria_1ed_se_309-340.indd  334m12_sommerville_ingenieria_1ed_se_309-340.indd  334 3/18/11  4:55:11 pm3/18/11  4:55:11 pm