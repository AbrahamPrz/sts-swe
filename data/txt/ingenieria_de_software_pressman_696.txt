CAPÍTULO 29  MANTENIMIENTO Y REINGENIERÍA 665 El proceso de ingeniería inversa se representa en la figura 29.3. Antes de poder comenzar las  actividades de ingeniería inversa, el código fuente no estructurado (“sucio”) se reestructura  (sección 29.5.1) de modo que sólo contenga los constructos de programación estructurados.5  Esto hace que el código fuente sea más fácil de leer y que proporcione la base para todas las actividades de ingeniería inversa posteriores. El núcleo de la ingeniería inversa radica en una actividad llamada extracción de abstracciones.  Debe evaluar el programa antiguo y, a partir del código fuente (con frecuencia no documentado), desarrollar una especificación significativa del procesamiento que se realiza, de la interfaz de usuario que se aplica y de las estructuras de datos del programa o de la base de datos que se usa. 29.6.1  Ingeniería inversa para comprender datos La ingeniería inversa de datos ocurre en diferentes niveles de abstracción y con frecuencia es la primera tarea de reingeniería. En el nivel del programa, las estructuras de datos internas del programa con frecuencia deben someterse a ingeniería inversa como parte de un esfuerzo de reingeniería global. En el nivel del sistema, las estructuras de datos globales (por ejemplo, ar-chivos, bases de datos) con frecuencia se someten a reingeniería para acomodar nuevos para-digmas de administración de base de datos (por ejemplo, moverse de un archivo plano a siste-mas de bases de datos relacionales u orientadas a objetos). La ingeniería inversa de las estructuras de datos globales actuales monta el escenario para la introducción de una nueva base de datos en todo el sistema. Estructuras de datos internas. Las técnicas de ingeniería inversa para datos internos del  programa se enfocan en la definición de clases de objetos. Esto se logra al examinar el código  del programa con la intención de agrupar variables del programa relacionadas. En muchos ca-FIGURA 29.3 El proceso de  ingeniería inversa WebRef Útiles recursos para “recuperación de diseño y comprensión de programa” pueden encontrarse en wwwsel.iit.nrc.ca/projects/dr/dr.html 5 El código puede reestructurarse usando un motor de reestructuración, una herramienta que reestructura código  fuente.En algunos casos, la primera  actividad de reingeniería intenta construir un diagrama de clase UML.CONSEJO El enfoque de la ingeniería inversa para datos para software convencional sigue una ruta análoga: 1) construir un modelo de datos, 2) identificar atributos de objetos de datos y 3) definir relaciones.CONSEJOReﬁnamiento y simpliﬁcación Especiﬁcación ﬁnalExtracción de abstracciones Especiﬁcación inicialReestructuración de código Código fuente limpioCódigo fuente sucio Base de datosInterfazProce- samiento 29Pressman(655-674).indd   66529Pressman(655-674).indd   665 26/1/10   17:33:0126/1/10   17:33:01