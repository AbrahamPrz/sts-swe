missing_string, missing_integer, invalid_integer, missing_double, invalid_double} } listado 14-16 args.java. public class args { private string schema; private map<character, argumentmarshaler> marshalers = new hashmap<character, argumentmarshaler>(); private set<character> argsfound = new hashset<character>(); private iterator<string> currentargument; private list<string> argslist; public args(string schema, string[] args) throws argsexception { this.schema = schema; argslist = arrays.aslist(args); parse(); } private void parse() throws argsexception { parseschema(); parsearguments(); } private boolean parseschema() throws argsexception { for (string element : schema.split(“,”)) { if (element.length() > 0) { parseschemaelement(element.trim()); } } return true; } private void parseschemaelement(string element) throws argsexception { char elementid = element.charat(0); string elementtail = element.substring(1); validateschemaelementid(elementid); if (elementtail.length() == 0) marshalers.put(elementid, new booleanargumentmarshaler()); else if (elementtail.equals(“*”)) marshalers.put(elementid, new stringargumentmarshaler()); else if (elementtail.equals(“#”)) marshalers.put(elementid, new integerargumentmarshaler()); else if (elementtail.equals(“##”)) marshalers.put(elementid, new doubleargumentmarshaler()); else throw new argsexception(argsexception.errorcode.invalid_format, elementid, elementtail); } 315