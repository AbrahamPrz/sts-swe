capítulo 4 principios que guían la práctica 83 4.1 conocimiento de la ingeniería de software en un editorial publicado hace diez años en ieee software, steve mcconnell [mcc99] hizo el siguiente comentario: muchos trabajadores del software piensan que el conocimiento de la ingeniería de software casi ex- clusivamente consiste en tecnologías específicas: java, perl, html, c++, linux, windows nt, etc. para programar computadoras es necesario conocer los detalles tecnológicos específicos. si alguien pide al lector que escriba un programa en c++, tiene que saber algo sobre este lenguaje a fin de que el programa funcione. es frecuente escuchar que el conocimiento del desarrollo de software tiene una vida media de tres años, lo que significa que la mitad de lo que es necesario saber hoy será obsoleto dentro de tres años. en el dominio del conocimiento relacionado con la tecnología es probable que eso se cumpla. pero hay otra clase de conocimiento de desarrollo de software —algo que el autor considera como los “principios de la ingeniería de software”— que no tiene una vida media de tres años. es factible que dichos principios sirvan al programador profesional durante toda su carrera. mcconnell continúa y plantea que el cuerpo de conocimientos de la ingeniería de software (alrededor del año 2000) ha evolucionado para convertirse en un “núcleo estable” que repre- senta cerca de “75% del conocimiento necesario para desarrollar un sistema complejo”. pero, ¿qué es lo que hay dentro de ese núcleo estable? como dice mcconnell, los principios fundamentales —ideas elementales que guían a los in- genieros de software en el trabajo que realizan— dan ahora un fundamento a partir del cual pueden aplicarse y evaluarse los modelos, métodos y herramientas de ingeniería. 4.2 principios fundamentales la práctica de la ingeniería de software está guiada por un conjunto de principios fundamenta-les que ayudan en la aplicación del proceso de software significativo y en la ejecución de méto-dos eficaces de ingeniería de software. en el nivel del proceso, los principios fundamentales establecen un fundamento filosófico que guía al equipo de software cuando realiza activida-des estructurales y actividades sombrilla, cuando navega por el flujo del proceso y elabora un conjunto de productos del trabajo de la ingeniería de software. en el nivel de la práctica, los principios fundamentales definen un conjunto de valores y reglas que sirven como guía cuando se analiza un problema, se diseña una solución, se implementa y prueba ésta y cuando, al final, se entrega el software a la comunidad de usuarios. en el capítulo 1 se identificó un conjunto de principios generales que amplían el proceso y práctica de la ingeniería de software: 1) agregar valor para los usuarios finales, 2) mantenerlo sencillo, 3) fijar la visión (del producto y el proyecto), 4) reconocer que otros consumen (y deben entender) lo que usted produce, 5) abrirse al futuro, 6) planear la reutilización y 7) ¡pensar! aunque estos principios generales son importantes, se caracterizan en un nivel tan alto de abs-tracción que en ocasiones son difíciles de traducir en la práctica cotidiana de la ingeniería de administren proyectos de software y que los ingenieros de software elaboren programas de cómputo. la práctica da al modelo del proceso de software el saber técnico y administrativo para realizar el trabajo. la práctica transforma un enfoque caprichoso y disperso en algo más organizado, más eficaz y con mayor probabilidad de alcanzar el éxito. a lo largo de lo que resta del libro se estudiarán distintos aspectos de la práctica de la inge- niería de software. en este capítulo, la atención se pone en los principios y conceptos que la guían en lo general. cita: “en teoría no hay diferencia entre la teoría y la práctica. pero en la práctica sí la hay.” jan van de snepscheut 04pressman(081-100).indd  8304pressman(081-100).indd  83 26/1/10  17:31:5626/1/10  17:31:56