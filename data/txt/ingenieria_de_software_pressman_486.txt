capítulo 20 prueba de aplicaciones web 455 20.1.2 errores dentro de un entorno de webapp los errores que se encuentran como consecuencia de una prueba exitosa de una webapp tienen algunas características únicas [ngu00]: 1. puesto que muchos tipos de pruebas de webapps descubren problemas que se eviden- cian primero en el lado del cliente (es decir , mediante una interfaz implantada en un navegador específico o en un dispositivo de comunicación personal), con frecuencia se ve un síntoma del error, no el error en sí. 2. puesto que una webapp se implanta en algunas configuraciones distintas y dentro de di- ferentes entornos, puede ser difícil o imposible reproducir un error afuera del entorno en el que originalmente se encontró. 3. aunque algunos errores son resultado de diseño incorrecto o codificación html (u otro lenguaje de programación) impropia, muchos errores pueden rastrearse en la configu-ración de la webapp. 4. dado que las webapps residen dentro de una arquitectura cliente-servidor , los errores pueden ser difíciles de rastrear a través de tres capas arquitectónicas: el cliente, el servi-dor o la red en sí. 5. algunos errores se deben al entorno oper ativo estático (es decir, a la configuración espe- cífica donde se realiza la prueba), mientras que otros son atribuibles al entorno opera- tivo dinámico (es decir, a la carga de recurso instantánea o a errores relacionados con el tiempo). estos cinco atributos de error sugieren que el entorno juega un importante papel en el diagnós- tico de todos los errores descubiertos durante la prueba de webapps. en algunas situaciones (por ejemplo, la prueba de contenido), el sitio del error es obvio, pero en muchos otros tipos de prueba de webapps (por ejemplo, prueba de navegación, prueba de rendimiento, prueba de se-guridad), la causa subyacente del error puede ser considerablemente más difícil de determi-nar. 20.1.3 estrategia de las pruebas la estrategia para probar webapps adopta los principios básicos de todas las pruebas de soft- ware (capítulo 17) y aplica una estrategia y las tácticas que se recomendaron para los sistemas orientados a objetos (capítulo 19). los siguientes pasos resumen el enfoque: 1. el modelo de contenido para la webapp a se revisa a fin de descubrir errores. 2. el modelo de interfaz se examina para garantizar que todos los casos de uso pueden alojarse. 3. el modelo de diseño para la webapp se revisa para descubrir errores de navegación. 4. la interfaz de usuario se prueba para descubrir errores en la mecánica de presentación y/o navegación. 5. los componentes funcionales se someten a prueba de unidad. 6. se prueba la navegación a lo largo de toda la arquitectura. 7. la webapp se implanta en varias configuraciones de entorno diferentes y se prueba para asegurar la compatibilidad con cada configuración. 8. las pruebas de seguridad se realizan con la intención de explotar las vulnerabilidades en la webapp o dentro de su entorno.¿qué hace que los errores encontrados durante la ejecución de una webapp sean un poco diferentes a los que se encuentran para el software convencional?? punto clave la estrategia global para probar webapp puede resumirse en los 10 pasos que se anotan aquí. 20pressman(453-477).indd  45520pressman(453-477).indd  455 21/1/10  10:58:0621/1/10  10:58:06