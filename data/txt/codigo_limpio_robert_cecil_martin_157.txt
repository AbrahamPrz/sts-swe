Conclusión El código limpio es legible pero también debe ser robusto. No son objetivos opuestos. Podemos crear código limpio y robusto si consideramos el control de errores una preocupación diferente, algo que vemos de forma independiente desde nuestra lógica principal. Si somos capaces de lograrlo, razonaremos de forma independiente y podemos aumentar la capacidad de mantenimiento de nuestro código. Bibliografía [Martin] :  Agile Software Development: Principles, Patterns, and Practices , Robert C. Martin, Prentice Hall, 2002. 158