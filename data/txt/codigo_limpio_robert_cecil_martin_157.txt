conclusión el código limpio es legible pero también debe ser robusto. no son objetivos opuestos. podemos crear código limpio y robusto si consideramos el control de errores una preocupación diferente, algo que vemos de forma independiente desde nuestra lógica principal. si somos capaces de lograrlo, razonaremos de forma independiente y podemos aumentar la capacidad de mantenimiento de nuestro código. bibliografía [martin] : agile software development: principles, patterns, and practices , robert c. martin, prentice hall, 2002. 158