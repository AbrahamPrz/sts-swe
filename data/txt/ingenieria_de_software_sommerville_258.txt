9.2 ■ evolución dinámica del programa 241 la tercera ley es, quizá, la más interesante y polémica de las leyes de lehman. sugiere que los sistemas grandes tienen una dinámica propia que se establece en una etapa tem-prana del proceso de desarrollo. esto determina las grandes tendencias del proceso de mantenimiento del sistema y limita el número de cambios posibles al sistema. lehman y belady sugieren que esta ley es consecuencia de factores estructurales que influyen en el cambio al sistema y lo restringen, así como de factores organizacionales que afectan el pro-ceso de evolución. los factores estructurales que afectan la tercera ley provienen de la complejidad de los sistemas grandes. conforme cambia y se extiende un programa, su estructura tiende a degradarse. esto es verdadero para todos los tipos de sistemas (no sólo para el software) y ocurre porque una estructura con un propósito específico se adapta para uno diferente. esta degradación, si no se controla, hace cada vez más difícil realizar cambios ulteriores al programa. hacer pequeños cambios reduce el alcance de la degradación estructural y, por consiguiente, aminora los riesgos de causar serios problemas a la confiabilidad del sistema. si se realizan grandes cambios, hay una alta probabilidad de que se introduzcan nuevas fallas, los cuales impedirían más cambios al programa. los factores organizacionales que afectan la tercera ley reflejan el hecho de que, por lo general, los sistemas grandes se producen en organizaciones grandes. estas compañías tienen burocracias internas que establecen los presupuestos de cambio para cada sistema y controlan el proceso de toma de decisiones. las empresas deben tomar decisiones sobre los riesgos y el valor de los cambios, así como sobre los costos inherentes. tales deci-siones toman tiempo y, en ocasiones, tardan más para decidir acerca de los cambios por ley descripción cambio continuo un programa usado en un entorno real debe cambiar; de otro modo, en dicho entorno se volvería progresivamente inútil. complejidad creciente a medida que cambia un programa en evolución, su estructura tiende a volverse más compleja. deben dedicarse recursos adicionales para conservar y simplificar su estructura. evolución de programa grandela evolución del programa es un proceso autorregulador. los atributos del sistema, como tamaño, tiempo entre versiones y número de errores reportados, son casi invariantes para cada versión del sistema. estabilidad organizacional durante la vida de un programa, su tasa de desarrollo es aproximadamente constante e independiente de los recursos dedicados al desarrollo del sistema. conservación de familiaridada lo largo de la existencia de un sistema, el cambio incremental en cada liberación es casi constante. crecimiento continuo la funcionalidad ofrecida por los sistemas tiene que aumentar continuamente para mantener la satisfacción del usuario. declive de calidad la calidad de los sistemas declinará, a menos que se modifiquen para reflejar los cambios en su entorno operacional. sistema de retroalimentación los procesos de evolución incorporan sistemas de retroalimentación multiagente y multiciclo. además, deben tratarse como sistemas de retroalimentación para lograr una mejora significativa del producto. figura 9.7 leyes de lehman m09_sommerville_ingenieria_1ed_se_234-260.indd  241m09_sommerville_ingenieria_1ed_se_234-260.indd  241 3/18/11  4:52:24 pm3/18/11  4:52:24 pm