538  Capítulo 20 ■ Software embebido Las computadoras se utilizan para controlar una amplia gama de sistemas, desde máqui- nas domésticas simples y controladores de juego, hasta el total de las plantas manufac-tureras. Estas computadoras interactúan directamente con dispositivos de hardware. Su software debe reaccionar a eventos generados por el hardware y emitir a menudo señales de control en respuesta a tales eventos. Estas señales dan por resultado una acción, como el inicio de una llamada telefónica, el movimiento de un carácter en la pantalla, la aper-tura de una válvula o el despliegue del estatus del sistema. El software en dichos sistemas está embebido en el hardware del sistema, con frecuencia en la memoria de sólo lectura, y por lo general responde, en tiempo real, a eventos del entorno del sistema. Por tiempo real se entiende que el sistema de software tiene un plazo para responder a los eventos externos. Si éste no se cumple, entonces el sistema hardware-software global no funcio-nará correctamente. El software embebido es muy importante desde el punto de vista económico, porque ahora casi todos los dispositivos eléctricos incluyen software. Por consiguiente, existen muchos más sistemas de software embebido que de otros tipos. Quizás usted tenga en casa tres o cuatro computadoras personales, pero es probable que cuente también con 20 o 30 sistemas embebidos, como sistemas en teléfonos, hornos de microondas, etcétera. La respuesta en tiempo real es la diferencia crítica entre los sistemas embebidos y otros sistemas de software, tales como los sistemas de información, los basados en la Web o los de software personal, cuyo propósito fundamental es el procesamiento de datos. Para sistemas que no son de tiempo real, la corrección de un sistema se puede defi-nir al especificar cómo las entradas del sistema se mapean a las salidas correspondientes que debe producir el sistema. En respuesta a una entrada, el sistema debe generar una salida correspondiente y, muchas veces, deben almacenarse algunos datos. Por ejemplo, si se elige un comando create en un sistema de información de pacientes, entonces la res-puesta correcta del sistema es crear en una base de datos un nuevo registro del paciente, y confirmar que lo ha hecho; dentro de límites razonables, no importa cuánto tarde. Sin embargo, en un sistema de tiempo real, la corrección depende tanto de la res-puesta a una entrada como del tiempo que tarda en generar dicha respuesta. Si el sistema aplaza mucho la respuesta, entonces la respuesta requerida puede resultar ineficaz. Por ejemplo, si el software embebido que controla el sistema de frenado de un automóvil es muy lento, puede ocurrir un accidente al ser imposible detener a tiempo el vehículo. Por consiguiente, el tiempo es inseparable en la definición de un sistema de software de tiempo real: Un sistema de software de tiempo real es un sistema cuya correcta operación depende tanto de los resultados producidos por el sistema como del tiempo en que se producen dichos resultados. Un “sistema blando de tiempo real” es un sistema cuya operación se degrada si los resultados no se producen de acuerdo con los requerimientos de tiempo especificados. Si los resultados no se producen según la especificación de tiempo en un “sistema duro de tiempo real”, se considera una falla del sistema.  La respuesta oportuna es un factor importante en todos los sistemas embebidos, aun-que no todos estos sistemas requieren una respuesta muy rápida. Por ejemplo, el software de la bomba de insulina que se usó como modelo en varios capítulos de este libro es un sistema embebido. No obstante, aun cuando requiere verificar el nivel de glucosa a inter-valos periódicos, no precisa responder muy rápidamente a eventos externos. El software  M20_SOMMERVILLE_INGENIERIA_1ED_SE_537-564.indd   538M20_SOMMERVILLE_INGENIERIA_1ED_SE_537-564.indd   538 3/18/11   5:05:49 PM3/18/11   5:05:49 PM