nombre debería ser por  getOrdinalDay . El siguiente método abstracto es toDate  (líneas  838-844).  Convierte  DayDate  en  java.util.Date . ¿Por qué es abstracto? Si analizamos su implementación en  SpreadsheetDate  (líneas  198-207  del Listado  B-5),  vemos que no depende de la implementación de esa clase [G6]. Por tanto, lo desplazo hacia arriba. Los métodos  getYYYY ,  getMonth  y  getDayOfMonth  son evidentemente abstractos. Sin embargo,  getDayOfWeek  debería ascender desde SpreadSheetDate  ya que no depende de nada de lo que encontremos en DayDate  [G6]. ¿O sí? Si se fija atentamente (línea 247 del Listado  B-5),  verá que el algoritmo depende implícitamente del origen del día ordinal (es decir, el día de la semana del día 0). Por ello, aunque esta función carezca de dependencias físicas que no se puedan cambiar a  DayDate , cuenta con una dependencia lógica. Este tipo de dependencias lógicas me molestan [G22]. Si algo lógico depende de la implementación, también debería haber algo físico. Además, me parece que el propio algoritmo podría ser genérico y que debería depender en menor medida de la implementación [G6]. Por tanto, creé un método abstracto en  DayDate  con el nombre  getDayOfWeekForOrdinalZero  y lo implementé en  SpreadsheetDate  para devolver  Day.SATURDAY . Tras ello, envié el método  getDayOfWeek  a  DayDate  y lo cambié para que invocara getOrdinalDay  y  getDayOfWeekForOrdinalZero . public Day getDayOfWeek() { Day startingDay = getDayOfWeekForOrdinalZero(); int startingOffset = startingDay.index - Day.SUNDAY.index; return Day.make((getOrdinalDay() + startingOffset) % 7 + 1); } Fíjese en el comentario de las líneas  895-899.  ¿Necesitamos realmente esta repetición? Como de costumbre, eliminé este comentario junto a los demás. El siguiente método es  compare  (líneas  902-913).  De nuevo, es incorrectamente abstracto [G6], por lo que cambio la implementación a DayDate . Además, el nombre no es descriptivo [N1]. En realidad, este método devuelve la diferencia en días desde el argumento, por lo que cambié el nombre por  daysSince . Tampoco existían pruebas para este método, de 355