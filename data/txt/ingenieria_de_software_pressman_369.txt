338capítulo 14conceptos de calidad conceptos clave  acciones de administración . . 349 calidad . . . . . . . . . . . . . . . . 339costo de la calidad. . . . . . . . 346dilema de la calidad. . . . . . . 345dimensiones de la calidad. . . 341factores de la calidad. . . . . . 342punto de vista cuantitativo . 344responsabilidad. . . . . . . . . . 348riesgos . . . . . . . . . . . . . . . . 348seguridad . . . . . . . . . . . . . . 349suficientemente bueno. . . . . 345 ¿qué es? la respuesta no es tan fácil como quizá se piense. la calidad se reconoce cuando se ve, por lo que puede ser algo difícil de defi-nir. pero para el software de computadora, la calidad es algo que debe definirse, y eso es lo que hare-mos en este capítulo. ¿quién lo hace? los involucrados en el proceso del soft- ware —ingenieros, gerentes y todos los participantes— son los responsables de la calidad. ¿por qué es importante? puede hacerse bien o puede repetirse. si un equipo de software hace énfasis en la cali-dad de todas las actividades de la ingeniería de software, se reduce el número de repeticiones que deben hacerse. esto da como resultado menores costos y, lo que es más importante, mejora el tiempo de llegada al mercado.¿cuáles son los pasos? para lograr software de alta calidad, deben ocurrir cuatro actividades: usar procesos y prácticas probados de la ingeniería de software, adminis-trar bien el proyecto, realizar un control de calidad exhaustivo y contar con infraestructura de aseguramiento de la calidad. ¿cuál es el producto final? software que satisface las necesidades del consumidor, con un desempeño apropia-do y confiable, y que agrega valor para todos los que lo utilizan. ¿cómo me aseguro de que lo hice bien? hay que dar seguimiento a la calidad, estudiando los resultados de todas las actividades de control de calidad y midiendo ésta con el estudio de los errores antes de la entrega y de los defectos detectados en el campo. una mirada  rápidael redoble de tambores para mejorar la calidad del software comenzó tan luego que éste empezó a integrarse en cada faceta de nuestras vidas. en la década de 1990, las principa-les corporaciones reconocieron que cada año se desperdiciaban miles de millones de dólares en software que no tenía las características ni la funcionalidad que se habían prometido. lo que era peor, tanto el gobierno como la industria se preocupaban por la posibilidad de que alguna falla de software pudiera afectar infraestructura importante y provocara pérdidas de decenas de miles de millones de dólares. al despuntar el nuevo siglo, cio magazine [lev01] dio la alerta: “dejemos de desperdiciar $78 mil millones de dólares al año”, y lamentaba el hecho de que “las empresas estadounidenses gastan miles de millones de dólares en software que no hace lo que se supone que debe hacer”. informationweek [ric01] se hizo eco de la misma preocupación: a pesar de las buenas intenciones, el código defectuoso sigue siendo el duende de la industria del software, es responsable hasta de 45% del tiempo que están fuera los sistemas basados en compu-tadoras y costó a las empresas estadounidenses alrededor de $100 mil millones de dólares el último año en pérdidas de productividad y reparaciones, afirma standish group, empresa de investigación de mercados. eso no incluye el costo que implica perder a los clientes disgustados. como los productores de tecnologías de información escriben aplicaciones que se basan en software empacado en infraes-tructura, el código defectuoso también puede inutilizar aplicaciones personalizadas… pero, ¿cuán malo es el software defectuoso? las respuestas varían, mas los expertos dicen que sólo se requiere de tres a cuatro defectos por cada 1 000 líneas de código para que un programa tenga mal desempeño. hay que pensar que la mayoría de los programadores cometen un error en cada 10 líneas de código que escriben, lo que, multiplicado por los millones de líneas que hay en muchos productos comerciales, permite imaginar que la corrección de los errores cuesta a los vendedores de software al menos la mitad de sus presupuestos de desarrollo durante las pruebas. ¿comprende lo que esto sig-nifica? 14pressman(337-353).indd  33814pressman(337-353).indd  338 14/1/10  16:51:2814/1/10  16:51:28