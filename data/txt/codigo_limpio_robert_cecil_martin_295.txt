public int getint(char arg) { args.argumentmarshaler am = marshalers.get(arg); try { return am == null ? 0 : (integer) am.get(); } catch (exception e) { return 0; } } public boolean has(char arg) { return argsfound.contains(arg); } public boolean isvalid() { return valid; } private class argsexception extends exception { } private abstract class argumentmarshaler { public abstract void set(string s) throws argsexception; public abstract object get(); } private class booleanargumentmarshaler extends argumentmarshaler { private boolean booleanvalue = false; public void set(string s) { booleanvalue = true; } public object get() { return booleanvalue; } } private class stringargumentmarshaler extends argumentmarshaler { private string stringvalue = “”; public void set(string s) { stringvalue = s; } public object get() { return stringvalue; } } private class integerargumentmarshaler extends argumentmarshaler { private int intvalue = 0; public void set(string s) throws argsexception { try { intvalue = integer.parseint(s); 296