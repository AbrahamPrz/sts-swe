754 referencias [coc04] cockburn, a., “what the agile toolbox contains”, crosstalk, noviembre 2004, disponible en www. stsc.hill.af.mil/crosstalk/2004/11/0411cockburn.html. [coc05] cockburn, a., crystal clear, addison-wesley, 2005. [con96] conradi, r., “software process improvement: why we need spiq”, ntnu, octubre 1996, descargable de www.idi.ntnu.no/grupper/su/publ/pdf/nik96-spiq.pdf. [con02] conradi, r. y a. fuggetta, “improving software process improvement”, ieee software, julio-agosto 2002, pp. 2-9, descargable de http:/ /citeseer.ist.psu.edu/conradi02improving.html. [con93] constantine, l., “work organization: paradigms for project management and organization”, cacm, vol. 36, núm. 10, octubre 1993, pp. 34-43. [con95] constantine, l, “what do users want? engineering usability in software”, windows tech journal, diciembre 1995, disponible en www.foruse.com. [con03] constantine, l. y l. lockwood, software for use, addison-wesley, 1999; vea también www.foruse. com/. [cop05] coplien, j., “software patterns”, 2005, disponible en http:/ /hillside.net/patterns/definition.html.[cor98] corfman, r., “an overview of patterns”, en the patterns handbook, sigs books, 1998. [cou00] coulouris, g., j. dollimore y t. kindberg, distributed systems: concepts and design, 3a. ed., addison- wesley, 2000. [cox86] cox, brad, object-oriented programming, addison-wesley, 1986.[cri92] christel, m. g. y k. c. kang, “issues in requirements elicitation”, software engineering institute, cmu/sei-92-tr-12 7, septiembre 1992. [cro79] crosby, p., quality is free, mcgraw-hill, 1979.[cro07] cross, m. y m. fisher, developer’s guide to web application security, syngress publishing, 2007. [cur86] curritt, p. a., m. dyer y h. d. mills, “certifying the reliability of software”, ieee trans, software engi- neering, vol. se-12, núm. 1, enero 1994. [cur88] curtis, b., et al., “a field study of the software design process for large systems”, ieee trans. software engineering, vol. se-31, núm. 11, noviembre 1988, pp. 1268-1287. [cur01] curtis, b., w. hefley y s. miller, people capability maturity model, addison-wesley, 2001. [cvs07] concurrent versions system, ximbiot, http:/ /ximbiot.com/cvs/wiki/index.php?title= main_page, 2007. [dac03} “an overview of model-based testing for software”, data and analysis center for software, cr/ta 12, junio 2003, descargable de www.goldpractices.com/dwnload/ practice/pdf/model_based_testing.pdf. [dah72] dahl, o., e. dijkstra y c. hoare, structured programming, academic press, 1972. [dar91] dart, s., “concepts in configuration management systems”, proc. third international workshop on software configuration management, acm sigsoft, 1991, descargable de www.sei.cmu.edu/legacy/scm/abstracts/abscm_concepts.html. [dar99] dart, s., “change management: containing the web crisis”, proc. software configuration management symposium, toulouse, francia, 1999, disponible en www.perforce.com/perforce/ conf99/dart.html. [dar01] dart, s., spectrum of functionality in configuration management systems , software engineering insti- tute, 2001, disponible en www.sei.cmu.edu/legacy/scm/tech_rep/tr11_90/ toc_tr11_90.html. [das05] dasari, r., “lean software development”, a white paper, descargable de www .projectperfect.com. au/downloads/info/info_lean_development.pdf, 2005. [dav90] davenport, t. h. y j. e. young, “the new industrial engineering: information technology and busi- ness process redesign”, sloan management review, verano 1990, pp. 11-27. [dav93] davis, a., et al., “identifying and measuring quality in a software requirements specification”, proc. first intl. software metrics symposium, ieee, baltimore, md, mayo 1993, pp. 141-152. [dav95a] davis, m., “process and product: dichotomy or duality”, software engineering notes, acm press, vol. 20, núm. 2, abril, 1995, pp. 17-18. [dav95b] davis, a., 201 principles of software development , mcgraw-hill, 1995. [day99] dayani-fard, h., et al., “legacy software systems: issues, progress, and challenges”, ibm t echnical report: tr-74.165-k, abril 1999, disponible en www.cas.ibm.com/toronto/ publications/tr-74.165/k/legacy.html. [dem86] deming, w. e., out of the crisis, mit press, 1986.[dem79] demarco, t., structured analysis and system specification, prentice hall, 1979. [dem95] demarco, t., why does software cost so much? dorset house, 1995.[dem95a] demarco, t., “lean and mean”, ieee software, noviembre 1995, pp. 101-102. [dem98] demarco, t. y t. lister, peopleware, 2a. ed., dorset house, 1998.[dem02] demarco, t. y b. boehm, “the agile methods fray”, ieee computer, vol. 35, núm. 6, junio 2002, pp. 90-92. [den73] dennis, j., “modularity”, en advanced course on software engineering (f. l. bauer, ed.), springer-ver- lag, 1973, pp. 128-182. [dev01] devedzik, v., “software patterns”, en handbook of software engineering and knowledge engineering , world scientific publishing co., 2001. [dha95] dhama, h., “quantitative metrics for cohesion and coupling in software”, journal of systems and software, vol. 29, núm. 4, abril 1995. 35pressman(751-766)refer.indd  75435pressman(751-766)refer.indd  754 2/2/10  11:41:172/2/10  11:41:17