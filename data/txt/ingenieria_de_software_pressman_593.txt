562 parte cuatro administración de proyectos de software municación informal es más personal. los miembros de un equipo de software comparten ideas sobre una base ad hoc, piden ayuda cuando surgen problemas e interactúan unos con otros diariamente. la escena: oficina de doug miller antes de ini- ciar el proyecto de software casasegura. personajes: doug miller (gerente del equipo de ingeniería de soft-ware casasegura) y vinod raman, jamie lazar y otros miembros del equipo de ingeniería de software del producto. la conversación: doug: ¿han tenido oportunidad de consultar la información preli- minar que preparó mercadotecnia acerca de casasegura? vinod (asiente y observa a sus compañeros de equipo):  sí. pero tenemos muchas preguntas. doug: dejemos eso por un momento. me gustaría hablar acerca de cómo vamos a estructurar el equipo, quién es responsable de qué... jamie: yo estoy totalmente a favor de la filosofía ágil, doug. creo que debemos ser un equipo autoorganizado. vinod: estoy de acuerdo. dada la apretada línea de tiempo y algo de la incertidumbre, así como el hecho de que todos somos realmen-te competentes [risas], ésta parece ser la forma correcta de avanzar.doug: está bien por mí, pero ustedes conocen las instrucciones. jamie (sonríe y habla como si recitara algo): “tomamos decisiones tácticas acerca de quién hace qué y cuándo, pero es nuestra responsabilidad sacar el producto a tiempo.” vinod: y con calidad.doug: exactamente. pero recuerden que hay restricciones. merca- dotecnia define los incrementos del software que se va a producir... consultándonos, desde luego. jamie: ¿y?doug: y vamos a usar uml como nuestro enfoque de modelado.vinod: pero mantendremos la documentación extraña en un míni- mo absoluto. doug: ¿quién es el enlace conmigo?jamie: decidimos que vinod sea el líder técnico; tiene más expe- riencia, así que vinod es tu enlace, pero siéntete en libertad de hablar con cualquiera de nosotros. doug (ríe): no se preocupen. lo haré.casasegura estructura del equipo 24.3 e l producto un gerente de proyecto de software se enfrenta con un dilema en el comienzo mismo de un proyecto de software. se requieren estimaciones cuantitativas y un plan organizado, pero no hay información sólida disponible. un análisis detallado de los requerimientos del software propor-cionaría la información necesaria para las estimaciones, pero el análisis usualmente tarda sema-nas o incluso meses en completarse. peor aún, los requerimientos pueden ser fluidos y cambiar con regularidad conforme avanza el proyecto. y, sin embargo, ¡se necesita un plan “ahora”! le guste o no al gerente de proyecto, debe examinar el producto; se pretende que el problema se resuelva desde el principio mismo del proyecto; cuando menos, debe establecer y acotar el ámbito del producto. 24.3.1 ámbito del software la primera actividad en la administración del proyecto de software es determinar el ámbito del software, que se define al responder las siguientes preguntas: contexto. ¿cómo encaja en un sistema, producto o contexto empresarial más grande el software que se va a construir y qué restricciones se imponen como resultado del contexto? objetivos de información. ¿qué objetos de datos visibles para el cliente se producen como salida del software? ¿qué objetos de datos se requieren como entrada? función y desempeño. ¿qué función realiza el software para transformar los datos de entrada en salida? ¿existe alguna característica de desempeño especial que deba abor-darse?si no puede acotar una característica del software que intenta construir, mencione la característica como un riesgo del proyecto (capítulo 25).consejo 24pressman(553-570).indd  56224pressman(553-570).indd  562 19/1/10  23:34:4319/1/10  23:34:43