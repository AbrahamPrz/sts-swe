744 glosario propiedad emergente propiedad que sólo se vuelve evidente una vez que se integran todos los componentes para crear el sistema. protección capacidad de un sistema para operar sin falla catastrófica.pruebas de caja blanca enfoque a las pruebas de programa, donde las pruebas se basan en el conocimiento de la estructura del programa y sus componentes. el acceso al código fuente es esencial para las pruebas de caja blanca. pruebas de caja negra un enfoque a las pruebas donde los examinadores no tienen acceso al código fuente de un sistema o sus componentes. las pruebas se derivan de la especificación del sistema. python lenguaje de programación con tipos dinámicos, que es particularmente adecuado para el desarrollo de sistemas basados en web; google lo usa de manera extensa. reingeniería modificación de un sistema de software para facilitar su comprensión y cambio. con frecuencia, la reingeniería implica reestructuración y organización de software y datos, simplificación del programa y redocumentación. reingeniería, procesos empresariales cambio de un proceso empresarial para satisfacer un nuevo objetivo organizacional, como costo reducido y ejecución más rápida. requerimiento funcional enunciado de cierta función o característica que debe implementarse en un sistema.requerimiento no funcional enunciado de una restricción o un comportamiento esperado que se aplica a un sistema. esta restricción puede referirse a las propiedades emergentes del software que se desarrolla o al proceso de desarrollo. requerimientos de confiabilidad requerimiento de sistema que se incluye para ayudar a lograr la confiabilidad requerida para un sistema. los requerimientos no funcionales de confiabilidad especifican valores de atributo de confiabilidad; los requerimientos de confiabilidad funcional son requerimientos funcionales que especifican cómo evitar, detectar, tolerar o recuperarse de fallas en el desarrollo y la operación del sistema. rest rest se deriva de representational state transfer (transferencia de estado representacional), que es un estilo de desarrollo basado simplemente en interacción cliente/servidor, y que usa el protocolo http. rest se basa en la idea de un recurso identificable, que tiene una uri. toda interacción con los recursos se basa en http post, get, put y delete. ahora se usa ampliamente para implementar servicios web de carga baja. riesgo resultado indeseable que plantea una amenaza al logro de cierto objetivo. un riesgo de proceso amenaza la calendarización o el costo de un proceso; un riesgo de producto z01_sommerville_ingenieria_1ed_se_733-748 glo.indd  744z01_sommerville_ingenieria_1ed_se_733-748 glo.indd  744 3/18/11  5:18:28 pm3/18/11  5:18:28 pm