52 parte uno el proceso del software en la comunidad científica existe el precedente de adoptar nociones de dualidad cuando las con- tradicciones en las observaciones no pueden ser explicadas por alguna teoría alternativa. la natura- leza dual de la luz, que parece ser al mismo tiempo onda y partícula, ha sido aceptada desde la década de 1920, cuando la propuso louis de broglie. pienso que las observaciones que podemos hacer sobre el conjunto del software y su desarrollo demuestran una dualidad fundamental entre el producto y el proceso. nunca es posible derivar u obtener todo el conjunto, su contexto, uso, significado y beneficios si se le ve sólo como proceso o sólo como producto… toda la actividad humana es un proceso, pero cada uno de nosotros obtiene un sentido de benefi- cio propio gracias a aquellas actividades que dan como resultado una representación o instancia que puede usar o apreciar más de una persona, utilizarla una y otra vez, o emplearla en algún otro con-texto no considerado. es decir, obtenemos sentimientos de satisfacción por la reutilización de nues-tros productos, ya sea que lo hagamos nosotros u otras personas. entonces, si bien la rápida asimilación de las metas de reutilización en el desarrollo del software incrementa potencialmente la satisfacción que obtienen los profesionales del software en su trabajo, también aumenta la urgencia de la aceptación de la dualidad de producto y proceso. pensar en un artefacto reutilizable como si fuera sólo un producto o sólo un proceso oscurece el contexto y las formas de emplearlo, o bien oculta el hecho de que cada uso da como resultado un producto que a su vez será utilizado como entrada para alguna otra actividad de desarrollo de software. privilegiar un punto de vista sobre el otro reduce mucho las oportunidades para la reutilización y, por tanto, se pierde la oportunidad de aumentar la satisfacción por el trabajo. la gente obtiene tanta (o más) satisfacción del proceso creativo como del producto final. un artista disfruta las pinceladas tanto como el resultado que enmarca. un escritor goza de la bús- queda de la metáfora apropiada tanto como del libro terminado. como profesional creativo del software, usted también debe obtener tanta satisfacción del proceso como del producto final. la dualidad de producto y proceso es un elemento importante para hacer que personas creativas se involucren conforme la ingeniería de software evoluciona. 2.9 resumen un modelo general del proceso para la ingeniería de software incluye un conjunto de actividades estructurales y sombrilla, acciones y tareas de trabajo. cada uno de los modelos de proceso puede describirse por un flujo distinto del proceso: descripción de cómo se organizan secuencial y cronológicamente las actividades estructurales, acciones y tareas. los patrones del proceso pueden utilizarse para resolver los problemas comunes que surgen como parte del proceso del software. los modelos de proceso prescriptivo se han aplicado durante muchos años en un esfuerzo por introducir orden y estructura al desarrollo de software. cada uno de dichos modelos sugiere un flujo de proceso algo distinto, pero todos llevan a cabo el mismo conjunto de actividades estructurales generales: comunicación, planeación, modelado, construcción y desarrollo. los modelos de proceso secuencial, como el de la cascada y en v, son los paradigmas más antiguos del software. sugieren un flujo lineal del proceso que con frecuencia no es congruente con las realidades modernas (cambio continuo, sistemas en evolución, plazos ajustados, etc.) del mundo del software. sin embargo, tienen aplicación en situaciones en las que los requeri-mientos están bien definidos y son estables. los modelos de proceso incremental son de naturaleza iterativa y producen con mucha ra- pidez versiones funcionales del software. los modelos de proceso evolutivo reconocen la natu-raleza iterativa e incremental de la mayoría de proyectos de ingeniería de software y están di-señados para aceptar los cambios. los modelos evolutivos, tales como el de hacer prototipos y el espiral, generan rápido productos de trabajo incremental (o versiones funcionales del soft-ware). estos modelos se adoptan para aplicarse a lo largo de todas las actividades de la inge- 02pressman(025-054).indd  5202pressman(025-054).indd  52 14/1/10  13:36:5314/1/10  13:36:53