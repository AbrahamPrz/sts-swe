Capítulo 9 ■ Referencias  259 Coleman, D., Ash, D., Lowther, B. y Oman, P. (1994). “Using Metrics to Evaluate Software System  Maintainability”. IEEE Computer, 27 (8), 44–49. Erlikh, L. (2000). “Leveraging legacy system dollars for E-business”. IT Professional, 2 (3), mayo/ junio 2000, 17–23.Fowler, M., Beck, K., Brant, J., Opdyke, W. y Roberts, D. (1999). Refactoring: Improving the Design of  Existing Code. Boston: Addison-Wesley.Guimaraes, T. (1983). “Managing Application Program Maintenance Expenditures”. Comm. ACM, 26  (10), 739–46.Hopkins, R. y Jenkins, K. (2008). Eating the IT Elephant: Moving from Greenfield Development to  Brownfield. Boston: IBM Press. Kafura, D. y Reddy, G. R. (1987). “The use of software complexity metrics in software maintenance”.  IEEE Trans. on Software Engineering, SE-13 (3), 335–43. Kerievsky, J. (2004). Refactoring to Patterns. Boston: Addison Wesley.Kozlov, D., Koskinen, J., Sakkinen, M. y Markkula, J. (2008). “Assessing maintainability change over  multiple software releases”. J. of Software Maintenance and Evolution, 20 (1), 31–58. Krogstie, J., Jahr, A. y Sjoberg, D. I. K. (2005). “A longitudinal study of development and maintenance  in Norway: Report from the 2003 investigation”. Information and Software Technology, 48 (11), 993–1005. Lehman, M. M. (1996). “Laws of Software Evolution Revisited”. Proc. European Workshop on  Software Process Technology (EWSPT’96), Springer-Verlag. 108–24. Lehman, M. M. y Belady, L. (1985). Program Evolution: Processes of Software Change. London:  Academic Press. Lehman, M. M., Perry, D. E. y Ramil, J. F. (1998). “On Evidence Supporting the FEAST Hypothesis  and the Laws of Software Evolution”. Proc. Metrics ‘98, Bethesda. Maryland: IEEE Computer Society Press. 84–8. Lehman, M. M., Ramil, J. F. y Sandler, U. (2001). “An Approach to Modelling Long-term Growth  Trends in Software Systems”. Proc. Int. Conf. on Software Maintenance, Florencia, Italia: 219–28. Lientz, B. P. y Swanson, E. B. (1980). Software Maintenance Management. Reading, Mass.: Addison- Wesley. McCabe, T. J. (1976). “A complexity measure”. IEEE Trans. on Software Engineering., SE-2 (4),  308–20. Nosek, J. T. y Palvia, P. (1990). “Software maintenance management: changes in the last decade”.  Software Maintenance: Research and Practice, 2 (3), 157–74. Opdyke, W. F. y Johnson, R. E. (1990). “Refactoring: An Aid in Designing Application Frameworks  and Evolving Object-Oriented Systems”. 1990 Symposium on Object-Oriented Programming Emphasizing Practical Applications (SOOPPA ‘90), Poughkeepsie, New York. Poole, C. y Huisman, J. W. (2001). “Using Extreme Programming in a Maintenance Environment”.  IEEE Software, 18 (6), 42–50. M09_SOMMERVILLE_INGENIERIA_1ED_SE_234-260.indd   259M09_SOMMERVILLE_INGENIERIA_1ED_SE_234-260.indd   259 3/18/11   4:52:25 PM3/18/11   4:52:25 PM