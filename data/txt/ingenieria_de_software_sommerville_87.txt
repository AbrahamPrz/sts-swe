70 capítulo 3 ■ desarrollo ágil de software el papel del cliente en el proceso de pruebas es ayudar a desarrollar pruebas de aceptación para las historias, que deban implementarse en la siguiente liberación del sistema. como se estudiará en el capítulo 8, las pruebas de aceptación son el proceso donde el sistema se pone a prueba usando datos del cliente para verificar que se cubren las necesidades reales de éste. en xp, la prueba de aceptación, como el desarrollo, es incremental. el cliente que forma parte del equipo escribe pruebas conforme avanza el desarrollo. por lo tanto, todo código nuevo se valida para garantizar que eso sea lo que necesita el cliente. para la historia en la figura 3.5, la prueba de aceptación implicaría escenarios donde a) se cambió la dosis de un medicamento, b) se seleccionó un nuevo medicamento y c) se usó el formulario para encontrar un medicamento. en la práctica, se requiere por lo general una serie de pruebas de aceptación en vez de una sola prueba. contar con el cliente para apoyar el desarrollo de pruebas de aceptación en ocasiones es una gran dificultad en el proceso de pruebas xp. quienes adoptan el rol del cliente tienen disponibilidad muy limitada, por lo que es probable que no trabajen a tiempo completo con el equipo de desarrollo. el cliente podría creer que brindar los requerimientos fue suficiente contribución y, por lo tanto, se mostrarían renuentes a intervenir en el proceso de pruebas. la automatización de las pruebas es esencial para el desarrollo de la primera prueba. las pruebas se escriben como componentes ejecutables antes de implementar la tarea. dichos componentes de pruebas deben ser independientes, simular el envío de la entrada a probar y verificar que el resultado cumple con la especificación de salida. un marco de pruebas automatizadas es un sistema que facilita la escritura de pruebas realizables y envía una serie de pruebas para su ejecución. junit (massol y husted, 2003) es un ejemplo usado ampliamente de un marco de pruebas automatizadas. conforme se automatizan las pruebas, siempre hay una serie de pruebas que se ejecutan rápida y fácilmente. cada vez que se agregue cualquier funcionalidad al sistema, pueden correrse las pruebas y conocerse de inmediato los problemas que introduce el nuevo código. el desarrollo de la primera prueba y las pruebas automatizadas por lo general dan por resultado un gran número de pruebas que se escriben y ejecutan. sin embargo, este enfo-que no conduce necesariamente a pruebas minuciosas del programa. existen tres razones para ello: 1. los programadores prefieren programar que probar y, en ocasiones, toman atajos cuando escriben pruebas. por ejemplo, escriben pruebas incompletas que no com- prueban todas las posibles excepciones que quizás ocurran.figura 3.7 descripción de caso de prueba para comprobar dosisentrada: 1. un número en mg que represente una sola dosis del medicamento.2. un número que signifique el número de dosis individuales por día. pruebas: 1.  probar las entradas donde la dosis individual sea correcta, pero la frecuencia muy elevada.2.  probar las entradas donde la dosis individual sea muy alta y muy baja.3.  probar las entradas donde la dosis individual × frecuencia sea muy alta y muy baja.4.  probar las entradas donde la dosis individual × frecuencia esté en el rango permitido. salida: ok o mensaje de error que indique que la dosis está fuera del rango de seguridad.prueba 4: comprobación de dosis m03_sommerville_ingenieria_1ed_se_056-081.indd  70m03_sommerville_ingenieria_1ed_se_056-081.indd  70 3/18/11  4:46:25 pm3/18/11  4:46:25 pm