692 capítulo 25 ■ administración de la conﬁ guración proyecto, como cvs (vesperman, 2003), es posible ingresar (chek in) y sacar (check out) todos los archivos asociados con un proyecto en lugar de tener que trabajar a la vez con un archivo o directorio. cuando se desarrollaron por primera vez los sistemas de gestión de versiones, la gestión del almacenamiento fue una de sus funciones más importantes. las características de ges-tión de almacenamiento en un sistema de control de versiones reduce el espacio de disco requerido para mantener todas las versiones del sistema. cuando se crea una nueva ver-sión, el sistema simplemente almacena una delta (una lista de diferencias) entre la nueva versión y la anterior que se usó para crear esa nueva versión (lo que se ilustra en la parte inferior de la figura 25.7). en esta misma figura, los recuadros sombreados representan versiones anteriores de un componente que se recrean automáticamente a partir de la ver-sión de componente más reciente. por lo general, las deltas se almacenan como listas de líneas que cambiaron y, al aplicarlas automáticamente, puede crearse una versión de un componente a partir de otro. como es más probable que se use la versión más reciente de un componente, la mayoría de los sistemas almacenan completa dicha versión. entonces, las deltas definen cómo recrear versiones anteriores del sistema. la mayor parte del desarrollo de software es una actividad grupal, de modo que con frecuencia surgen situaciones en las que diferentes miembros del equipo trabajan paralela-mente en el mismo componente. por ejemplo, suponga que alicia hace algunos cambios a un sistema, lo que implica cambiar los componentes a, b y c. al mismo tiempo, roberto trabaja en cambios que requieren modificar los componentes x, y y c. entonces, tanto alicia como roberto cambian c. es importante evitar que estos cambios interfieran entre sí, es decir, que los cambios de roberto a c sobrescriban en los de alicia o viceversa. para apoyar el desarrollo independiente sin interferencia, los sistemas de gestión de versiones usan el concepto de repositorio público y un espacio de trabajo privado. los desarrolladores sacan componentes del repositorio público hacia su espacio de trabajo privado y pueden cambiarlos como deseen en su mismo espacio. cuando sus cambios están completos, ingresan los componentes al repositorio. esto se ilustra en la figura 25.8. si dos o más personas trabajan en un componente al mismo tiempo, cada uno debe sacar el componente del repositorio. si se extrae un componente, el sistema de gestión de versiones por lo general advierte a otros usuarios que quieren sacar dicho componente que alguien más lo está usando. el sistema también garantizará que, al ingresar los sistema de gestión de versionesalice bobespacio de trabajo (u2) ingreso (check_in)ingreso (check_in)salida (check_out)salida (check_out)ca b cx y a c b x z ry p q a1.1 c1.1 b1.1espacio de trabajo (u1) figura 25.8 ingreso y salida de un repositorio de versión m25_sommerville_ingenieria_1ed_se_681-704.indd  692m25_sommerville_ingenieria_1ed_se_681-704.indd  692 3/18/11  5:16:31 pm3/18/11  5:16:31 pm