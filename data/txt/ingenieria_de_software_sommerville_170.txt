6.2 ■ vistas arquitectónicas 153 puedan cambiarse con facilidad. los productores de datos tienen que separarse de los consumidores y hay que evitar compartir las estructuras de datos. evidentemente, hay un conflicto potencial entre algunas de estas arquitecturas. por ejemplo, usar componentes grandes mejora el rendimiento, y utilizar componentes pequeños de grano fino aumenta la mantenibilidad. si tanto el rendimiento como la man-tenibilidad son requerimientos importantes del sistema, entonces debe encontrarse algún compromiso. esto en ocasiones se logra usando diferentes patrones o estilos arquitectó-nicos para distintas partes del sistema. evaluar un diseño arquitectónico es difícil porque la verdadera prueba de una arqui-tectura es qué tan bien el sistema cubre sus requerimientos funcionales y no funcionales cuando está en uso. sin embargo, es posible hacer cierta evaluación al comparar el diseño contra arquitecturas de referencia o patrones arquitectónicos genéricos. para ayudar con la evaluación arquitectónica, también puede usarse la descripción de bosch (2000) de las características no funcionales de los patrones arquitectónicos. 6.2 vistas arquitectónicas en la introducción a este capítulo se explicó que los modelos arquitectónicos de un sistema de software sirven para enfocar la discusión sobre los requerimientos o el diseño del soft-ware. de manera alternativa, pueden emplearse para documentar un diseño, de modo que se usen como base en el diseño y la implementación más detallados, así como en la evo-lución futura del sistema. en esta sección se estudian dos temas que son relevantes para ambos: 1. ¿qué vistas o perspectivas son útiles al diseñar y documentar una arquitectura del sistema? 2. ¿qué notaciones deben usarse para describir modelos arquitectónicos? es imposible representar toda la información relevante sobre la arquitectura de un sistema en un solo modelo arquitectónico, ya que cada uno presenta únicamente una vista o perspectiva del sistema. ésta puede mostrar cómo un sistema se descompone en módulos, cómo interactúan los procesos de tiempo de operación o las diferentes formas en que los componentes del sistema se distribuyen a través de una red. todo ello es útil en diferentes momentos de manera que, para el diseño y la documentación, por lo general se necesita presentar múltiples vistas de la arquitectura de software. existen diferentes opiniones relativas a qué vistas se requieren. krutchen (1995), en su bien conocido modelo de vista 4+1 de la arquitectura de software, sugiere que deben existir cuatro vistas arquitectónicas fundamentales, que se relacionan usando casos de uso o escenarios. las vistas que él sugiere son: 1. una vista lógica, que indique las abstracciones clave en el sistema como objetos o clases de objeto. en este tipo de vista se tienen que relacionar los requerimientos del sistema con entidades. m06_sommerville_ingenieria_1ed_se_147-175.indd  153m06_sommerville_ingenieria_1ed_se_147-175.indd  153 3/18/11  4:49:07 pm3/18/11  4:49:07 pm