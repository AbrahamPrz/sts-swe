524 parte tres administración de la calidad torno de desarrollo que se usa para crear software también puede colocarse bajo control de la configuración. todos los ics se almacenan dentro de un repositorio que implementa un con-junto de mecanismos y estructuras de datos para asegurar la integridad de los datos, proporcio-nar apoyo de integración para otras herramientas de software (información de apoyo que com-parte entre todos los miembros del equipo de software) e implementar funciones de apoyo al control de versiones y de cambios. una vez desarrollado y revisado el objeto de configuración, se convierte en línea de referen- cia. los cambios a un objeto convertido en línea de referencia dan como resultado la creación de una nueva versión de dicho objeto. la evolución de un programa puede rastrearse al exami-nar la historia de revisión de todos los objetos de configuración. el control de versiones es el conjunto de procedimientos y herramientas que sirven para administrar el uso de dichos ob-jetos. el control de cambios es una actividad procedimental que garantiza la calidad y la consisten- cia conforme se realizan cambios a un objeto de configuración. el proceso de control de cam-bios comienza con una petición de cambios, conduce a una decisión para hacer o rechazar la petición del cambio y culmina con una actualización controlada del ics que debe cambiarse. la auditoría de la configuración es una actividad sqa que ayuda a garantizar que la calidad se conserva conforme se realizan cambios. el reporte de estado proporciona información acerca de cada cambio a quienes necesitan conocerla. la administración de la configuración para webapps es similar en muchos aspectos a la acs para software convencional. sin embargo, cada una de las tareas núcleo acs debe dinamizarse para hacerla tan magra como sea posible y deben implementarse provisiones especiales para la administración del contenido.  problemas y puntos por evaluar 22.1. ¿por qué es verdadera la primera ley de la ingeniería de sistemas? ofrezca ejemplos específicos para cada una de las cuatro razones fundamentales para el cambio. 22.2. ¿cuáles son los cuatro elementos que existen cuando se implementa un sistema acs efectivo? analice cada uno brevemente. 22.3. explique con sus palabras las razones para las líneas de referencia.22.4. suponga que usted es el gerente de un proyecto pequeño. ¿qué líneas de referencia definiría para el proyecto y cómo las controlaría? 22.5. diseñe un sistema de base de datos de proyecto (repositorio) que permitiría a un ingeniero del soft- ware almacenar, poner referencias cruzadas, rastrear, actualizar y cambiar todos los ítems de configuración de software importantes. ¿cómo manejaría la base de datos diferentes versiones del mismo programa? ¿el código fuente se manejaría de manera diferente a la documentación? ¿cómo se prohibiría a dos desarrolla-dores hacer diferentes cambios al mismo tiempo a un mismo ics? 22.6. investigue una herramienta acs existente y describa cómo implementa control para versiones, va- riantes y objetos de configuración en general. 22.7. las relaciones <parte de> e <interrelacionado> representan relaciones simples entre objetos de con- figuración. describa cinco relaciones adicionales que puedan ser útiles en el contexto de un repositorio acs. 22.8. investigue acerca de una herramienta acs existente y describa cómo implementa la mecánica de control de versiones. de manera alternativa, lea dos o tres ensayos acerca de acs y describa las diferentes estructuras de datos y mecanismos de referencia que se usan para el control de versiones. 22.9. desarrolle una lista de verificación para usar durante las auditorías de configuración.22.10. ¿cuál es la diferencia entre una auditoría acs y una revisión técnica? ¿su función puede plegarse en una revisión? ¿cuáles son los pros y los contras? 22pressman(501-525).indd  52422pressman(501-525).indd  524 19/1/10  17:12:1419/1/10  17:12:14