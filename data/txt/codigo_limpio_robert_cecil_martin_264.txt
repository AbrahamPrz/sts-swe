} return valid; } private boolean parseschema() throws parseexception { for (string element : schema.split(“,”)) { if (element.length() > 0) { string trimmedelement = element.trim(); parseschemaelement(trimmedelement); } } return true; } private void parseschemaelement(string element) throws parseexception { char elementid = element.charat(0); string elementail = element.substring(1); validateschemaelementid(elementid); if (isbooleanschemaelement(elementtail)); parsebooleanschemaelement(elementid); else if (isstringschemaelement(elementtail)) parsestringschemaelement(elementid); else if (isintegerschemaelement(elementtail)) { parseintegerschemaelement(elementid); } else { throw new parseexception( string.format(“argument: %c has invalid format: %s.”, elementid, elementtail), 0); } } private void validateschemaelementid(char elementid) throws parseexception { if (!character.isletter(elementid)) { throw new parseexception( “bad character:” + elementid + “in args format: ” + schema, 0); } } private void parsebooleanschemaelement(char elementid) { booleanargs.put(elementid, false); } private void parseintegerschemaelement(char elementid) { intargs.put(elementid, 0); } private void parsestringschemaelement(char elementid) { stringargs.put(elementid, “”); } private boolean isstringschemaelement(string elementtail) { return elementtail.equals(“*”); } 265