86 parte dos modelado relativamente sencilla: cada módulo debe tener poco acoplamiento con otros módulos, fuentes de datos y otros aspectos ambientales. principio 6. buscar patrones. brad appleton [app00] sugiere que: el objetivo de los patrones dentro de la comunidad de software es crear un cúmulo de bibliografía que ayude a los desarrolladores de software a resolver problemas recurrentes que surgen a lo largo del desarrollo. los patrones ayudan a crear un lenguaje compartido para comunicar perspectiva y experiencia acerca de dichos patrones y sus soluciones. la codificación formal de estas soluciones y sus relaciones permite acumular con éxito el cuerpo de conocimientos que define nuestra com-prensión de las buenas arquitecturas que satisfacen las necesidades de sus usuarios. principio 7. cuando sea posible, representar el problema y su solución desde varias perspectivas diferentes. cuando un problema y su solución se estudian desde varias perspectivas distintas, es más probable que se tenga mayor visión y que se detecten los errores y omisiones. por ejemplo, un modelo de requerimientos puede representarse con el empleo de un punto de vista orientado a los datos, a la función o al comportamiento (véanse los capítulos 6 y 7). cada uno brinda un punto de vista diferente del problema y de sus requerimientos. principio 8. tener en mente que alguien dará mantenimiento al software. el soft- ware será corregido en el largo plazo, cuando se descubran sus defectos, se adapte a los cambios de su ambiente y se mejore en el momento en el que los participantes pidan más capacidades. estas actividades de mantenimiento resultan más fáciles si se aplica una prác-tica sólida de ingeniería de software a lo largo del proceso de software. estos principios no son todo lo que se necesita para elaborar software de alta calidad, pero establecen el fundamento para todos los métodos de ingeniería de software que se estudian en este libro. 4.3 principios que guían toda actividad estructural en las secciones que siguen se consideran los principios que tienen mucha relevancia para el éxito de cada actividad estructural genérica, definida como parte del proceso de software. en muchos casos, los principios que se estudian para cada una de las actividades estructurales son un refinamiento de los principios presentados en la sección 4.2. tan sólo son principios funda-mentales planteados en un nivel más bajo de abstracción. 4.3.1 principios de comunicación antes de que los requerimientos del cliente se analicen, modelen o especifiquen, deben reca-barse a través de la actividad de comunicación. un cliente tiene un problema que parece abor-dable mediante una solución basada en computadora. usted responde a la solicitud de ayuda del cliente. ha comenzado la comunicación. pero es frecuente que el camino que lleva de la comunicación a la comprensión esté lleno de agujeros. la comunicación efectiva (entre colegas técnicos, con el cliente y otros participantes, y con los gerentes de proyecto) se encuentra entre las actividades más difíciles que deben enfrentarse. en este contexto, aquí se estudian principios de comunicación aplicados a la comunicación con el cliente. sin embargo, muchos de ellos se aplican por igual en todas las formas de comunica-ción que ocurren dentro de un proyecto de software. principio 1. escuchar. trate de centrarse en las palabras del hablante en lugar de for-mular su respuesta a dichas palabras. si algo no está claro, pregunte para aclararlo, pero evite las interrupciones constantes. si una persona habla, nunca parezca usted beligerante en sus palabras o actos (por ejemplo, con giros de los ojos o movimientos de la cabeza).use patrones (véase el capítulo 12) a fin de acumular conocimiento y experiencia para las futuras generaciones de ingenieros de software.consejo cita: “el ingeniero ideal es una mez-cla… no es un científico, no es un matemático, no es un soció-logo ni un escritor; pero para resolver problemas de ingenie-ría utiliza conocimiento y técnicas de algunas o de todas esas disciplinas.” n. w. dougherty 04pressman(081-100).indd  8604pressman(081-100).indd  86 26/1/10  17:31:5726/1/10  17:31:57