5.5 ■ ingeniería dirigida por modelo 141 previsible se necesitará la intervención humana, lo que se indica mediante una figura ilustrativa en la figura 5.19. los cim se relacionan, y parte del proceso de traducción puede involucrar conceptos de vinculación en diferentes cim. por ejemplo, el concepto de un papel en un cim de seguridad que puede trazarse dentro del concepto de un miem-bro de personal en un cim de hospital. mellor y balcer (2002) dan el nombre de “puen-tes” a la información que soporta el mapeo de un cim a otro. la traducción de pim a psm es más madura y se dispone de varias herramientas comerciales que proporcionan traductores de pim a plataformas comunes como java y j2ee. éstas se apoyan en una extensa librería de reglas y patrones específicos de pla-taforma para convertir el pim al psm. puede haber muchos psm para cada pim en el sistema. si se tiene la intención de que un sistema de software funcione en diferentes plataformas (por ejemplo j2ee y .net), entonces sólo es necesario mantener el pim. los psm para cada plataforma se generan automáticamente. esto se ilustra en la figura 5.20. aunque las herramientas de soporte mda incluyen traductores específicos de pla-taforma, es frecuente el caso de que sólo ofrezcan soporte parcial para la traducción de pim a psm. en la gran mayoría de los casos, el entorno de ejecución para un sistema es más que la plataforma de ejecución estándar (por ejemplo, j2ee, .net, etcétera). también incluye otros sistemas de aplicación, librerías de aplicación que son específicas a una compañía y librerías de interfaz de usuario. como éstas varían significativamente de una compañía a otra, no está disponible un soporte estándar para herramientas. por lo tanto, cuando se introduce mda, quizá deban crearse traductores de propósito especial que tomen en cuenta las características del entorno local. en algunos casos (por ejemplo, para generación de interfaz de usuario), la traducción de pim a psm completamente automatizada es imposible. existe una relación difícil entre métodos ágiles y arquitectura dirigida por modelo. la noción de modelado frontal extenso contradice las ideas fundamentales del manifiesto ágil y se conjetura que pocos desarrolladores ágiles se sienten cómodos con la ingeniería dirigida por modelo. los desarrolladores de mad afirman que se tiene la intención de apoyar un enfoque iterativo para el desarrollo y, por lo tanto, puede usarse dentro de los métodos ágiles (mellor et al., 2004). si las transformaciones pueden automatizarse com-pletamente y a partir de un pim se genera un programa completo, entonces, en principio, mda podría usarse en un proceso de desarrollo ágil, ya que no se requeriría codificación separada. sin embargo, hasta donde se sabe, no hay herramientas de mda que soporten prácticas como las pruebas de regresión y el desarrollo dirigido por pruebas.modelo independiente de plataformaprograma java generador código c#generador código javatraductor j2ee traductor .net programa c#modelo específico j2ee modelo específico .netfigura 5.20 múltiples modelos específicos de plataforma m05_sommerville_ingenieria_1ed_se_118-146.indd  141m05_sommerville_ingenieria_1ed_se_118-146.indd  141 3/18/11  4:48:18 pm3/18/11  4:48:18 pm