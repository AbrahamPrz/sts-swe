468  Capítulo 17 ■ Ingeniería de software basada en componentes  El problema en el lanzador Ariane 5 surgió porque las suposiciones acerca del soft- ware para el Ariane 4 eran inválidas para el Ariane 5. Éste es un problema general con los componentes de reutilización. Originalmente se implementan para un entorno de aplica-ción y, como es natural, se incrustan suposiciones acerca de ese entorno. Tales conjeturas se documentan pocas veces, así que, cuando se reutiliza el componente, es imposible efectuar pruebas para comprobar si las suposiciones todavía son válidas. Si usted reuti-liza un componente en un entorno distinto, es posible que no descubra las suposiciones ambientales incrustadas sino hasta que use el componente en un sistema operativo.  1 7.3 Composición de componentes La composición de componentes es el proceso de integrar componentes uno con otro y con “código pegamento” especialmente escrito para crear un sistema u otro componente. Existen muchas formas diferentes en las que se pueden componer componentes, como se muestra en la figura 17.10. De izquierda a derecha, dichos diagramas ilustran la com-posición secuencial, la composición jerárquica y la composición aditiva. En el siguiente análisis suponga que compone dos componentes (A y B) para crear uno nuevo: 1. La composición secuencial es la situación (a) en la figura 17.10. Usted crea un  nuevo componente a partir de dos componentes existentes al llamar en secuencia a los componentes existentes. Puede considerar a la composición como una composi-ción de las “interfaces proporciona”. Esto es, se llaman los servicios ofrecidos por el componente A y luego los resultados emitidos por A se usan en la llamada a los servicios que ofrece el componente B. Los componentes no se llaman mutuamente en composición secuencial. Se requiere algún código pegamento adicional para lla-mar los servicios del componente en el orden correcto y asegurar que los resultados entregados por el componente A sean compatibles con las entradas esperadas por el componente B. La interfaz “proporciona” de la composición depende de la fun-cionalidad combinada de A y B, pero generalmente no será una composición de sus “interfaces proporciona”. Este tipo de composición puede usarse con componentes que son elementos de programa o con componentes que son servicios. 2. La composición jerárquica es la situación (b) en la figura 17.10. Este tipo de compo-sición ocurre cuando un componente llama directamente a los servicios que ofrece otro componente. El componente llamado proporciona los servicios que requiere el componente que llama. Por lo tanto, la interfaz “proporciona” del componente lla-mado debe ser compatible con la interfaz “requiere” del componente que llama. El componente A llama al componente B directamente y, si sus interfaces coinciden, tal vez no haya necesidad de un código adicional. Sin embargo, si existe una discordan-cia entre la interfaz “requiere” de A y la interfaz “proporciona” de B, entonces puede requerirse algún código de conversión. Como los servicios no tienen una interfaz “requiere”, este modo de composición no se usa cuando los componentes se imple-mentan como servicios Web. 3. La composición aditiva corresponde a la situación (c) en la figura 17.10. Esto ocurre cuando dos o más componentes se juntan (se suman) para crear un nuevo  M17_SOMMERVILLE_INGENIERIA_1ED_SE_452-478.indd   468M17_SOMMERVILLE_INGENIERIA_1ED_SE_452-478.indd   468 3/18/11   5:03:05 PM3/18/11   5:03:05 PM