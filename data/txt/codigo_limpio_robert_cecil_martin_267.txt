public string errormessage() throws exception { switch (errorcode) { case ok: throw new exception(“tilt: should not get here.”); case unexpected_argument: return unexpectedargumentmessage(); case missing_string: return string.format(“could not find string parameter for -%c.”, errorargumentid); case invalid_integer: return string.format(“argument - %c expects an integer but was ‘%s’.”, errorargumentid, errorparameter); case missing_integer: return string.format(“could not find integer parameter for -%c.”, errorargumentid); } return “”; } private string unexpectedargumentmessage() { stringbuffer message = new stringbuffer(“arguments(s) -”); for (char c : unexpectedarguments) { message.append(c); } message.append(“ unexpected.”); return message.tostring(); } private boolean falseifnull(boolean b) { return b != null && b; } private int zeroifnull(integer i) { return i == null ? 0 : i; } private string blankifnull(string s) { return s = null ? “” : s; } public string getstring(char arg) { return blankifnull(stringargs.get(arg)); } public int getint(char arg) { return zeroifnull(intargs.get(arg)); } public boolean getboolean(char arg) { return falseifnull(booleanargs.get(arg)); } public boolean has(char arg) ( 268