386 capítulo 14 ■ ingeniería de seguridad de una configuración, es más probable que especifique los errores y las omisiones. lo ideal es que una pantalla de configuración también pueda destacar los aspectos de la configuración que sean potencialmente inseguros, por ejemplo, si no se esta-bleció una contraseña. 2. minimizar los privilegios por defecto el software debe diseñarse de forma que la configuración por defecto de un sistema ofrezca mínimos privilegios esenciales. de esta forma, el daño que cualquier atacante pudiera hacer quedará limitado. por ejemplo, la autenticación por defecto del administrador del sistema sólo debe per-mitir el acceso a un programa que permita a un administrador establecer nuevas credenciales. debe prohibir el acceso a alguna otra instalación del sistema. una vez establecidas las nuevas credenciales, deben borrarse automáticamente por defecto el nombre y la contraseña. 3. localizar parámetros de configuración cuando se diseñe soporte para la configu-ración del sistema, habrá que asegurarse de que todo en una configuración que afecte la misma parte de un sistema se configure en el mismo lugar. nuevamente con el ejemplo del procesador de texto, en la versión que se utilizó, pudo configurarse alguna información de seguridad, como una contraseña para controlar el acceso al documento, en el menú preferencias/seguridad. otra información se configura en el menú herramientas/proteger documento. si no se localiza la información de con-figuración, es fácil olvidar configurarla o, en algunos casos, ni siquiera se estará al tanto de que en el sistema se incluyen algunas instalaciones de seguridad. 4. proporcionar formas sencillas de corregir vulnerabilidades de seguridad hay que incluir mecanismos directos para actualizar el sistema y reparar las vulnerabilidades de seguridad que se hayan descubierto. éstos podrían incluir comprobación auto-mática para actualizaciones de seguridad, o la descarga de dichas actualizaciones tan pronto como estén disponibles. es importante que los usuarios no puedan pasar por alto dichos mecanismos pues, inevitablemente, considerarán otro trabajo como más importante. existen muchos ejemplos registrados de problemas de seguridad mayores que surgen (por ejemplo, falla completa de una red hospitalaria) porque los usuarios no actualizaron su software cuando se les pidió que lo hicieran. 1 4.3 supervivencia del sistema hasta el momento, se estudió la ingeniería de seguridad desde la perspectiva de una apli-cación que está bajo desarrollo. el proveedor y el desarrollador del sistema tienen control sobre todos los aspectos del sistema que pudieran atacarse. en realidad, como se sugiere en la figura 14.1, los modernos sistemas distribuidos se apoyan necesariamente en una infraestructura que incluye sistemas comerciales y componentes reutilizables desarrolla-dos por diferentes organizaciones. la seguridad de dichos sistemas no depende sólo de las decisiones de diseño locales, sino también de la seguridad de aplicaciones externas, servicios web y la infraestructura de red. esto significa que, sin importar cuánta atención se ponga a la seguridad, no es posible garantizar que un sistema podrá resistir ataques externos. en consecuencia, para sistemas complejos en red, debe suponerse que es posible la penetración y que la integridad del sistema no está garantizada. por lo tanto, se debe pensar en cómo hacer que el sistema sea resistente, de manera que sobreviva para entregar servicios esenciales a los usuarios. m14_sommerville_ingenieria_1ed_se_366-392.indd  386m14_sommerville_ingenieria_1ed_se_366-392.indd  386 3/18/11  5:00:14 pm3/18/11  5:00:14 pm