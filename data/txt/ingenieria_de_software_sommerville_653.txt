636  Capítulo 23 ■ Planeación de proyectos  La mayoría de los modelos de estimación algorítmica tienen un componente expo- nencial ( B en la ecuación anterior) que se relaciona con el tamaño y la complejidad del  sistema. Esto refleja el hecho de que los costos no aumentan con regularidad linealmente con el tamaño del proyecto. Conforme se incrementa el tamaño y la complejidad del software, se incurre en costos adicionales debido a los costos generales de comunicación de los equipos más grandes, la administración de configuración más compleja, la integra-ción de sistemas más difícil, etcétera. Cuanto más complejo sea el sistema, más afectarán al costo estos factores. Por lo tanto, el valor de  B aumenta normalmente con el tamaño y  la complejidad del sistema. Todos los modelos algorítmicos tienen problemas similares: 1. Con frecuencia es difícil estimar el  Tamaño  en una etapa temprana del proyecto,  cuando sólo está disponible la especificación. Las estimaciones de punto de función  y punto de aplicación (véase más adelante) son más fáciles de producir que las esti-maciones de tamaño del código, pero por lo general aún son imprecisas. 2. Las estimaciones de los factores que contribuyen a  B y M son subjetivas. Las estima- ciones varían de una persona a otra, dependiendo de sus antecedentes y experiencia con el tipo de sistema que se desarrolla.  La estimación precisa del tamaño del código es difícil en una etapa temprana de un pro-yecto, porque el tamaño del programa final depende de decisiones de diseño que pueden no haberse hecho cuando se requirió la estimación. Por ejemplo, una aplicación que requiere ges tión de datos de alto rendimiento puede implementar su propio sistema de gestión de datos o usar un sistema de base de datos comercial. En la estimación inicial del costo, no es pro-bable que se conozca si existe un sistema de base de datos comercial que se desempeñe bas-tante bien para cumplir los requerimientos de rendimiento. Por lo tanto, se desconoce cuánto código de gestión de datos se incluirá en el sistema. El lenguaje de programación usado para desarrollar el sistema afecta también el número de líneas de código a desarrollar. Un lenguaje como Java puede significar que se necesiten más líneas de código que si se usa C (por ejemplo). Sin embargo, este código adicional permite más comprobación de tiempo de compilación, de manera que es proba-ble que se reduzcan los costos de validación. ¿Cómo debe tomarse esto en cuenta? Más aún, se puede reutilizar una cantidad significativa de código de proyectos anteriores, así que tendrá que ajustarse la estimación del tamaño para tomar esto en cuenta. Los modelos algorítmicos de costo son una forma sistemática de estimar el esfuerzo requerido para desarrollar un sistema, aunque dichos modelos son complejos y difíciles de usar. Existen muchos atributos y un margen considerable para la incertidumbre al estimar sus valores. Esta complejidad desalienta a los usuarios potenciales y, por lo tanto, la aplicación práctica del modelado algorítmico de costos se limita a un número pequeño de compañías. Otra barrera que desalienta el uso de los modelos algorítmicos es la necesidad de la calibración. Los usuarios del modelo deben calibrar sus modelos y valores de los atri-butos con sus datos históricos de proyecto, pues ello refleja la práctica y la experiencia locales. Sin embargo, muy pocas organizaciones recaban suficientes datos de proyectos anteriores en una forma que soporte la calibración del modelo. En consecuencia, el uso práctico de modelos algorítmicos debe comenzar con los valores publicados para los parámetros del modelo. Es casi imposible que un modelador sepa qué tan estrechamente se relacionan éstos con su organización. M23_SOMMERVILLE_INGENIERIA_1ED_SE_618-650.indd   636M23_SOMMERVILLE_INGENIERIA_1ED_SE_618-650.indd   636 3/18/11   5:10:39 PM3/18/11   5:10:39 PM