14 capítulo 1 el software y la ingeniería de software aseguramiento de la calidad del software: define y ejecuta las actividades requeridas para garantizar la calidad del software. revisiones técnicas: evalúa los productos del trabajo de la ingeniería de software a fin de descubrir y eliminar errores antes de que se propaguen a la siguiente actividad. medición: define y reúne mediciones del proceso, proyecto y producto para ayudar al equipo a entregar el software que satisfaga las necesidades de los participantes; puede usarse junto con todas las demás actividades estructurales y sombrilla. administración de la configuración del software: administra los efectos del cambio a lo largo del proceso del software.administración de la reutilización: define criterios para volver a usar el producto del trabajo (incluso los componentes del software) y establece mecanismos para obtener com-ponentes reutilizables. preparación y producción del producto del trabajo: agrupa las actividades requeridas para crear productos del trabajo, tales como modelos, documentos, registros, formatos y listas. cada una de estas actividades sombrilla se analiza en detalle más adelante. ya se dijo en esta sección que el proceso de ingeniería de software no es una prescripción rígida que deba seguir en forma dogmática el equipo que lo crea. al contrario, debe ser ágil y adaptable (al problema, al proyecto, al equipo y a la cultura organizacional). por tanto, un pro-ceso adoptado para un proyecto puede ser significativamente distinto de otro adoptado para otro proyecto. entre las diferencias se encuentran las siguientes: • flujo general de las actividades, acciones y tareas, así como de las interdependencias entre ellas • grado en el que las acciones y tareas están definidas dentro de cada actividad estruc- tural • grado en el que se identifican y requieren los productos del trabajo • forma en la que se aplican las actividades de aseguramiento de la calidad • manera en la que se realizan las actividades de seguimiento y control del proyecto • grado general de detalle y rigor con el que se describe el proceso • grado con el que el cliente y otros participantes se involucran con el proyecto • nivel de autonomía que se da al equipo de software • grado con el que son prescritos la organización y los roles del equipo en la parte 1 de este libro, se examinará el proceso de software con mucho detalle. los modelos de proceso prescriptivo (capítulo 2) enfatizan la definición, la identificación y la aplicación deta- lladas de las actividades y tareas del proceso. su objetivo es mejorar la calidad del sistema, desarrollar proyectos más manejables, hacer más predecibles las fechas de entrega y los costos, y guiar a los equipos de ingenieros de software cuando realizan el trabajo que se requiere para construir un sistema. desafortunadamente, ha habido casos en los que estos objetivos no se han logrado. si los modelos prescriptivos se aplican en forma dogmática y sin adaptación, pueden incrementar el nivel de burocracia asociada con el desarrollo de sistemas basados en compu-tadora y crear inadvertidamente dificultades para todos los participantes. los modelos de proceso ágil (capítulo 3) ponen el énfasis en la “agilidad” del proyecto y siguen un conjunto de principios que conducen a un enfoque más informal (pero no menos efectivo, dicen sus defensores) del proceso de software. por lo general, se dice que estos modelos del proceso son “ágiles” porque acentúan la maniobrabilidad y la adaptabilidad. son apropiados para muchos tipos de proyectos y son útiles en particular cuando se hace ingeniería sobre apli-caciones web.punto clave la adaptación del proceso de software es esencial para el éxito del proyecto. ¿qué diferencias existen entre los modelos del proceso?? cita: “siento que una receta es sólo un tema que una cocinera inteli-gente ejecuta con una variación en cada ocasión.” madame benoit ¿qué caracteriza a un proceso “ágil”?? 01pressman(001-024).indd  1401pressman(001-024).indd  14 14/1/10  13:31:0014/1/10  13:31:00