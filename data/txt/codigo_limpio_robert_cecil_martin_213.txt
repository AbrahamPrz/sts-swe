public abstract void setStreetAddr2(String street2); public abstract void setcity(String city); public abstract void setState(String state); public abstract void setZipCode(String zip); public abstract Collection getAccounts(); public abstract void setAccounts(Collection accounts); public void addAccount(AccountPTO accountDTO) { InitialContext context = new InitialContext(); AccountHomeLocal accountHome = context.lookup(“AccountHomeLocal”); AccountLocal account = accountHome.create(accountDTO); Collection accounts = getAccounts(); accounts.add(account); } // Lógica del contenedor EJB public abstract void setId(Integer id); public abstract Integer getId(); public Integer ejbCreate(Integer id) {…} public void ejbPostCreate(Integer id) {…} // El resto tendría que implementarse pero se deja vacío: public void setEntityContext(EntityContext ctxt) {} public void unsetEntityContext() {} public void ejbActivate() {} public void ejbPassivate() {} public void ejbLoad() {} public void ejbStore() {} public void ejbRemove() {} } No mostramos la correspondiente interfaz  LocalHome , básicamente una factoría usada para crear objetos, no los métodos de consulta  Bank  que pueda añadir. Por último, debemos crear uno o varios descriptores de implementación XML que especifiquen los detalles de asignación relacional de objetos en un almacén persistente, el comportamiento deseado de la transacción, limitaciones de seguridad y demás. La lógica empresarial está directamente conectada al contenedor de la aplicación EJB2. Debe crear subclases de tipos de contenedor y proporcionar los métodos de ciclo vital necesarios para el contenedor. Debido a esta conexión al contenedor pesado, las pruebas de unidad aisladas son complicadas. Es necesario imitar el contenedor, algo difícil, o perder demasiado tiempo en la implementación de EJB y pruebas en un servidor real. La reutilización fuera de la arquitectura EJB2 es imposible, debido a esta estrecha conexión. Por último, incluso la programación orientada a objetos se ve afectada. Un bean no se puede heredar de otro. Fíjese en la lógica para 214