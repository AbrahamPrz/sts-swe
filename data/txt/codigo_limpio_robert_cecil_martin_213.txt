public abstract void setstreetaddr2(string street2); public abstract void setcity(string city); public abstract void setstate(string state); public abstract void setzipcode(string zip); public abstract collection getaccounts(); public abstract void setaccounts(collection accounts); public void addaccount(accountpto accountdto) { initialcontext context = new initialcontext(); accounthomelocal accounthome = context.lookup(“accounthomelocal”); accountlocal account = accounthome.create(accountdto); collection accounts = getaccounts(); accounts.add(account); } // lógica del contenedor ejb public abstract void setid(integer id); public abstract integer getid(); public integer ejbcreate(integer id) {…} public void ejbpostcreate(integer id) {…} // el resto tendría que implementarse pero se deja vacío: public void setentitycontext(entitycontext ctxt) {} public void unsetentitycontext() {} public void ejbactivate() {} public void ejbpassivate() {} public void ejbload() {} public void ejbstore() {} public void ejbremove() {} } no mostramos la correspondiente interfaz localhome , básicamente una factoría usada para crear objetos, no los métodos de consulta bank que pueda añadir. por último, debemos crear uno o varios descriptores de implementación xml que especifiquen los detalles de asignación relacional de objetos en un almacén persistente, el comportamiento deseado de la transacción, limitaciones de seguridad y demás. la lógica empresarial está directamente conectada al contenedor de la aplicación ejb2. debe crear subclases de tipos de contenedor y proporcionar los métodos de ciclo vital necesarios para el contenedor. debido a esta conexión al contenedor pesado, las pruebas de unidad aisladas son complicadas. es necesario imitar el contenedor, algo difícil, o perder demasiado tiempo en la implementación de ejb y pruebas en un servidor real. la reutilización fuera de la arquitectura ejb2 es imposible, debido a esta estrecha conexión. por último, incluso la programación orientada a objetos se ve afectada. un bean no se puede heredar de otro. fíjese en la lógica para 214