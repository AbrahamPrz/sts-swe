100 final serialdate jan9y2002 = serialdate.addmonths(2, this.nov9y2001); 101 final serialdate answer = serialdate.createinstance(9, 1, 2002); 102 assertequals(answer, jan9y2002); 103 } 104 105 /** 106 * caso de prueba de un error, ya corregido. 107 */ 108 public void testaddmonthsto5oct2003() { 109 final serialdate d1 = serialdate.createinstance(5, monthconstants.october, 2003); 110 final serialdate d2 = serialdate.addmonths(2, d1); 111 assertequals(d2, serialdate.createinstance(5, monthconstants.december, 2003)); 112 } 113 114 /** 115 * caso de prueba de un error, ya corregido. 116 */ 117 public void testaddmonthsto1jan2003() { 118 final serialdate d1 = serialdate.createinstance(1, monthconstants.january, 2003); 119 final serialdate d2 = serialdate.addmonths(0, d1); 120 assertequals(d2, d1); 121 } 122 123 /** 124 * el lunes anterior al viernes 9 de noviembre de 2001 debe ser el 5 de noviembre. 125 */ 126 public void testmondayprecedingfriday9nov2001() { 127 serialdate mondaybefore = serialdate.getpreviousdayofweek( 128 serialdate.monday, this.nov9y2001 129 ); 130 assertequals(5, mondaybefore.getdayofmonth()); 131 } 132 133 /** 134 * el lunes posterior al viernes 9 de noviembre de 2001 debe ser el 12 de noviembre. 135 */ 136 public void testmondayfollowingfriday9nov2001() { 137 serialdate mondayafter = serialdate.getfollowingdayofweek( 138 serialdate.monday, this.nov9y2001 139 ); 465