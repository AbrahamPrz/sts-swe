mitos e imprecisiones también existen motivos evidentes para adoptar la concurrencia aunque, como indicamos antes, sea complicada. si no presta la suficiente atención, pueden darse casos desagradables. veamos los mitos e imprecisiones más habituales: la concurrencia siempre mejora el rendimiento : en ocasiones lo hace pero sólo cuando se puede compartir tiempo entre varios procesos o procesadores. ninguna situación es trivial. el diseño no cambia al crear programas concurrentes : de hecho, el diseño de un algoritmo concurrente puede ser muy distinto al de un sistema de un solo proceso. la desvinculación entre el qué y el cuándo suele tener un efecto importante en la estructura del sistema. no es importante entender los problemas de concurrencia al trabajar con un contenedor web o ejb : en realidad, debe saber lo que hace su contenedor y protegerlo de problemas de actualizaciones concurrentes y bloqueo, como veremos después. veamos otros aspectos relacionados con la creación de software concurrente: la concurrencia genera cierta sobrecarga , tanto en rendimiento como en la creación de código adicional. la concurrencia correcta es compleja , incluso para problemas sencillos. los errores de concurrencia no se suelen repetir , de modo que se ignoran [75] en lugar de considerarse verdaderos problemas. la concurrencia suele acarrear un cambio fundamental de la estrategia de diseño . desafíos ¿qué hace que la programación concurrente sea tan complicada? fíjese en la 238