Mitos e imprecisiones También existen motivos evidentes para adoptar la concurrencia aunque, como indicamos antes, sea complicada. Si no presta la suficiente atención, pueden darse casos desagradables. Veamos los mitos e imprecisiones más habituales: La concurrencia siempre mejora el rendimiento : En ocasiones lo hace pero sólo cuando se puede compartir tiempo entre varios procesos o procesadores. Ninguna situación es trivial. El diseño no cambia al crear programas concurrentes : De hecho, el diseño de un algoritmo concurrente puede ser muy distinto al de un sistema de un solo proceso. La desvinculación entre el qué y el cuándo suele tener un efecto importante en la estructura del sistema. No es importante entender los problemas de concurrencia al trabajar con un contenedor Web o EJB : En realidad, debe saber lo que hace su contenedor y protegerlo de problemas de actualizaciones concurrentes y bloqueo, como veremos después. Veamos otros aspectos relacionados con la creación de  software concurrente: La concurrencia genera cierta sobrecarga , tanto en rendimiento como en la creación de código adicional. La concurrencia correcta es compleja , incluso para problemas sencillos. Los errores de concurrencia no se suelen repetir , de modo que se ignoran [75]  en lugar de considerarse verdaderos problemas. La concurrencia suele acarrear un cambio fundamental de la estrategia de diseño . Desafíos ¿Qué hace que la programación concurrente sea tan complicada? Fíjese en la 238