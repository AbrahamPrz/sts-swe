5.5 ■ ingeniería dirigida por modelo 139 ven normalmente iguales. sin embargo, se considera que la mde tiene un ámbito más amplio que la mda. como se estudia más adelante en esta sección, la mda se enfoca en las etapas de diseño e implementación del desarrollo de software, mientras que la mde se interesa por todos los aspectos del proceso de ingeniería de software. por lo tanto, los temas como ingeniería de requerimientos basada en un modelo, procesos de software para desarrollo basado en un modelo, y pruebas basadas en un modelo son parte de mde, pero no, en este momento, de la mda. aunque la mda se usa desde 2001, la ingeniería basada en modelo aún está en una etapa temprana de desarrollo, y no es claro si tendrá o no un efecto significativo sobre la práctica de ingeniería de software. los principales argumentos a favor y en contra de mde son: 1. en favor de la mde la ingeniería basada en modelo permite a los ingenieros pen- sar sobre sistemas en un nivel de abstracción elevado, sin ocuparse por los deta-lles de su implementación. esto reduce la probabilidad de errores, acelera el diseño y el proceso de implementación, y permite la creación de modelos de aplicación reutilizables, independientes de la plataforma de aplicación. al usar herramientas poderosas, las implementaciones de sistema pueden generarse para diferentes pla-taformas a partir del mismo modelo. en consecuencia, para adaptar el sistema a alguna nueva plataforma tecnológica, sólo es necesario escribir un traductor para dicha plataforma. cuando está disponible, todos los modelos independientes de pla-taforma pueden reubicarse rápidamente en la nueva plataforma. 2. contra la mde como se analizó anteriormente en este capítulo, los modelos son una buena forma de facilitar las discusiones sobre un diseño de software. sin embargo, no siempre se sigue que las abstracciones que soporta el modelo son las abstrac-ciones correctas para la implementación. de este modo, es posible crear modelos de diseño informal, pero siendo así, el sistema se implementa usando un paquete configurable comercial (off-the-shelf). más aún, los argumentos para independen-cia de plataforma sólo son válidos para sistemas grandes de larga duración, donde las plataformas se vuelven obsoletas durante el tiempo de vida de un sistema. sin embargo, para esta clase de sistemas, se sabe que la implementación no es el princi-pal problema: ingeniería de requerimientos, seguridad y confiabilidad, integración con sistemas heredados, y las pruebas son más significativos. el omg reporta en sus páginas web (www.omg.org/mda/products_success.htm) his-torias de éxito reveladoras de la mde y el enfoque utilizado dentro de grandes compa-ñías como ibm y siemens. las técnicas se usaron con éxito en el desarrollo de grandes sistemas de software de larga duración, como sistemas de manejo de tráfico aéreo. no obstante, en el momento de escribir este texto, los enfoques dirigidos por modelo no son ampliamente usados por la ingeniería de software. como los métodos formales de la inge-niería de software, que se estudian en el capítulo 12, se considera que mde es un impor-tante desarrollo. pero, como también es el caso con los métodos formales, no es claro si los costos y riesgos de los enfoques dirigidos por modelo superan los posibles beneficios. 5.5.1 arquitectura dirigida por modelo la arquitectura dirigida por modelo (kleppe et al., 2003; mellor et al., 2004; stahl y voelter, 2006) es un enfoque orientado a un modelos para el diseño y la implementación de software, que usa un subconjunto de modelos uml para describir un sistema. aquí, se m05_sommerville_ingenieria_1ed_se_118-146.indd  139m05_sommerville_ingenieria_1ed_se_118-146.indd  139 3/18/11  4:48:18 pm3/18/11  4:48:18 pm