includeTeardownPages ,  includeSuiteTeardownPage  e includeTeardownPage . Argumentos de funciones El número ideal de argumentos para una función es cero. Después uno (monádico) y dos (diádico). Siempre que sea posible, evite la presencia de tres argumentos (triádico). Más de tres argumentos (poliádico) requiere una justificación especial y no es muy habitual. Los argumentos son complejos ya que requieren un gran poder conceptual. Por ello suelo evitarlos en los ejemplos. Fíjese en  StringBuffer . Podríamos haberlo pasado como argumento en lugar de como variable de instancia, pero los lectores habrían tenido que interpretarlo cada vez que lo vieran. Al leer la historia que cuenta el módulo, includeSetupPage()  es más sencillo de interpretar que includeSetupPageInto(newPageContent) . El argumento se encuentra en un nivel de abstracción diferente que el nombre de la función y nos obliga a conocer un detalle ( StringBuffer ) que no es especialmente importante en ese momento. Los argumentos son todavía más complicados desde un punto de vista de pruebas. Imagine la dificultad de crear todos los casos de prueba para garantizar el funcionamiento de las distintas combinaciones de argumentos. Si no hay argumentos, todo es más sencillo. Si hay uno, no es demasiado difícil. Con dos argumentos el problema es más complejo. Con más de dos argumentos, probar cada combinación de valores adecuados es todo un reto. Los argumentos de salida son más difíciles de entender que los de entrada. Al leer una función, estamos acostumbrados al concepto de información añadida 71