96 capítulo 4 ■ ingeniería de requerimientos 4.3.1 especificación en lenguaje natural desde los albores de la ingeniería de software, el lenguaje natural se usa para escribir los requerimientos de software. es expresivo, intuitivo y universal. también es potencial-mente vago, ambiguo y su significado depende de los antecedentes del lector. como resul-tado, hay muchas propuestas para formas alternativas de escribir los requerimientos. sin embargo, ninguna se ha adoptado de manera amplia, por lo que el lenguaje natural seguirá siendo la forma más usada para especificar los requerimientos del sistema y del software. para minimizar la interpretación errónea al escribir los requerimientos en lenguaje natural, se recomienda seguir algunos lineamientos sencillos: 1. elabore un formato estándar y asegúrese de que todas las definiciones de requeri- mientos se adhieran a dicho formato. al estandarizar el formato es menos probable cometer omisiones y más sencillo comprobar los requerimientos. el formato que usa el autor expresa el requerimiento en una sola oración. a cada requerimiento de usuario se asocia un enunciado de razones para explicar por qué se propuso el requerimiento. las razones también pueden incluir información sobre quién planteó el requerimiento (la fuente del requerimiento), de modo que usted conozca a quién consultar en caso de que cambie el requerimiento. 2. utilice el lenguaje de manera clara para distinguir entre requerimientos obligatorios y deseables. los primeros son requerimientos que el sistema debe soportar y, por lo general, se escriben en futuro “debe ser”. en tanto que los requerimientos deseables no son necesarios y se escriben en tiempo pospretérito o como condicional “debería ser”. 3. use texto resaltado (negrilla, cursiva o color) para seleccionar partes clave del requerimiento. 4. no deduzca que los lectores entienden el lenguaje técnico de la ingeniería de soft- ware. es fácil que se malinterpreten palabras como “arquitectura” y “módulo”. por lo tanto, debe evitar el uso de jerga, abreviaturas y acrónimos. 5. siempre que sea posible, asocie una razón con cada requerimiento de usuario. la razón debe explicar por qué se incluyó el requerimiento. es particularmente útil cuando los requerimientos cambian, pues ayuda a decidir cuáles cambios serían indeseables. la figura 4.9 ilustra cómo se usan dichos lineamientos. incluye dos requerimientos para el software embebido para la bomba de insulina automatizada, que se introdujo en el capítulo 1. usted puede descargar la especificación completa de los requerimientos de la bomba de insulina en las páginas web del libro.3.2 si se requiere, cada 10 minutos el sistema medirá el azúcar en la sangre y administrará insulina. ( los cambios de azúcar en la sangre son relativamente lentos, de manera que no son necesarias mediciones más frecuentes; la medición menos periódica podría conducir a niveles de azúcar innecesariamente elevados. ) 3.6 cada minuto, el sistema debe correr una rutina de autoevaluación, con las condiciones a probar y las acciones asociadas definidas en la tabla 1. (una rutina de autoevaluación puede detectar problemas de hardware y software, y prevenir al usuario sobre el hecho de que la operación normal puede ser imposible. ) figura 4.9 ejemplo de requerimientos para el sistema de software de la bomba de insulina m04_sommerville_ingenieria_1ed_se_082-117.indd  96m04_sommerville_ingenieria_1ed_se_082-117.indd  96 3/18/11  4:47:14 pm3/18/11  4:47:14 pm