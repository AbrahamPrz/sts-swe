REFERENCIAS 751 [Abb83] Abbott, R., “Program Design by Informal English Descriptions“, CACM, vol. 26, núm. 11, noviembre  1983, pp. 892-894. [ACM98] ACM/IEEE-CS Joint Task Force, Software Engineering Code of Ethics and Professional Practice, 1998,  disponible en www.acm.org/serving/se/code.htm. [Ada93] Adams, D., Mostly Harmless, Macmillan, 1993. [AFC88] Software Risk Abatement, AFCS/AFLC Pamphlet 800-845, U.S. Air Force, septiembre 30, 1988.[Agi03] The Agile Alliance Home Page, www.agilealliance.org/home.[Air99] Airlie Council, “Performance Based Management: The Program Manager’s Guide Based on the 16- Point Plan and Related Metrics”, Draft Report, marzo 8, 1999. [Aka04] Akao, Y., Quality Function Deployment, Productivity Press, 2004. [Ale77] Alexander, C., A Pattern Language, Oxford University Press, 1977.[Ale79] Alexander, C., The Timeless Way of Building, Oxford University Press, 1979.[Amb95] Ambler, S., “Using Use-Cases”, Software Development, julio 1995, pp. 53-61. [Amb98] Ambler, S., Process Patterns: Building Large-Scale Systems Using Object Technology , Cambridge Uni- versity Press/SIGS Books, 1998. [Amb01] Ambler, S., The Object Primer, 2a. ed., Cambridge University Press, 2001.[Amb02a] Ambler, S., “What Is Agile Modeling (AM)?” 2002, www.agilemodeling.com/index.htm.[Amb02b] Ambler, S. y R. Jeffries, Agile Modeling, Wiley, 2002.[Amb02c] Ambler, S., “UML Component Diagramming Guidelines”, disponible en www.  modelingstyle.info/,  2002. [Amb04] Ambler, S., “Examining the Cost of Change Curve”, en The Object Primer, 3a. ed.,  Cambridge University  Press, 2004. [Amb06] Ambler, S., “The Agile Unified Process (AUP)”, 2006, disponible en www.ambysoft.com/unifiedpro- cess/agileUP.html. [And06] Andrews, M. y J. Whittaker, How to Break Web Software: Functional and Security  Testing of Web Appli- cations and Web Services, Addison-Wesley, 2006. [ANS87] ANSI/ASQC A3-1987, Quality Systems Terminology, 1987.[Ant06] Anton, D. y C. Anton, ISO 9001 Survival Guide, 3a. ed., AEM Consulting Group, 2006.[AOS07] AOSD.net (Aspect-Oriented Software Development), glosario, disponible en http://aosd.net/wiki/ index.php?title=Glossary. [App00] Appleton, B., “Patterns and Software: Essential Concepts and Terminology”, febrero 2000, disponible  en www.cmcrossroads.com/bradapp/docs/patterns-intro.html. [App08] Apple Computer, Accessibility, 2008, disponible en www.apple.com/disability/.[Arl02] Arlow, J. y I. Neustadt, UML and the Unified Process, Addison-Wesley, 2002. [Arn89] Arnold, R. S., “Software Restructuring”, Proc. IEEE, vol. 77, núm. 4, abril 1989, pp. 607-617. [Art97] Arthur, L. J., “Quantum Improvements in Software System Quality”, CACM, vol. 40, núm. 6, junio 1997,  pp. 47-52. [Ast04] Astels, D., Test Driven Development: A Practical Guide, Prentice Hall, 2004. [Ave04] Aversan, L., et al., “Managing Coordination and Cooperation in Distributed Software Processes: The  GENESIS Environment”, Software Process Improvement and Practice, vol. 9,  Wiley Interscience, 2004, pp. 239-263. [Baa07] de Baar, B., “Project Risk Checklist”, 2007, disponible en www.softwareprojects.org/  project_riskma- nagement_starting62.htm. [Bab86] Babich, W. A., Software Configuration Management, Addison-Wesley, 1986. [Bac97] Bach, J., “Good Enough Quality: Beyond the Buzzword”, IEEE Computer, vol. 30, núm. 8, agosto 1997,  pp. 96-98. [Bac98] Bach, J., “The Highs and Lows of Change Control”, Computer , vol. 31, núm. 8, agosto 1998, pp. 113- 115. [Bae98] Baetjer , Jr., H., Software as Capital, IEEE Computer Society Press, 1998, p. 85. [Bak72] Baker, F. T., “Chief Programmer Team Management of Production Programming”, IBM Systems Jour- nal., vol. 11, núm. 1, 1972, pp. 56-73. [Ban06] Baniassad, E., et al., “Discovering Early Aspects”, IEEE Software, vol. 23, núm. 1,  enero-febrero, 2006,  pp. 61-69. [Bar06] Baresi, L., E. DiNitto y C. Ghezzi, “Toward Open-World Software: Issues and  Challenges”, IEEE   Computer, vol. 39, núm. 10, octubre 2006, pp. 36-43. [Bas84] Basili, V. R. y D. M. Weiss, “A Methodology for Collecting Valid Software Engineering Data”, IEEE  Trans. Software Engineering, vol. SE-10, 1984, pp. 728-738.REFERENCIAS 751 35Pressman(751-766)Refer.indd   75135Pressman(751-766)Refer.indd   751 2/2/10   11:41:162/2/10   11:41:16