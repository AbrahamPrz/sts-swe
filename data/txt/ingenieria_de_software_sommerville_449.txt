432  Capítulo 16 ■ Reutilización de software en el sistema. La arquitectura se define por las clases de objetos y sus interacciones. Las  clases se reutilizan directamente y pueden extenderse utilizando características como la herencia. Los frameworks se implementan como una colección de clases de objetos concretos y abstractos en un lenguaje de programación orientado a objetos. Por lo tanto, los fra-meworks son específicos del lenguaje. Existen frameworks disponibles en todos los len-guajes de programación orientados a objetos de uso común (por ejemplo, Java, C#, C++, así como lenguajes dinámicos como Ruby y Python). De hecho, un framework puede incorporar muchos otros frameworks, cada uno de los cuales se diseña para soportar el desarrollo de parte de la aplicación. Es posible usar un framework para crear una aplicación completa o implementar parte de una aplicación, como la interfaz de usuario gráfica. Fayad y Schmidt (1997) analizan tres clases de frameworks: 1. Frameworks de infraestructura de sistema  Dichos frameworks apoyan el desa- rrollo de infraestructuras de sistema como comunicaciones, interfaces de usuario y  compiladores (Schmidt, 1997). 2. Frameworks de integración de middleware  Consisten en un conjunto de están- dares y clases de objetos asociados que soportan comunicación de componentes e intercambio de información. Los ejemplos de este tipo de framework incluyen .NET de Microsoft y Enterprise Java Beans (EJB). Dichos frameworks brindan soporte para modelos estandarizados de componentes, como se estudia en el capítulo 17. 3. Frameworks de aplicación empresarial Se ocupan de dominios de aplicación específicos, tales como los sistemas de telecomunicaciones o financieros (Baumer et al., 1997). El conocimiento del dominio de la aplicación integra y apoya el desa-rrollo de aplicaciones de usuario final.  Los frameworks de aplicación Web (WAF) son un tipo de framework más reciente e importante. Ahora los WAF, que apoyan la construcción de sitios Web dinámicos, están ampliamente disponibles. La arquitectura de un WAF se basa por lo general en el pa-trón compuesto Modelo-Vista-Controlador (MVC) (Gamma et al., 1995), que se muestra en la figura 16.5. El patrón MVC se propuso originalmente en la década de 1980, como un enfo-que al diseño GUI que permitía múltiples presentaciones de un objeto y separaba estilos de interacción con cada una de estas presentaciones. Permite la separación del estado de Métodos del controlador Métodos de la vistaEntradas de usuarioVer mensajes de modificación Edición del modeloConsultas y actualizacionesdel modeloEstado del controlador Estado de la vista Métodos del modeloEstado del modelo Figura 16.5 Patrón  Modelo-Vista- Controlador M16_SOMMERVILLE_INGENIERIA_1ED_SE_423-451.indd   432M16_SOMMERVILLE_INGENIERIA_1ED_SE_423-451.indd   432 3/18/11   5:02:13 PM3/18/11   5:02:13 PM