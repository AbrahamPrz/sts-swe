262 parte dos modelado como una amplia variedad de productos finales reutilizables (especificaciones, diseños, patro- nes, estructuras, fragmentos de código, casos de prueba, guías del usuario, etc.). la biblioteca incluye una base de datos y las herramientas necesarias para hacer consultas y recuperar los componentes. el esquema de clasificación de componentes es la base de las consultas a la bi-blioteca. es frecuente que las consultas se clasifiquen con el empleo del elemento de contexto del modelo 3c mencionado. si una consulta inicial da como resultado una lista grande de compo-nentes candidatos, se afina la consulta para depurar la lista. después se extrae la información de concepto y contenido (una vez encontrados los componentes candidatos) que ayuden a se-leccionar el componente apropiado. 10.7 r esumen el proceso de diseño en el nivel de componentes incluye una secuencia de actividades que re-duce poco a poco el nivel de abstracción con el que se representa el software. el diseño en el nivel de componentes ilustra en definitiva al software en un nivel de abstracción cercano al código. es posible adoptar tres puntos de vista diferentes en el nivel de diseño, en función de la na- turaleza del software que se va a desarrollar. el enfoque orientado a objetos se centra en la elaboración de clases de diseño que provienen tanto del dominio del problema como de la in-fraestructura. el punto de vista tradicional mejora tres tipos diferentes de componentes o mó-dulos: los de control, los del dominio del problema y los de la infraestructura. en ambos casos se aplican los principios y conceptos básicos del diseño que llevan a un software de alta calidad. cuando se considera al diseño en el nivel de componentes desde un punto de vista del proceso, se llega a componentes de software reutilizables y a patrones de diseño que son elementos cruciales de la ingeniería de software basada en componentes. conforme se elaboran las clases, varios principios y conceptos importantes guían al diseña- dor. las ideas agrupadas en el principio abierto-cerrado y en el principio de inversión de la dependencia, así como conceptos tales como el acoplamiento y la cohesión, guían al ingeniero de software en la construcción de componentes de software susceptibles de someterse a prueba, implantarse y recibir mantenimiento. para hacer el diseño en el nivel de componentes en este contexto, se elaboran las clases especificando detalles de la mensajería, identificando las interfaces apropiadas, elaborando atributos y definiendo estructuras de datos que las imple-menten, describiendo el flujo del procesamiento dentro de cada operación y representando el comportamiento en el nivel de clase o componente. una actividad esencial en cada caso es el diseño iterativo (rediseñar). el diseño tradicional en el nivel de componentes requiere la representación de estructuras de datos, interfaces y algoritmos para un módulo de programa con detalle suficiente para guiar la generación del código fuente del lenguaje de programación. a fin de lograr esto, el diseñador usa una de varias notaciones de diseño que representan los detalles en el nivel de componente en un formato gráfico, tabular o basado en texto. el diseño en el nivel de componentes para webapps considera tanto el contenido como la funcionalidad tal como es entregada por un sistema basado en web. el diseño del contenido en el nivel de componentes se centra en objetos de contenido y en la manera en la que se empacan para su presentación en una webapp al usuario final. el diseño funcional para las webapps se centra en funciones de procesamiento que manipulan contenido, realizan cálculos, consultan y acceden a una base de datos y establecen interfaces con otros sistemas. se aplican todos los principios y lineamientos del diseño en el nivel de componentes. la programación estructurada es una filosofía de diseño orientado al procedimiento que li- mita el número y tipo de construcciones lógicas usadas para representar los detalles algorítmi-webref en la dirección www.cbd-hq.com/ se encuentra un conjunto exhaustivo de recursos de la isbc. 10pressman(234-264).indd  26210pressman(234-264).indd  262 26/1/10  17:33:2526/1/10  17:33:25