CAPÍTULO 6  MODELADO DE LOS REQUERIMIENTOS 143 6.5.1  Identificación de las clases de análisis Al mirar una habitación, se observa un conjunto de objetos físicos que se identifican, clasifican y  definen fácilmente (en términos de atributos y operaciones). Pero cuando se “ve” el espacio del problema de una aplicación de software, las clases (y objetos) son más difíciles de concebir. Se comienza por identificar las clases mediante el análisis de los escenarios de uso desarro- llados como parte del modelo de requerimientos y la ejecución de un “análisis gramatical” [Abb83] sobre los casos de uso desarrollados para el sistema que se va a construir. Las clases se determinan subrayando cada sustantivo o frase que las incluya para introducirlo en una tabla simple. Deben anotarse los sinónimos. Si la clase (sustantivo) se requiere para implementar una solución, entonces forma parte del espacio de solución; de otro modo, si sólo es necesaria para describir la solución, es parte del espacio del problema. Pero, ¿qué debe buscarse una vez identificados todos los sustantivos? Las clases de análisis  se manifiestan en uno de los modos siguientes: • Entidades externas (por ejemplo, otros sistemas, dispositivos y personas) que producen o consumen la información que usará un sistema basado en computadora. • Cosas (reportes, pantallas, cartas, señales, etc.) que forman parte del dominio de infor-mación para el problema. • Ocurrencias o eventos (como una transferencia de propiedad o la ejecución de una serie de movimientos de un robot) que suceden dentro del contexto de la operación del sistema. • Roles (gerente, ingeniero, vendedor, etc.) que desempeñan las personas que interactúan con el sistema. • Unidades organizacionales (división, grupo, equipo, etc.) que son relevantes para una aplicación. • Lugares (piso de manufactura o plataforma de carga) que establecen el contexto del problema y la función general del sistema. • Estructuras (sensores, vehículos de cuatro ruedas, computadoras, etc.) que definen una clase de objetos o clases relacionadas de éstos. Esta clasificación sólo es una de muchas propuestas en la bibliografía. 15 Por ejemplo, Budd  [Bud96] sugiere una taxonomía de clases que incluye productores (fuentes) y consumidores (su- mideros) de datos, administradores de datos, vista, clases de observador y clases de auxiliares. También es importante darse cuenta de lo que no son las clases u objetos. En general, una  clase nunca debe tener un “nombre de procedimiento imperativo” [Cas89]. Por ejemplo, si los desarrolladores del software de un sistema de imágenes médicas definieron un objeto con el nombre InvertirImagen o incluso InversióndeImagen, cometerían un error sutil. La Imagen  obtenida del software podría ser, por supuesto, una clase (algo que es parte del dominio de la información). La inversión de la imagen es una operación que se aplica al objeto. Es probable que la inversión esté definida como una operación para el objeto Imagen, pero no lo estaría como clase separada con la connotación “inversión de imagen”. Como afirma Cashman [Cas89]: “el intento de la orientación a objetos es contener, pero mantener separados, los datos y las operaciones sobre ellos”. Para ilustrar cómo podrían definirse las clases del análisis durante las primeras etapas del  modelado, considere un análisis gramatical (los sustantivos están subrayados, los verbos apa-Cita: “El problema realmente difícil es  descubrir en primer lugar cuáles son los objetos correctos[clases].” Carl Argila 15 En la sección 6.5.4 se estudia otra clasificación importante que define las clases entidad, frontera y controladora.¿Cómo se manifiestan  las clases en tantos elementos del espacio de solución?? 06Pressman(126-157).indd   14306Pressman(126-157).indd   143 14/1/10   14:29:1914/1/10   14:29:19