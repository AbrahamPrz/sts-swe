625 626 } 627 628 /** 629 * devuelve la última fecha correspondiente al día de la semana especificado y 630 * anterior a la fecha base. 631 * 632 * @param targetweekday un código para el día de la semana de destino. 633 * @param base la fecha base. 634 * 635 * @return la última fecha correspondiente al día de la semana especificado y 636 * anterior a la fecha base. 637 */ 638 public static serialdate getpreviousdayofweek(final int targetweekday, 639 final serialdate base) { 640 641 // comprobar argumentos… 642 if (!serialdate.isvalidweekdaycode(targetweekday)) { 643 throw new illegalargumentexception( 644 “invalid day-of-the-week code.” 645 ); 646 } 647 648 // buscar la fecha… 649 final int adjust; 650 final int basedow = base.getdayofweek(); 651 if (basedow > targetweekday) { 652 adjust = math.min(0, targetweekday - basedow); 653 } 654 else { 655 adjust = -7 + math.max(0, targetweekday - basedow); 656 } 657 658 return serialdate.adddays(adjust, base); 659 660 } 661 662 /** 663 * devuelve la primera fecha que coincide con el día de la semana especificado 664 * y posterior a la fecha base. 665 * 666 * @param targetweekday un código para el día de la semana de destino. 453