625 626 } 627 628 /** 629 * Devuelve la última fecha correspondiente al día de la semana especificado y 630 * ANTERIOR a la fecha base. 631 * 632 * @param targetWeekday un código para el día de la semana de destino. 633 * @param base la fecha base. 634 * 635 * @return la última fecha correspondiente al día de la semana especificado y 636 * ANTERIOR a la fecha base. 637 */ 638 public static SerialDate getPreviousDayOfWeek(final int targetWeekday, 639 final SerialDate base) { 640 641 // comprobar argumentos… 642 if (!SerialDate.isValidWeekdayCode(targetWeekday)) { 643 throw new IllegalArgumentException( 644 “Invalid day-of-the-week code.” 645 ); 646 } 647 648 // buscar la fecha… 649 final int adjust; 650 final int baseDOW = base.getDayOfWeek(); 651 if (baseDOW > targetWeekday) { 652 adjust = Math.min(0, targetWeekday - baseDOW); 653 } 654 else { 655 adjust = -7 + Math.max(0, targetWeekday - baseDOW); 656 } 657 658 return SerialDate.addDays(adjust, base); 659 660 } 661 662 /** 663 * Devuelve la primera fecha que coincide con el día de la semana especificado 664 * y POSTERIOR a la fecha base. 665 * 666 * @param targetWeekday un código para el día de la semana de destino. 453