} public string geterrorparameter() { return errorparameter; } public void seterrorparameter(string errorparameter) { this.errorparameter = errorparameter; } public errorcode geterrorcode() { return errorcode; } public void seterrorcode(errorcode errorcode) { this.errorcode = errorcode; } public string errormessage() { switch (errorcode) { case ok: return “tilt: should not get here.”; case unexpected_argument: return string.format(“argument -%c unexpected.”, errorargumentid); case missing_string: return string.format(“could not find string parameter for -%c.”, errorargumentid); case invalid integer: return string.format(“argument -%c expects an integer but was ‘%s’.”, errorargumentid, errorparameter); case missing_integer: return string.format(“could not find integer parameter for -%c.”, errorargumentid); case invalid_double: return string.format(“argument -%c expects a double but was ‘%s’.”, errorargumentid, errorparameter); case missing_double: return string.format(“could not find double parameter for -%c.”, errorargumentid); case invalid_argument_name: return string.format(“‘%c’ is not a valid argument name.”, errorargumentid); case invalid_argument_format: return string.format(“‘%s’ is not a valid argument format.”, errorparameter); } return “”; } public enum errorcode { ok, invalid_argument_format, unexpected_argument, invalid_argument_name, missing_string, missing_integer, invalid_integer, missing_double, invalid_double } } 262