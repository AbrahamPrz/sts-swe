¿Qué hace que una prueba sea limpia? Tres elementos: legibilidad, legibilidad y legibilidad. La legibilidad es sin duda más importante en las pruebas de unidad que en el código de producción. ¿Qué hace que una prueba sea legible? Lo mismo que en el código: claridad, simplicidad y densidad de expresión. En una prueba debe decir mucho con el menor número de expresiones posible. Fíjese en el código de FitNesse del Listado 9-1. Estas tres pruebas son difíciles de entender y sin duda se pueden mejorar. Por un lado, hay mucho código duplicado [G5] en las invocaciones repetidas a  addPage  y assertSubString . Sobre todo, este código se carga con detalles que interfieren con la expresividad de la prueba. Listado 9-1 SerializedPageResponderTest.java. public void testGetPageHieratchyAsXml() throws Exception { crawler.addPage(root, PathParser.parse(“PageOne”)); crawler.addPage(root, PathParser.parse(“PageOne.ChildOne”)); crawler.addPage(root, PathParser.parse(“PageTwo”)); request.setResource(“root”); request.addInput(“type”, “pages”); Responder responder = new SerializedPageResponder(); SimpleResponse response = (SimpleResponse) responder.makeResponse( new FitNesseContext(root), request); String xml = response.getContent(); assertEquals(“text/xml”, response.getContentType()); assertSubString(“<name>PageOne</name>”, xml); assertSubString(“<name>PageTwo</name>”, xml); assertSubString(“<name>ChildOne</name>”, xml); } public void testGetPageHieratchyAsXmlDoesntContainSymbolicLinks() throws Exception { WikiPage pageOne = crawler.addPage(root, PathParser.parse(“PageOne”)); crawler.addPage(root, PathParser.parse(“PageOne.ChildOne”)); crawler.addPage(root, PathParser.parse(“PageTwo”)); PageData data = pageOne.getData(); WikiPageProperties properties = data.getProperties(); 174