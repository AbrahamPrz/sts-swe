¿qué hace que una prueba sea limpia? tres elementos: legibilidad, legibilidad y legibilidad. la legibilidad es sin duda más importante en las pruebas de unidad que en el código de producción. ¿qué hace que una prueba sea legible? lo mismo que en el código: claridad, simplicidad y densidad de expresión. en una prueba debe decir mucho con el menor número de expresiones posible. fíjese en el código de fitnesse del listado 9-1. estas tres pruebas son difíciles de entender y sin duda se pueden mejorar. por un lado, hay mucho código duplicado [g5] en las invocaciones repetidas a addpage y assertsubstring . sobre todo, este código se carga con detalles que interfieren con la expresividad de la prueba. listado 9-1 serializedpagerespondertest.java. public void testgetpagehieratchyasxml() throws exception { crawler.addpage(root, pathparser.parse(“pageone”)); crawler.addpage(root, pathparser.parse(“pageone.childone”)); crawler.addpage(root, pathparser.parse(“pagetwo”)); request.setresource(“root”); request.addinput(“type”, “pages”); responder responder = new serializedpageresponder(); simpleresponse response = (simpleresponse) responder.makeresponse( new fitnessecontext(root), request); string xml = response.getcontent(); assertequals(“text/xml”, response.getcontenttype()); assertsubstring(“<name>pageone</name>”, xml); assertsubstring(“<name>pagetwo</name>”, xml); assertsubstring(“<name>childone</name>”, xml); } public void testgetpagehieratchyasxmldoesntcontainsymboliclinks() throws exception { wikipage pageone = crawler.addpage(root, pathparser.parse(“pageone”)); crawler.addpage(root, pathparser.parse(“pageone.childone”)); crawler.addpage(root, pathparser.parse(“pagetwo”)); pagedata data = pageone.getdata(); wikipageproperties properties = data.getproperties(); 174