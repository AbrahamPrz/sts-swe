670 PARTE CUATRO  ADMINISTRACIÓN DE PROYECTOS DE SOFTWARE  1. El costo de mantener una línea de código fuente puede ser 20 a 40 veces el costo del  desarrollo inicial de dicha línea.  2. El rediseño de la arquitectura del software (programa y/o estructura de datos), con el  uso de modernos conceptos de diseño, puede facilitar enormemente el mantenimiento  futuro.  3. Puesto que ya existe un prototipo del software, la productividad de desarrollo debe ser  mucho más alta que el promedio.  4. Ahora el usuario experimenta con el software. Por tanto, pueden averiguarse con mayor  facilidad los nuevos requisitos y la dirección del cambio.  5. Las herramientas automatizadas para reingeniería facilitarán algunas partes de la labor.  6. Existirá una configuración de software completa (documentos, programas y datos) al  completar el mantenimiento preventivo. Un gran desarrollador interno de software (por ejemplo, un grupo de desarrollo de sistemas  de software empresarial para una gran compañía de productos al consumidor) puede tener una  producción de 500 a 2 000 programas dentro de su dominio de responsabilidad. Dichos progra-mas pueden clasificarse por importancia y luego revisarse como candidatos para ingeniería hacia adelante. El proceso de ingeniería hacia adelante aplica los principios, conceptos y métodos de la inge- niería de software para volver a crear una aplicación existente. En la mayoría de los casos, la in-geniería hacia adelante no crea simplemente un equivalente moderno de un programa más  anti- guo. En vez de ello, en el esfuerzo de reingeniería se integran nuevos requisitos de usuario y tecnología. El programa redesarrollado extiende las capacidades de la aplicación más antigua. 29.8.1  Ingeniería hacia adelante para arquitecturas cliente-servidor Durante las décadas pasadas, muchas aplicaciones de mainframe se sometieron a reingeniería para alojar arquitecturas cliente-servidor (incluidas las webapps). En esencia, los recursos de  cómputo centralizados (incluido el software) se distribuyen entre muchas plataformas cliente. Aunque pueden diseñarse varios entornos distribuidos, la aplicación mainframe típica que se somete a reingeniería en una arquitectura cliente-servidor tiene las siguientes características: • La funcionalidad de la aplicación migra a cada computadora cliente. • Se implementan nuevas interfaces GUI en los sitios cliente. • Las funciones de base de datos se ubican en el servidor. • La funcionalidad especializada (por ejemplo, análisis con uso intenso de computadora)  puede permanecer en el sitio servidor. • Deben establecerse nuevos requisitos de comunicaciones, seguridad, archivado y  control en los sitios cliente y servidor. Es importante observar que la migración de mainframe a cómputo cliente-servidor requiere reingeniería tanto de la empresa como del software. Además, debe establecerse una “infraes-tructura de red empresarial” [Jay94]. La reingeniería para aplicaciones cliente-servidor comienza con un profundo análisis del  entorno empresarial que abarca el mainframe existente. Pueden identificarse tres capas de abs-tracción. La base de datos que se asienta en los cimientos de una arquitectura cliente-servidor gestiona las transacciones y consultas de aplicaciones del servidor. Aunque dichas transaccio-nes y consultas deben controlarse dentro del contexto de un conjunto de reglas empresariales (definidas por un proceso empresarial existente o de reingeniería), las aplicaciones cliente pro-porcionan funcionalidad dirigida a la comunidad usuaria.En algunos casos, la migración a una  arquitectura cliente-servidor debe abordarse no como reingeniería, sino como un nuevo esfuerzo de desarrollo. La reingeniería entra al cuadro solamente cuando deba integrarse funcionalidad específica del sistema antiguo en la nueva arquitectura.CONSEJO 29Pressman(655-674).indd   67029Pressman(655-674).indd   670 26/1/10   17:33:0326/1/10   17:33:03