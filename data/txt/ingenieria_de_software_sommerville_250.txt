Capítulo 8 ■ Referencias  233 Dijkstra, E. W., Dahl, O. J. y Hoare, C. A. R. (1972). Structured Programming.  Londres: Academic  Press. Fagan, M. E. (1986). “Advances in Software Inspections”. IEEE Trans. on Software Eng., SE-12 (7),  744–51. Jeffries, R. y Melnik, G. (2007). “TDD: The Art of Fearless Programming”. IEEE Software, 24, 24–30. Kaner, C. (2003). “The power of ‘What If . . .’ and nine ways to fuel your imagination: Cem Kaner on  scenario testing”. Software Testing and Quality Engineering, 5 (5), 16–22. Lutz, R. R. (1993). “Analyzing Software Requirements Errors in Safety-Critical Embedded Systems”.  RE’93, San Diego, Calif.: IEEE.  Martin, R. C. (2007). “Professionalism and Test-Driven Development”. IEEE Software, 24 (3), 32–6. Massol, V. y Husted, T. (2003). JUnit in Action. Greenwich, Conn.: Manning Publications Co.Prowell, S. J., Trammell, C. J., Linger, R. C. y Poore, J. H. (1999). Cleanroom Software Engineering:  Technology and Process. Reading, Mass.: Addison-Wesley.Whittaker, J. W. (2002). How to Break Software: A Practical Guide to Testing . Boston: Addison- Wesley. M08_SOMMERVILLE_INGENIERIA_1ED_SE_205-233.indd   233M08_SOMMERVILLE_INGENIERIA_1ED_SE_205-233.indd   233 3/18/11   5:40:00 PM3/18/11   5:40:00 PM