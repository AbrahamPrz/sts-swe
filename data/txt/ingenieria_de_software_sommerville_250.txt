capítulo 8 ■ referencias 233 dijkstra, e. w., dahl, o. j. y hoare, c. a. r. (1972). structured programming. londres: academic press. fagan, m. e. (1986). “advances in software inspections”. ieee trans. on software eng., se-12 (7), 744–51. jeffries, r. y melnik, g. (2007). “tdd: the art of fearless programming”. ieee software, 24, 24–30. kaner, c. (2003). “the power of ‘what if . . .’ and nine ways to fuel your imagination: cem kaner on scenario testing”. software testing and quality engineering, 5 (5), 16–22. lutz, r. r. (1993). “analyzing software requirements errors in safety-critical embedded systems”. re’93, san diego, calif.: ieee. martin, r. c. (2007). “professionalism and test-driven development”. ieee software, 24 (3), 32–6. massol, v. y husted, t. (2003). junit in action. greenwich, conn.: manning publications co.prowell, s. j., trammell, c. j., linger, r. c. y poore, j. h. (1999). cleanroom software engineering: technology and process. reading, mass.: addison-wesley.whittaker, j. w. (2002). how to break software: a practical guide to testing . boston: addison- wesley. m08_sommerville_ingenieria_1ed_se_205-233.indd  233m08_sommerville_ingenieria_1ed_se_205-233.indd  233 3/18/11  5:40:00 pm3/18/11  5:40:00 pm