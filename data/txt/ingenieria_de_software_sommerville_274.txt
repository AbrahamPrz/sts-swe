capítulo 9 ■ lecturas sugeridas 257 organización decide moverse hacia una nueva plataforma de hardware, entonces esto puede requerir la sustitución de aplicaciones. si no hay presupuesto disponible para la transformación del sistema en un año en particular, entonces puede continuar el mante-nimiento del sistema, aunque esto dará como resultado costos más altos a largo plazo. puntos clave ■ el desarrollo y la evolución del software pueden considerarse como un proceso integrado e iterativo que se representa usando un modelo en espiral. ■ para sistemas personalizados, por lo general, los costos del mantenimiento de software superan a los de desarrollo. ■ el proceso de evolución del software es conducido por peticiones de cambios e incluye análisis del impacto del cambio, planeación de las versiones e implementación del cambio. ■ las leyes de lehman, como la noción de que el cambio es continuo, describen algunas percepciones derivadas de estudios a largo plazo de la evolución del sistema. ■ existen tres tipos de mantenimiento de software: reparación de bugs, modificación del software para trabajar en un nuevo entorno e implementación de requerimientos nuevos o diferentes. ■ la reingeniería de software trata la reestructuración y la redocumentación de software para hacerlo más fácil de entender y cambiar. ■ la refactorización, que hace pequeños cambios de programa sin alterar su funcionalidad, podría considerarse como mantenimiento preventivo. ■ el valor empresarial de un sistema heredado y la calidad del software de aplicación y su entorno deben valorarse para determinar si el sistema tiene que sustituirse, transformarse o mantenerse. lecturas sugeridas “software maintenance and evolution: a roadmap”. además de examinar los retos de la investigación, este ensayo es un adecuado y breve panorama del mantenimiento y la evolución del software por parte de investigadores líderes en esta área. los problemas de investigación que identificaron todavía no se resuelven. (v. rajlich y k.h. bennett, proc. 20th int. conf. on software engineering, ieee press, 2000.) http:/ /doi. acm. org/ 10. 1145/ 336512. 336534. modernizing legacy systems: software technologies, engineering processes, and business practices. este excelente libro toca temas generales de mantenimiento y evolución del software, así como la migración de sistemas heredados. el libro se basa en un estudio de caso amplio de la transformación de un sistema cobol a un sistema cliente-servidor basado en java. (r. c. seacord, d. plakosh y g. a. lewis, addison-wesley, 2003.) m09_sommerville_ingenieria_1ed_se_234-260.indd  257m09_sommerville_ingenieria_1ed_se_234-260.indd  257 3/18/11  4:52:25 pm3/18/11  4:52:25 pm