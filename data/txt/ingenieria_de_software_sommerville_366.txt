miento no afecten la integridad del sistema. Ésta puede ser una forma efectiva de usar  hardware, si el servidor de respaldo es el que se usa normalmente para tareas de baja prioridad. Si ocurre un problema con un servidor primario, su procesamiento se trans-fiere al servidor de respaldo, que otorga a dicho trabajo la mayor prioridad. Los servidores replicados proporcionan redundancia, aunque usualmente no aportan diversidad. El hardware, en general, es idéntico y opera la misma versión del software. Por lo tanto, los servidores son capaces de lidiar con fallas de hardware y de software que se localizan en una sola máquina. No pueden contender con problemas de diseño de soft-ware que hacen que todas las versiones del software fallen al mismo tiempo. Para manejar fallas de diseño de software, un sistema debe incluir software y hardware diversos, como se expone en la sección 13.1. La diversidad y redundancia del software pueden implementarse en algunos estilos arquitectónicos diferentes. En el resto de esta sección se describen algunos de ellos.  13.3.1 Sistemas de protección Un sistema de protección es un sistema especializado que se asocia con algún otro siste-ma. Por lo común, éste es un sistema de control para algunos procesos, tales como un pro-ceso de manufactura química o un sistema de control de equipo, por ejemplo el sistema en un tren sin conductor. Un ejemplo de un sistema de protección sería un sistema en un tren que detecte si éste pasa por una señal roja. Si es así, y no hay indicios de que el sistema de control del tren desacelera, entonces el sistema de protección aplica auto-máticamente los frenos del tren para detenerlo. Los sistemas de protección monitorizan de manera independiente el ambiente y, si los sensores indican un problema que el sistema controlado no detecta, entonces se activa el sistema de protección para desactivar el pro-ceso o el equipo. La figura 13.3 ilustra la relación entre un sistema de protección y un sistema contro-lado. El sistema de protección monitoriza tanto el equipo controlado como el ambiente. Si se detecta un problema, emite comandos al actuador para desactivar el sistema o solicitar otros mecanismos de protección, como la apertura de una válvula de desfogue. Observe que existen dos conjuntos de sensores. Un conjunto se usa para monitorización normal del sis-tema y el otro específicamente para el sistema de protección. En el caso de falla del sensor existen respaldos que permitirán al sistema de protección continuar en operación. También hay actuadores redundantes en el sistema. Un sistema de protección sólo incluye la funcionalidad crítica que se requiere para cambiar el sistema de un estado potencialmente inseguro a un estado seguro (desacti-vación del sistema). Es un ejemplo más general de una arquitectura tolerante a fallas, donde un sistema principal recibe apoyo de un sistema de respaldo más pequeño y más simple que sólo incluye funcionalidad esencial. Por ejemplo, el software de control del transbordador espacial tiene un sistema de respaldo que incluye la funcionalidad “llevar a casa”; esto es, si falla el sistema de control principal, el sistema de respaldo logrará aterrizar el vehículo. La ventaja de este tipo de arquitectura es que el software del sistema de protección suele ser mucho más sencillo que el software que controla el proceso a proteger. La única función del sistema de protección es la operación de monitorizar y asegurar que el sis-tema se lleve a un estado seguro en caso de una emergencia. Por lo tanto, es posible inver-tir más esfuerzo en evitar y detectar fallas. Se puede comprobar que la especificación13.3 ■ Arquitecturas de sistemas confiables  349 M13_SOMMERVILLE_INGENIERIA_1ED_SE_341-365.indd   349M13_SOMMERVILLE_INGENIERIA_1ED_SE_341-365.indd   349 3/18/11   4:59:13 PM3/18/11   4:59:13 PM