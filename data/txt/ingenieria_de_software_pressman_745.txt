714 PARTE CINCO  TEMAS AVANZADOS Aunque la arquitectura de un EIS colaborativo puede variar considerablemente del que se  estudió en esta sección, los elementos funcionales básicos (sistemas y componentes de admi- nistración) parecerán lograr el nivel de coordinación que se requiere para un proyecto de inge-niería del software distribuida. 31.5.2  Herramientas que abordan tendencias tecnológicas La agilidad en la ingeniería del software (capítulo 3) se logra cuando los participantes trabajan como un equipo. Por tanto, la tendencia hacia los EIS colaborativos (sección 31.5.1) brindará beneficios aun cuando el software se desarrolle de manera local. Pero, ¿qué hay acerca de las herramientas tecnológicas que complementan el sistema y los componentes que fortalecen una mejor colaboración? Una de las tendencias dominantes en las herramientas tecnológicas es la creación de un  conjunto de herramientas que da apoyo al desarrollo impulsado por modelo (sección 31.4.4) con énfasis en el diseño impulsado por arquitectura. Oren Novotny [Nov04] sugiere que el modelo, más que el código fuente, se convierte en el foco central de la ingeniería del software: En UML se crean modelos independientes de plataforma y luego se experimentan varios niveles de  transformación para eventualmente devanarse como código fuente para una plataforma específica. Entonces, es lógico que el modelo, no el archivo, deba convertirse en la nueva unidad de salida. Un modelo tiene muchas visiones diferentes en diferentes niveles de abstracción. En el más alto, los componentes independientes de plataforma pueden especificarse en el análisis; en el más bajo, existe una implementación específica a plataforma que se reduce a un conjunto de clases en código. Novotny argumenta que una nueva generación de herramientas funcionará en conjunción con  un repositorio para: crear modelos en todos los niveles necesarios de abstracción, establecer relaciones entre varios modelos, traducir los modelos de un nivel de abstracción a otro (por ejemplo, traducir un modelo de diseño a código fuente), gestionar cambios y versiones, y coordinar las acciones de control y aseguramiento de la calidad en contraste con los modelos de software. Además de completar los entornos de ingeniería del software, las herramientas de solución  puntual que abordan todo, desde recopilación de requerimientos hasta refactorización de di-seño/código y pruebas, continuarán evolucionando y se volverán más funcionalmente capaces. En algunas instancias, las herramientas de modelado y pruebas en un dominio de aplicación específico proporcionarán beneficios aumentados cuando se comparen con sus equivalentes genéricos.  31.6 R ESUMEN Las tendencias que tienen efecto sobre la tecnología de ingeniería del software con frecuencia provienen de las áreas de negocios, organizacional, de mercado y cultural. Dichas “tendencias blandas” pueden guiar la dirección de la investigación y la tecnología que se deriva como con-secuencia de la investigación. Conforme se introduce nueva tecnología, se avanza a través de un ciclo de vida que no siem- pre conduce a una adopción extensa, aun cuando las expectativas originales sean altas. El grado en el que cualquier tecnología de ingeniería del software gana adopción extensa está ligado a su habilidad para abordar los problemas impuestos por las tendencias blandas y duras. Las tendencias blandas (la creciente necesidad de conectividad y colaboración, proyectos  globales, transferencia de conocimiento, el impacto de las economías emergentes y la influencia de la cultura humana en sí) conducen a un conjunto de retos que abarcan la complejidad admi-nistrativa y los requerimientos emergentes, hasta hacer malabares con una mezcla de talentos siempre cambiante entre equipos de software dispersos geográficamente. 31Pressman(695-716).indd   71431Pressman(695-716).indd   714 26/1/10   17:33:4126/1/10   17:33:41