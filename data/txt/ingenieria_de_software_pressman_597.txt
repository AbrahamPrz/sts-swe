566 PARTE CUATRO  ADMINISTRACIÓN DE PROYECTOS DE SOFTWARE  24.5 E L PROYECTO Para administrar un proyecto de software exitoso, se debe comprender qué puede salir mal, de  modo que los problemas puedan evitarse. En un excelente ensayo acerca de los proyectos de software, John Reel [Ree99] define 10 señales que indican que un proyecto de sistemas de información está en peligro:  1. El personal del software no entiende las necesidades del cliente.  2. El ámbito del producto está pobremente definido.  3. Los cambios se gestionan pobremente.  4. Cambia la tecnología elegida.  5. Las necesidades empresariales cambian [o están mal definidas].  6. Las fechas límite son irreales.  7. Los usuarios son resistentes.  8. Pérdida de patrocinio [o nunca obtenido adecuadamente].  9. El equipo del proyecto carece de personal con habilidades adecuadas.  10. Los gerentes [y profesionales] evitan mejores prácticas y lecciones aprendidas. Los profesionales de la industria, hastiados, con frecuencia se refieren a la regla 90-90  cuando estudian proyectos de software particularmente difíciles: el primer 90 por ciento de un sistema absorbe el 90 por ciento del esfuerzo y tiempo asignados. El último 10 por ciento toma otro 90 por ciento del esfuerzo y tiempo asignados [Zah94]. Las semillas que conducen a la regla 90-90 están contenidas en las señales anotadas en la lista anterior . Pero, ¡basta de negatividad! ¿Cómo actúa un gerente para evitar los problemas recién anota- dos? Reel [Ree99] sugiere un enfoque de sentido común de cinco partes en los proyectos de software:  1. Comenzar con el pie derec  ho. Esto se logra al trabajar duro (muy duro) para entender el  problema que debe resolverse y luego establecer objetivos y expectativas realistas para todos aquellos que estarán involucrados en el proyecto. Lo anterior se refuerza al cons-truir el equipo correcto (sección 24.2.3) y darle autonomía, autoridad y tecnología nece-sarias para realizar el trabajo.  2. Mantener la cantidad de mo  vimiento. Muchos proyectos parten hacia un buen comienzo  y luego lentamente se desintegran. A fin de mantener la cantidad de movimiento, el ge-rente de proyecto debe proporcionar incentivos para mantener la rotación de personal en un mínimo absoluto, el equipo debe enfatizar la calidad en cada tarea que realice y el administrador ejecutivo debe hacer todo lo posible para permanecer fuera del camino  del equipo. 7  3. Siga la pista al progreso. Para un proyecto de software , el progreso se rastrea conforme  los productos operativos (por ejemplo, modelos, código fuente, conjuntos de casos de  prueba) se producen y aprueban (usando revisiones técnicas) como parte de una activi-dad que asegure la calidad. Además, pueden recopilarse medidas de proceso de soft-ware y proyecto (capítulo 25) y usarse para valorar el progreso contra promedios desa- rrollados para la organización de desarrollo del software.¿Cuáles son las señales  de que un proyecto de software está en peligro?? Cita: “No tenemos tiempo para dete-nernos por combustible, ya vamos retrasados.” M. Cleron 7 La implicación de esta afirmación es que la burocracia se reduce al mínimo, las reuniones extrañas se eliminan  y se quita el énfasis a la adhesión dogmática a las reglas de proceso y proyecto. El equipo debe ser autoorgani- zado y autónomo.Cita: “Un proyecto es como un viaje  en carretera. Algunos son sim-ples y rutinarios, como conducir hacia la tienda a plena luz del día. Pero la mayoría de los pro-yectos que vale la pena realizar son más parecidos a conducir una camioneta 4 /H11003 4 en las montañas y de noche.” Cem Kaner, James Bach y  Bret Pettichord 24Pressman(553-570).indd   56624Pressman(553-570).indd   566 19/1/10   23:34:4419/1/10   23:34:44