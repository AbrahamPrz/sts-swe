CAPÍTULO 15  TÉCNICAS DE REVISIÓN 361 un rol específico: dirigir el equipo, registrar las reuniones, presentar el material, etc. Cada revisor  tendrá acceso al producto del trabajo (en este caso, el prototipo de la interfaz) antes de que la revisión tenga lugar y dedicará tiempo a la búsqueda de errores, inconsistencias y omisiones. Se realizará un conjunto de tareas específicas con base en una agenda que se desarrollará antes de que ocurra la revisión. Los resultados de ésta serán registrados de manera formal y el equipo decidirá sobre el estado del producto del trabajo con base en el resultado de la revisión. Los miembros del equipo también verificarán que las correcciones se hagan de manera adecuada. En este libro se consideran dos grandes categorías de revisiones técnicas: revisiones infor- males y revisiones técnicas más formales. Dentro de cada una de ellas se escogen varios enfo-ques diferentes. Éstos se presentan en las secciones que siguen.  15.5 R EVISIONES  INFORMALES Las revisiones informales incluyen una simple verificación de escritorio de un trabajo de inge-niería de software, hecha con algún colega, o una reunión casual (con más de dos personas) con objeto de revisar un producto o aspectos orientados a la revisión de programación por pares (véase el capítulo 3). Una verificación de escritorio simple o una reunión casual realizada con un colega constituye  una revisión. Sin embargo, como no hay una planeación o preparación por adelantado, ni agenda o estructura de la reunión, y no se da seguimiento a los errores descubiertos, la eficacia de tales revisiones es mucho menor que la de los enfoques más formales. Pero una verificación de escritorio sencilla descubre errores que de otro modo se propagarían en el proceso del soft-ware. Una forma de mejorar la eficacia de una verificación de escritorio es desarrollar un conjunto  de listas de revisión para cada producto grande del trabajo generado por el equipo de software. Las preguntas que se plantean en la lista son generales, pero servirán para guiar a los revisores en la verificación del producto. Por ejemplo, veamos una verificación de escritorio del prototipo de la interfaz de CasaSeguraAsegurada.com. En vez de sólo jugar con el prototipo en la esta-ción de trabajo del diseñador, éste y un colega lo examinan con el empleo de una lista para in-terfaces: • ¿La distribución está diseñada con el empleo de convenciones estándar? ¿De izquierda a  derecha? ¿De arriba abajo? • ¿La presentación necesita ser desplazada verticalmente? • ¿Se usan con eficacia el color y la ubicación, la tipografía y el tamaño? • ¿Todas las opciones o funciones de navegación están representadas en el mismo nivel  de abstracción? • ¿Están etiquetadas con claridad todas las elecciones de navegación? y así sucesivamente. Cualesquiera errores o aspectos señalados por los revisores son registra-dos por el diseñador para resolverlos tiempo después. Las verificaciones de escritorio se progra-man en forma ad hoc o son obligatorias como parte de las buenas prácticas de la ingeniería de software. En general, la cantidad de material por revisar es relativamente pequeña y el tiempo total dedicado a una revisión de escritorio es de poco más de una hora o dos. En el capítulo 3 se describió la programación por pares en la forma siguiente: “La XP reco- mienda que dos personas trabajen juntas en una estación de trabajo con objeto de crear el có-digo de una narración. Esto proporciona un mecanismo para resolver problemas y asegurar la calidad en tiempo real (dos cabezas piensan más que una).” La programación por pares se caracteriza por una verificación de escritorio continua. En vez  de programar una revisión en algún momento dado, la programación por pares invita a hacer  15Pressman(354-367).indd   36115Pressman(354-367).indd   361 14/1/10   16:53:4414/1/10   16:53:44