667 * @param base la fecha base. 668 * 669 * @return la primera fecha que coincide con el día de la semana especificado 670 * y posterior a la fecha base. 671 */ 672 public static serialdate getfollowingdayofweek(final int targetweekday, 673 final serialdate base) { 674 675 // comprobar argumentos… 676 if (!serialdate.isvalidweekdaycode(targetweekday)) { 677 throw new illegalargumentexception( 678 “invalid day-of-the-week code.” 679 ); 680 } 681 682 // buscar la fecha… 683 final int adjust; 684 final int basedow = base.getdayofweek(); 685 if (basedow > targetweekday) { 686 adjust = 7 + math.min(0, targetweekday - basedow); 687 } 688 else { 689 adjust = math.max(0, targetweekday - basedow); 690 } 691 692 return serialdate.adddays(adjust, base); 693 } 694 695 /** 696 * devuelve la fecha que coincide con el día de la semana especificado y más 697 * próxima a la fecha base. 698 * 699 * @param targetdow un código para el día de la semana de destino. 700 * @param base la fecha base. 701 * 702 * @return la fecha que coincide con el día de la semana especificado y más 703 * próxima a la fecha base. 704 */ 705 public static serialdate getnearestdayofweek(final int targetdow, 706 final serialdate base) { 707 708 // comprobar argumentos… 454