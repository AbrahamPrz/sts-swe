19.3 ■ Desarrollo de software con servicios  533 recibe apoyo de estándares adicionales como WS-Coordination (Cabrera et al., 2005),  que se usa para especificar cómo se coordinan los servicios y WS-CDL (Choreography  Description Language, es decir, lenguaje de descripción de coreografía) (Kavantzas et al., 2004), que es un medio para definir los intercambios de mensaje entre participan-tes (Andrews et al., 2003).  19.3.2 Pruebas del servicio Las pruebas son importantes en todos los procesos de desarrollo de sistemas, pues demuestran que un sistema cumple con sus requerimientos funcionales y no funciona-les, y detectan defectos introducidos durante el proceso de desarrollo. Muchas técnicas de prueba, como las inspecciones del programa y las pruebas de cobertura, dependen del análisis del código fuente del software. Sin embargo, cuando un proveedor externo ofrece sus servicios, no está disponible el código fuente de la implementación del servicio. Por lo tanto, las pruebas del sistema basado en servicios no pueden usar técnicas probadas basadas en código fuente. Además de los problemas de comprender la implementación del servicio, los exami-nadores pueden enfrentar también más dificultades cuando se prueban los servicios y la combinación de servicios: 1. Los servicios externos están bajo el control del proveedor del servicio y no del usua- rio del servicio. El proveedor del servicio puede retirar dichos servicios en cualquier momento o puede modificarlos, lo que invalida cualquier prueba previa de la apli-cación. Dichos problemas se manejan en los componentes de software al mantener diferentes versiones del componente. Sin embargo, en la actualidad, no hay estánda-res propuestos para lidiar con las versiones del servicio. 2. La visión a largo plazo de la SOA es para que los servicios se vinculen de manera dinámica a aplicaciones orientadas a servicios. Esto significa que una aplicación no siempre puede usar el mismo servicio cada vez que se ejecuta. En consecuencia, las pruebas pueden ser exitosas cuando una aplicación se enlaza a un servicio particular, pero no se puede garantizar que dicho servicio se usará durante una ejecución real del sistema. 3. El comportamiento no funcional de un servicio no depende simplemente de cómo se usa por parte de la aplicación que se pone a prueba. Un servicio puede desempeñarse bien durante las pruebas porque no opera bajo una carga pesada. En la práctica, el comportamiento de servicio observado podría ser diferente debido a las demandas hechas por otros usuarios del servicio. 4. El modelo de pago para servicios podría hacer que las pruebas del servicio sean muy costosas. Existen diferentes modelos de pago posibles: algunos servicios pueden estar a disposición gratuita, por algunos hay que pagar una suscripción, y otros se pagan sobre una base “por uso”. Si los servicios son gratuitos, entonces el proveedor del servicio no querrá que se carguen en aplicaciones sujetas a prueba; si se requiere una suscripción, entonces tal vez un usuario del servicio podría estar renuente a comprometerse en un acuerdo de suscripción antes de probar el servicio. De igual modo, si el servicio se basa en pago con base en el uso, los usuarios del servicio pueden descubrir que el costo de las pruebas resulta prohibitivo. M19_SOMMERVILLE_INGENIERIA_1ED_SE_508-536.indd   533M19_SOMMERVILLE_INGENIERIA_1ED_SE_508-536.indd   533 3/18/11   5:04:58 PM3/18/11   5:04:58 PM