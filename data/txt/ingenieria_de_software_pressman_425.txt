394 parte tres administración de la calidad 1. los componentes en el nivel inferior se combinan en grupos (en ocasiones llamados construcciones o builds) que realizan una subfunción de software específica. 2. se escribe un controlador (un programa de control para pruebas) a fin de coordinar la entrada y salida de casos de prueba. 3. se prueba el grupo. 4. los controladores se remueven y los grupos se combinan moviéndolos hacia arriba en la estructura del programa. la integración sigue el patrón que se ilustra en la figura 17.6. los componentes se combinan para formar los grupos 1, 2 y 3. cada uno de ellos se prueba usando un controlador (que se muestra como un bloque rayado). los componentes en los grupos 1 y 2 se subordinan a ma. los controladores d1 y d2 se remueven y los grupos se ponen en interfaz directamente con ma. de igual modo, el controlador d3 para el grupo 3 se remueve antes de la integración con el módulo mb. tanto ma como mb al final se integrarán con el componente mc, y así sucesivamente. conforme la integración avanza hacia arriba, se reduce la necesidad de controladores de prueba separados. de hecho, si los dos niveles superiores del programa se integran de manera descendente, el número de controladores puede reducirse de manera sustancial y la integra-ción de grupos se simplifica enormemente. prueba de regresión. cada vez que se agrega un nuevo módulo como parte de las pruebas de integración, el software cambia. se establecen nuevas rutas de flujo de datos, ocurren nuevas operaciones de entrada/salida y se in voca nueva lógica de control. dichos cambios pueden causar problemas con las funciones que anteriormente trabajaban sin fallas. en el contexto de una estrategia de prueba de integración, la prueba de regresión es la nueva ejecución de algún subconjunto de pruebas que ya se realizaron a fin de asegurar que los cambios no propagaron efectos colaterales no deseados. en un contexto más amplio, las pruebas exitosas (de cualquier tipo) dan como resultado el descubrimiento de errores, y los errores deben corregirse. siempre que se corrige el software, cambia algún aspecto de la configuración del software (el programa, su documentación o los datos que sustenta). las pruebas de regresión ayudan a garantizar que los cambios (debidos ¿cuáles son los pasos para la integración ascendente?? punto clave la integración ascendente elimina la necesidad de representantes (stubs) complejos. mc ma d2d3d1mb grupo 1grupo 3 grupo 2figura 17.6 integración ascendentela prueba de regresión es una importante estrategia para reducir “efectos colaterales”. corra pruebas de regresión cada vez que se realiza un cambio importante al software (incluida la integración de nuevos componentes).consejo 17pressman(383-410).indd  39417pressman(383-410).indd  394 21/1/10  10:59:2221/1/10  10:59:22