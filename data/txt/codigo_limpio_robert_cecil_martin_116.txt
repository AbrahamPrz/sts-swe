del paquete, las importaciones y las funciones. Es una regla muy sencilla con un profundo efecto en el diseño visual del código. Cada línea en blanco es una pista visual que identifica un nuevo concepto independiente. Al avanzar por el listado, la vista se fija en la primera línea que aparece tras una línea en blanco. Listado 5-1 BoldWidget.java package fitnesse.wikitext.widgets; import java.util.regex.*; public class BoldWidget extends ParentWidget { public static final String REGEXP = “‘‘‘.+?’’’”; private static final Pattern pattern = Pattern.compile (“‘‘‘(.+?)’’’”, Pattern.MULTILINE + Pattern.DOTALL ); public BoldWidget(ParentWidget parent, String text) throws Exception { super(parent); Matcher match = pattern.matcher(text); match.find(); addChildWidgets(match.group(1)); } public String render() throws Exception { StringBuffer html = new StringBuffer(“<b>”); html.append(childHtml()).append (“</b>”); return html.toString(); } } Si eliminamos las líneas en blanco, como en el Listado 5-2, se oscurece la legibilidad del código. Listado 5-2 BoldWidget.java package fitnesse.wikitext.widgets; import java.util.regex.*; public class BoldWidget extends ParentWidget { public static final String REGEXP = “‘‘‘.+?’’’”; private static final Pattern pattern = Pattern.compile(“‘‘‘(.+?)’’’”, Pattern.MULTILINE + Pattern.DOTALL); public BoldWidget(ParentWidget parent, String text) throws Exception { 117