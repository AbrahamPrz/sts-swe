388 PARTE TRES  ADMINISTRACIÓN DE LA CALIDAD 17.1.4  Criterios para completar las pruebas Cada vez que se analiza la prueba del software, surge una pregunta clásica: “¿cuándo terminan  las pruebas?, ¿cómo se sabe que se ha probado lo suficiente?”. Lamentablemente, no hay una respuesta definitiva a esta pregunta, pero existen algunas respuestas pragmáticas e intentos tempranos a manera de guía empírica. Una respuesta a la pregunta es: “nunca se termina de probar; la carga simplemente pasa de  usted (el ingeniero de software) al usuario final”. Cada vez que el usuario ejecuta un programa de cómputo, el programa se pone a prueba. Este instructivo hecho subraya la importancia de otras actividades a fin de garantizar la calidad del software. Otra respuesta (un tanto cínica, mas no obstante precisa) es: “las pruebas terminan cuando se agota el tiempo o el dinero”. Aunque algunos profesionales usarían estas respuestas, se necesitan criterios más rigurosos  para determinar cuándo se han realizado suficientes pruebas. El enfoque de ingeniería de soft-ware de salas limpias (capítulo 21) sugiere el uso de técnicas estadísticas [Kel00] que ejecutan una serie de pruebas derivadas de una muestra estadística de todas las posibles ejecuciones de programa por parte de todos los usuarios de una población objetivo. Otros (por ejemplo, [Sin99]) abogan por el uso del modelado estadístico y la teoría de confiabilidad del software para prede-cir cuándo están completas las pruebas. Al coleccionar estadísticas durante las pruebas del software y usar los modelos existentes de  confiabilidad del mismo, es posible desarrollar lineamientos significativos para responder la pregunta: “¿cuándo terminan las pruebas?”. Hay poco debate acerca de que todavía queda mu-cho trabajo por hacer antes de poder establecer reglas cuantitativas para las pruebas, pero los acercamientos empíricos que existen en la actualidad son considerablemente mejores que la intuición pura.  17.2 A SPECTOS  ESTRATÉGICOS Más adelante en este capítulo, se presenta una estrategia sistemática para probar el software. Pero incluso la mejor estrategia fracasará si no se aborda una serie de aspectos decisivos. Tom Gilb [Gil95] arguye que una estrategia de software triunfará cuando quienes prueban el software: Especifican los requerimientos del producto en forma cuantificable mucho antes de comenzar  con las pruebas. Aunque el objetivo predominante de una prueba es encontrar errores, una buena estrategia de prueba también valora otras características de la calidad, como la portabi-lidad, el mantenimiento y la facilidad de uso (capítulo 14). Esto debe especificarse en una forma medible, de modo que los resultados de las pruebas no sean ambiguos. Establecen de manera explícita los objetivos de las pruebas.  Los objetivos específicos de las  pruebas deben enunciarse en términos medibles. Por ejemplo, la efectividad de las pruebas, su cobertura, el tiempo medio antes de aparecer una falla, el costo por descubrir y corregir defec-tos, la densidad de defectos restantes o la frecuencia de ocurrencia, y las horas de trabajo de prueba deben enunciarse dentro del plan de la prueba. Entienden a los usuarios del software y desarrollan un perfil para cada categoría de usuario .  Los casos de uso que describen el escenario de interacción para cada clase de usuario pueden reducir el esfuerzo de prueba global al enfocar las pruebas en el uso real del producto. Desarrollan un plan de prueba que enfatice “pruebas de ciclo rápido” . Gilb [Gil95] recomienda  que un equipo de software “aprenda a probar en ciclos rápidos (2 por ciento del esfuerzo del proyecto) de cliente-utilidad al menos la ‘comprobabilidad’ en campo, los incrementos de fun-cionalidad y/o la mejora de la calidad”. La retroalimentación generada a partir de estas prue-bas de ciclo rápido puede usarse para controlar niveles de calidad y las correspondientes es-trategias de prueba.¿Cuándo terminan las  pruebas?? WebRef Un glosario amplio de términos de  pruebas puede encontrarse en el sitio www.testingstandards.co.uk/living_glossary.htm ¿Qué lineamientos  conducen a una exitosa estrategia de prueba del software?? WebRef Una excelente lista de recursos de  prueba puede encontrarse en el sitio www.io.com/~wazmo/qa 17Pressman(383-410).indd   38817Pressman(383-410).indd   388 21/1/10   10:59:2021/1/10   10:59:20