7.1 ■ Diseño orientado a objetos con el uso del UML  179 3. Identificar los objetos principales en el sistema. 4. Desarrollar modelos de diseño.5. Especificar interfaces.  Como todas las actividades creativas, el diseño no es un proceso secuencial tajante.  El diseño se desarrolla al obtener ideas, proponer soluciones y corregir dichas solucio-nes conforme la información se encuentra disponible. Cuando surjan problemas, se ten-drá inevitablemente que regresar y volver a intentar. En ocasiones se exploran opciones a detalle para observar si funcionan; en otras, se ignoran hasta los detalles finales del proceso. En consecuencia, en el texto no se ilustra deliberadamente este proceso como un diagrama simple, debido a que ello implicaría que el diseño se pudiera considerar como una secuencia clara de actividades. De hecho, todas las actividades anteriores están entrelazadas y, por consiguiente, influyen entre sí. Estas actividades de proceso se explican al diseñar parte del software para la estación meteorológica a campo abierto que se presentó en el capítulo 1. Las estaciones meteo-rológicas a campo abierto se despliegan a áreas remotas. Cada estación meteorológica registra información meteorológica local y la transmite periódicamente, a través de un vínculo satelital, a un sistema de información meteorológica.  7.1.1 Contexto e interacciones del sistema La primera etapa en cualquier proceso de diseño de software es desarrollar la compren-sión de las relaciones entre el software que se diseñará y su ambiente externo. Esto es esencial para decidir cómo proporcionar la funcionalidad requerida del sistema y cómo estructurar el sistema para que se comunique con su entorno. La comprensión del con-texto permite también determinar las fronteras del sistema. El establecimiento de las fronteras del sistema ayuda a decidir sobre las características que se implementarán en el sistema que se va a diseñar, así como sobre las de otros sis-temas asociados. En este caso, es necesario decidir cómo se distribuirá la funcionalidad entre el sistema de control para todas las estaciones meteorológicas y el software embe-bido en la estación meteorológica en sí. Los modelos de contexto del sistema y los modelos de interacción presentan vistas complementarias de las relaciones entre un sistema y su entorno: 1. Un modelo de contexto del sistema es un modelo estructural, que muestra los otros  sistemas en el entorno del sistema a desarrollar. 2. Un modelo de interacción es un modelo dinámico que indica la forma en que el sis- tema interactúa con su entorno conforme se utiliza.  El modelo del contexto de un sistema puede representarse mediante asociaciones, las  cuales muestran simplemente que existen algunas relaciones entre las entidades que inter-vienen en la asociación. La naturaleza de la relaciones es ahora específica. Por lo tanto, es posible documentar el entorno del sistema con un simple diagrama de bloques, que mani-fieste las entidades en el sistema y sus asociaciones. Esto se expone en la figura 7.1, la cual indica que los sistemas en el entorno de cada estación meteorológica son un sistema  M07_SOMMERVILLE_INGENIERIA_1ED_SE_176-204.indd   179M07_SOMMERVILLE_INGENIERIA_1ED_SE_176-204.indd   179 3/18/11   4:50:12 PM3/18/11   4:50:12 PM