426  Capítulo 16 ■ Reutilización de software La ingeniería de software basada en la reutilización es una estrategia en la que se engrana  el proceso de desarrollo para reutilizar el software existente. Aunque la reutilización se propuso como una estrategia de desarrollo hace más de 40 años (McIlroy, 1968), es sólo a partir de 2000 cuando el “desarrollo con reutilización” se convirtió en la norma de los nue-vos sistemas empresariales. El movimiento hacia el desarrollo basado en la reutilización fue en respuesta a las demandas para reducir los costos de producción y mantenimiento del software, entregar los sistemas con mayor rapidez y aumentar la calidad del software. Cada vez más compañías consideran su software como un activo valioso. Así, promueven su reutilización para incrementar el rendimiento en las inversiones de software. La disponibilidad de software reutilizable aumentó drásticamente. El movimiento de fuente abierta significó que se dispone de una enorme base de código de reutilización a bajo costo. Esto puede ser en la forma de librerías de programa o aplicaciones completas. Existen muchos sistemas de aplicación de dominio específico disponibles que pueden ajustarse y adaptarse a las necesidades de una compañía específica. Algunas grandes com-pañías ofrecen varios componentes de reutilización para sus clientes. Los estándares, como los estándares de servicios Web, han facilitado el desarrollo de servicios generales y su reutilización a través de varias aplicaciones. La ingeniería de software basada en la reutilización es un enfoque al desarrollo que trata de maximizar la reutilización del software existente. Las unidades de software que se reutilizan pueden ser de tamaños sustancialmente diferentes. Por ejemplo: 1. Reutilización del sistema de aplicación Todo un sistema de aplicación puede reuti- lizarse al incorporarlo sin cambios en otros sistemas o al configurar la aplicación para diferentes clientes. De manera alternativa, pueden desarrollarse familias de aplica-ción que, aunque tengan una arquitectura común, se ajustan a clientes específicos. Más adelante, en este capítulo, se hablará de la reutilización de componentes. 2. Reutilización de componentes Los componentes de una aplicación, que varían en tamaño desde subsistemas hasta objetos individuales, pueden reutilizarse. Por ejem-plo, un sistema de identificación de patrones desarrollado como parte de un sistema de procesamiento de texto puede reutilizarse en un sistema de administración de base de datos. La reutilización de componentes se desarrolla en los capítulos 17 y 19. 3. Reutilización de objetos y funciones Pueden reutilizarse los componentes de soft-ware que implementan una sola función, tal como una función matemática, o una clase de objeto. Esta forma de reutilización en torno a librerías estándar ha sido común durante los últimos 40 años. Muchas librerías de funciones y clases están dis-ponibles de manera gratuita. Las clases y funciones en dichas librerías se reutilizan al vincularlas con un código de aplicación de desarrollo reciente. Este enfoque es particularmente efectivo en áreas como algoritmos matemáticos y gráficas, donde se necesita experiencia especializada para desarrollar objetos y funciones eficientes.  Los sistemas y componentes de software son entidades potencialmente reutilizables, pero su naturaleza específica significa que en ocasiones es costoso modificarlos para una nueva situación. Una forma complementaria de reutilización es la “reutilización de con-cepto” en la que, en vez de reutilizar un componente de software, se reutiliza una idea, una vía, un funcionamiento o un algoritmo. El concepto que se reutiliza se representa en una notación abstracta (por ejemplo, un modelo de sistema), que no incluye detalles de implementación. Por lo tanto, puede configurarse y adaptarse para varias situaciones. El concepto de reutilización puede incorporarse como en el diseño de patrones de diseño (que se estudiaron en el capítulo 7), productos de sistema configurables y generadores de  M16_SOMMERVILLE_INGENIERIA_1ED_SE_423-451.indd   426M16_SOMMERVILLE_INGENIERIA_1ED_SE_423-451.indd   426 3/18/11   5:02:12 PM3/18/11   5:02:12 PM