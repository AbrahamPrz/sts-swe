496  Capítulo 18 ■ Ingeniería de software distribuido solicitan dichos servicios a través de middleware, usando solicitudes de procedimiento  remoto o llamadas a métodos. Los sistemas de componentes distribuidos dependen del middleware, que gestiona las interacciones de componentes, reconcilia las diferencias entre tipos de parámetros transmi-tidos entre componentes, y ofrece un conjunto de servicios comunes que pueden usar los componentes de la aplicación. CORBA (Orfali et al., 1997) fue un ejemplo temprano de tal middleware, pero ahora no se usa ampliamente. Fue sustituido sobre todo por software propietario como Enterprise Java Beans (EJB) o .NET. Los beneficios de usar un modelo de componentes distribuidos para implementar sis-temas distribuidos son los siguientes: 1. Permite al diseñador del sistema demorar las decisiones acerca de dónde y cómo  deben proporcionarse los servicios. Los componentes que brindan servicios pueden ejecutarse en cualquier nodo de la red. No hay necesidad de decidir por adelantado si un servicio es parte de una capa de gestión de datos, de una capa de aplicación, etcétera. 2. Es una arquitectura de sistema muy abierta que permite adicionar nuevos recursos conforme se requiera. Pueden agregarse fácilmente nuevos servicios de sistema sin grandes perturbaciones al sistema existente. 3. El sistema es flexible y escalable. Pueden añadirse nuevos componentes o compo-nentes replicados a medida que aumente la carga del sistema, sin perturbar otras partes de éste. 4. Es posible, según se requiera, reconfigurar dinámicamente el sistema con compo-nentes que migran a través de la red. Esto puede ser importante donde existan patro-nes fluctuantes de demanda de servicios. Un componente de prestación de servicios puede migrar hacia el mismo procesador que solicitó el servicio como un objeto, por lo que mejora el rendimiento del sistema.  Una arquitectura de componentes distribuidos puede usarse como un modelo lógico que permita estructurar y organizar el sistema. En este caso, piense en cómo ofrecer funcionalidad a la aplicación exclusivamente en términos de servicios y combinacio-nes de servicios. Entonces calcule cómo ofrecer dichos servicios mediante un conjun-to de componentes distribuidos. Por ejemplo, en una aplicación de ventas, puede haber Middleware de comunicaciónComp 1 Servicios comunesComp 2 Servicios comunesComp 3 Servicios comunesComp 4 Servicios comunes Cliente Cliente Cliente ClienteFigura 18.12  Arquitectura de componentes distribuida M18_SOMMERVILLE_INGENIERIA_1ED_SE_479-507.indd   496M18_SOMMERVILLE_INGENIERIA_1ED_SE_479-507.indd   496 3/18/11   5:03:56 PM3/18/11   5:03:56 PM