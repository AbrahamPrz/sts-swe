190 parte dos modelado en el nivel de abstracción más bajo se plantea la solución, de modo que pueda implementarse directamente. cuando se desarrollan niveles de abstracción distintos, se trabaja para crear abstracciones tanto de procedimiento como de datos. una abstracción de procedimiento es una secuencia de instrucciones que tienen una función específica y limitada. el nombre de la abstracción de pro-cedimiento implica estas funciones, pero se omiten detalles específicos. un ejemplo de esto sería la palabra abrir, en el caso de una puerta. abrir implica una secuencia larga de pasos del procedimiento (caminar hacia la puerta, llegar y tomar el picaporte, girar éste y jalar la puerta, retroceder para que la puerta se abra, etcétera). 5 una abstracción de datos es un conjunto de éstos con nombre que describe a un objeto de datos. en el contexto de la abstracción de procedimiento abrir, puede definirse una abstracción de datos llamada puerta. como cualquier objeto de datos, la abstracción de datos para puerta agruparía un conjunto de atributos que describirían la puerta (tipo, dirección del abatimiento, mecanismo de apertura, peso, dimensiones, etc.). se concluye que la abstracción de procedi-miento abrir usaría información contenida en los atributos de la abstracción de datos puerta. 8.3.2 arquitectura la arquitectura del software alude a “la estructura general de éste y a las formas en las que ésta da integridad conceptual a un sistema” [sha95a]. en su forma más sencilla, la arquitectura es la estructura de organización de los componentes de un programa (módulos), la forma en la que éstos interactúan y la estructura de datos que utilizan. sin embargo, en un sentido más amplio, los componentes se generalizan para que representen los elementos de un sistema grande y sus interacciones. una meta del diseño del software es obtener una aproximación arquitectónica de un sistema. ésta sirve como estructura a partir de la cual se realizan las actividades de diseño más detalla-das. un conjunto de patrones arquitectónicos permite que el ingeniero de software resuelva problemas de diseño comunes. shaw y garlan [sha95a] describen un conjunto de propiedades que deben especificarse como parte del diseño de la arquitectura: propiedades estructurales. este aspecto de la representación del diseño arquitectónico define los componentes de un sistema (módulos, objetos, filtros, etc.) y la manera en la que están agrupados e interactúan unos con otros. por ejemplo, los objetos se agrupan para que encapsulen tanto datos como el procedimiento que los manipula e interactúen invocando métodos. propiedades extrafuncionales. la descripción del diseño arquitectónico debe abordar la forma en la que la arquitectura del diseño satisface los requerimientos de desempeño, capacidad, confiabi-lidad, seguridad y adaptabilidad, así como otras características del sistema. familias de sistemas relacionados. el diseño arquitectónico debe basarse en patrones repeti- bles que es común encontrar en el diseño de familias de sistemas similares. en esencia, el diseño debe tener la capacidad de reutilizar bloques de construcción arquitectónica. dada la especificación de estas propiedades, el diseño arquitectónico se representa con el uso de uno o más de varios modelos diferentes [gar95]. los modelos estructurales representan la arquitectura como un conjunto organizado de componentes del programa. los modelos de marco aumentan el nivel de abstracción del diseño, al tratar de identificar patrones de diseño arquitec-tónico repetibles que se encuentran en tipos similares de aplicaciones. los modelos dinámicos abordan los aspectos estructurales de la arquitectura del programa e indican cómo cambia la como diseñador, trabaje mucho para obtener abstracciones tanto de procedimiento como de datos que sirvan para el problema en cuestión. será aún mejor si sirvieran para un dominio completo de problemas.consejo 5 sin embargo, debe notarse que un conjunto de operaciones puede reemplazarse con otro, en tanto la función que implica la abstracción de procedimiento sea la misma. por tanto, los pasos requeridos para implementar abrir cambiarían mucho si la puerta fuera automática y tuviera un sensor.cita: “una arquitectura del software es el producto del trabajo de desarrollo que tiene la rentabili-dad más alta para una inversión en cuanto a calidad, secuencia de actividades y costo.” len bass et al. no deje al azar la arquitectura. si lo hace, pasará el resto del proyecto forzándola para que se ajuste al diseño. diseñe la arquitectura explícitamente.consejowebref en la dirección www.sei.cmu. edu/ata/ata_init.html hay un análisis profundo de la arquitectura del software. 08pressman(183-205).indd  19008pressman(183-205).indd  190 14/1/10  14:31:0814/1/10  14:31:08