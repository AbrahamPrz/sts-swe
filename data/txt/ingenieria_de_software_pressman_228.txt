capítulo 8 conceptos de diseño 197 ejemplo, la clase videoclip quizá contenga un conjunto de métodos para editar el corto de video. la cohesión se mantiene en tanto cada método se centre sólo en los atributos aso-ciados con el corto. poco acoplamiento. dentro del modelo de diseño, es necesario que las clases de diseño colaboren una con otra. sin embargo, la colaboración debe mantenerse en un mínimo aceptable. si un modelo de diseño está muy acoplado (todas las clases de diseño colaboran con todas las demás), el sistema es difícil de implementar, probar y mantener con el paso del tiempo. en general, las clases de diseño dentro de un subsistema deben tener sólo un conocimiento limitado de otras clases. esta restricción se llama ley de demeter [lie03] y su- giere que un método sólo debe enviar mensajes a métodos que están en clases vecinas. 6 6 una manera menos formal de la ley de demeter es: “cada unidad debe hablar sólo con sus amigas: no hablar con extraños”. 7 en el apéndice 1 se encuentra un método de enseñanza sobre los conceptos y notación básica del uml.la escena: el cubículo de ed, cuando comienza el modelado del diseño. participantes: vinod y ed, miembros del equipo de ingeniería de software de casasegura. la conversación:[ed está trabajando en la clase planodelaplanta (véanse el recuadro en la sección 6.5.3 y la figura 6.10) y la ha refinado para el modelo del diseño.] ed: entonces recuerdas la clase planodelaplanta, ¿verdad? se usa como parte de las funciones de vigilancia y administración de la casa. vinod (afirma con la cabeza): sí, recuerdo que la usamos como parte de nuestros análisis crc para la administración de la casa. ed: así es. de cualquier modo, la estoy mejorando para el diseño. quiero mostrarte cómo implantaremos en realidad la clase plano-delaplanta. mi idea es implementarla como un conjunto de listas ligadas [una estructura de datos específica] de modo que… tuve que refinar la clase de análisis planodelaplanta (véase la figura 6.10) y, en verdad, simplificarla.vinod: la clase de análisis sólo mostraba cosas en el dominio del problema, bueno, en la pantalla de la computadora, visibles para el usuario final, ¿de acuerdo? ed: sí, pero para la clase de diseño planodelaplanta, he tenido que agregar algunas cosas específicas para la implantación. necesi- té mostrar que planodelaplanta es un agregado de segmentos—de ahí la clase segmento— y que la clase segmento está compuesta de listas para segmentos de pared, ventanas, puertas, etc. la clase cámara colabora con planodelaplanta y, obvia- mente, hay muchas cámaras en el piso. vinod: ah… veamos la ilustración de esta nueva clase de diseño, planodelaplanta. [ed muestra a vinod el diagrama que aparece en la figura 8.3.]vinod: bien, ya veo lo que tratas de hacer. esto te permite modifi- car el plano de la planta con facilidad porque los nuevos temas se agregan, o eliminan de la lista (el agregado), sin problemas. ed (asiente): sí, creo que funcionará.vinod: también yo.casasegura refinamiento de una clase de análisis en una clase de diseño 8.4 el modelo del diseño el modelo del diseño puede verse en dos dimensiones distintas, como se ilustra en la figura 8.4. la dimensión del proceso indica la evolución del modelo del diseño conforme se ejecutan las tareas de éste como parte del proceso del software. la dimensión de la abstracción representa el nivel de detalle a medida que cada elemento del modelo de análisis se transforma en un equi-valente de diseño y luego se mejora en forma iterativa. en relación con la figura 8.4, la línea punteada indica la frontera entre los modelos de análisis y de diseño. en ciertos casos, es posi-ble hacer una distinción clara entre ambos modelos. en otros, el modelo de análisis se mezcla poco a poco con el de diseño y la distinción es menos obvia. los elementos del modelo de diseño usan muchos de los diagramas uml 7 que se utilizaron en el modelo del análisis. la diferencia es que estos diagramas se refinan y elaboran como parte 08pressman(183-205).indd  19708pressman(183-205).indd  197 14/1/10  14:31:1014/1/10  14:31:10