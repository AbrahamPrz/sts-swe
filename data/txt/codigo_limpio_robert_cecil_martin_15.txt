empresa? ¿Por qué estamos en esa habitación? ¿Es una sencilla revisión del código o hemos detectado un sinfín de problemas terribles? ¿Depuramos presas del pánico el código que pensábamos que funcionaba? ¿Los clientes huyen despavoridos y los directores nos pisan los talones? ¿Cómo asegurarnos de que abrimos la puerta correcta cuando las cosas se ponen feas? La respuesta:  la maestría . La maestría se consigue de dos formas: conocimientos y trabajo. Debe adquirir el conocimiento de los principios, patrones, prácticas y heurística propios de un maestro, y dominar dichos conocimientos a través de la práctica. Puedo enseñarle la teoría de montar en bicicleta. De hecho, los conceptos matemáticos clásicos son muy sencillos. Gravedad, fricción, velocidad angular, centro de masa, etc., se pueden demostrar en menos de una página repleta de ecuaciones. Con esas fórmulas, puedo demostrar que montar en bicicleta es práctico y proporcionarle los conocimientos necesarios para conseguirlo. Pero la primera vez que se monte en una bici se caerá al suelo. El diseño de código no es diferente. Podríamos enumerar todos los principios del código limpio y confiar en que se  encargue  del resto (es decir, dejar que se cayera de la bici) pero entonces la pregunta sería qué clase de profesores somos y qué clase de alumno sería. No. Así no funciona este libro. Aprender a crear código limpio es  complicado . Requiere algo más que conocer principios y patrones. Tiene que sudar. Debe practicarlo y fallar. Debe ver cómo otros practican y fallan. Debe observar cómo se caen y recuperan el paso. Debe ver cómo agonizan en cada decisión y el precio que pagan por tomar decisiones equivocadas. Para leer este libro, prepárese a trabajar duro. No es un libro que se pueda leer en un avión y terminarlo antes de aterrizar. Este libro le hará trabajar, y mucho. ¿Y qué tipo de trabajo? Tendrá que leer código, en abundancia. Y se le pedirá que piense en qué acierta el código y en qué falla. Se le pedirá que siga nuestras descripciones mientras despedazamos módulos y los volvemos a ensamblar. Para ello necesitará tiempo y esfuerzo, pero creemos que merece la pena. Hemos dividido el libro en tres partes. Los primeros capítulos describen 16