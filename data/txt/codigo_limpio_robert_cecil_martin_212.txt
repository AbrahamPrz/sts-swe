independiente), que los clientes usen. el listado 1-1 muestra una posible interfaz local: listado 11-1 una interfaz local ejb2 para el ejb bank. package com.example.banking; import java.util.collections; import javax.ejb.*; public interface banklocal extends java.ejb.ejblocalobject { string getstreetaddrl{} throws ejbexception; string getstreetaddr2{} throws ejbexception; string getcity() throws ejbexception; string getstate() throws ejbexception; string getzipcode() throws ejbexception; void setstreetaddr1(string street1) throws ejbexception; void setstreetaddr2(string street2) throws ejbexception; void setcity(string city) throws ejbexception; void setstate(string state) throws ejbexception; void setzipcode(string zip) throws ejbexception; collection getaccounts() throws ejbexception; void setaccounts(collection accounts) throws ejbexception; void addaccount(accountdto accountdto) throws ejbexception; } mostramos diversos atributos de la dirección de bank y una colección de cuentas del banco, cuyos datos se procesarán por un ejb account diferente. el listado 11-2 muestra la correspondiente clase de implementación del bean bank . listado 11-2 implementación del bean de entidad ejb2. package com.example.banking; import java.util.collections; import javax.ejb.*; public abstract class bank implements javax.ejb.entitybean { // lógica empresarial… public abstract string getstreeraddr1(); public abstract string getstreetaddr2(); public abstract string getcity(); public abstract string getstate(); public abstract string getzipcode(); public abstract void setstreetaddr1(string street1); 213