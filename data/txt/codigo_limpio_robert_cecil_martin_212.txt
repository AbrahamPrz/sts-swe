independiente), que los clientes usen. El Listado 1-1 muestra una posible interfaz local: Listado 11-1 Una interfaz local EJB2 para el EJB Bank. package com.example.banking; import java.util.Collections; import javax.ejb.*; public interface BankLocal extends java.ejb.EJBLocalObject { String getStreetAddrl{} throws EJBException; String getStreetAddr2{} throws EJBException; String getCity() throws EJBException; String getState() throws EJBException; String getZipCode() throws EJBException; void setStreetAddr1(String street1) throws EJBException; void setStreetAddr2(String street2) throws EJBException; void setCity(String city) throws EJBException; void setState(String state) throws EJBException; void setZipCode(String zip) throws EJBException; Collection getAccounts() throws EJBException; void setAccounts(Collection accounts) throws EJBException; void addAccount(AccountDTO accountDTO) throws EJBException; } Mostramos diversos atributos de la dirección de  Bank  y una colección de cuentas del banco, cuyos datos se procesarán por un EJB  Account  diferente. El Listado 11-2 muestra la correspondiente clase de implementación del bean Bank . Listado 11-2 Implementación del bean de entidad EJB2. package com.example.banking; import java.util.Collections; import javax.ejb.*; public abstract class Bank implements javax.ejb.EntityBean { // Lógica empresarial… public abstract String getStreerAddr1(); public abstract String getStreetAddr2(); public abstract String getCity(); public abstract String getState(); public abstract String getZipCode(); public abstract void setStreetAddr1(String street1); 213