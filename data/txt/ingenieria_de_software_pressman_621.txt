590 parte cuatro administración de proyectos de software 25.7 r esumen la medición permite a gerentes y profesionales mejorar el proceso de software; auxiliar en la planificación, rastreo y control de proyectos de software y valorar la calidad del producto (soft-ware) que se elabora. las medidas de atributos específicos del proceso, proyecto y producto se usan para calcular las métricas de software. dichas métricas pueden analizarse para proporcio-nar indicadores que guíen las acciones administrativas y técnicas. las métricas de proceso permiten que una organización adopte una visión estratégica al proporcionar comprensión acerca de la efectividad de un proceso de software. las métricas de proyecto son tácticas. permiten que un gerente de proyecto adapte el flujo de trabajo del proyecto y el enfoque técnico en tiempo real. las métricas orientadas a tamaño y a función se usan a lo largo de la industria. las primeras usan la línea de código como un factor de normalización para otras medidas, como persona-meses o defectos. el punto de función se deriva de las medidas del dominio de información y de una valoración subjetiva de la complejidad del problema. además, pueden usarse métricas orientadas a objeto y a webapp. las métricas de calidad del software, como las métricas de productividad, se enfocan en el proceso, el proyecto y el producto. al desarrollar y analizar una línea de referencia de métricas para la calidad, una organización puede corregir aquellas áreas del proceso de software que sean la causa de los defectos de software. la medición da como resultado un cambio cultural. la recopilación de datos, cálculo de mé- tricas y análisis de métricas son los tres pasos que deben implementarse para comenzar un programa de métricas. en general, un enfoque dirigido a metas ayuda a una organización a enfocarse en las métricas correctas para su empresa. al crear una línea de referencia de métri-cas, una base de datos que contenga mediciones de proceso y producto, los ingenieros de soft-ware y sus gerentes pueden obtener mejor comprensión del trabajo que hacen y del producto que elaboran.  problemas y puntos por evaluar 25.1. describa con sus palabras la diferencia entre métricas de proceso y de proyecto. 25.2. ¿por qué algunas métricas de software deben mantenerse “privadas”? ofrezca cinco ejemplos de tres métricas que deban ser privadas. brinde ejemplos de tres métricas que deban ser públicas. 25.3. ¿qué es una media indirecta y por qué tales mediciones son comunes en el trabajo con métricas de software? 25.4. grady sugiere una etiqueta para las métricas de software. ¿puede agregar tres reglas más a las  anotadas en la sección 25.1.1? ¿qué mecanismos de validación se usan para garantizar que los datos son correctos? 6. adquirir herramientas adecuadas para auxiliar en la recopila- ción y valoración. 7. establecer una base de datos de métricas.  establecer la sofisticación relativa de la base de datos.  explorar el uso de herramientas relacionadas (por ejemplo, un repositorio scm, capítulo 26).  evaluar los productos de base de datos existentes. 8. definir mecanismos de retroalimentación adecuados.  ¿quién requiere información de métricas actuales? ¿cómo se entregará la información? ¿cuál es el formato de la información? una descripción considerablemente más detallada de estos ocho pasos puede descargarse de www.spc.ca/resources/metrics/ 25pressman(571-592).indd  59025pressman(571-592).indd  590 19/1/10  23:39:5719/1/10  23:39:57