756 referencias [fow04] fowler, m., uml distilled, 3a. ed., addison-wesley, 2004. [fra93] frankl, p. g. y s. weiss, “an experimental comparison of the effectiveness of branch testing and data flow”, ieee trans. software engineering, vol. se-19, núm. 8, agosto 1993, pp. 770-787. [fra03] francois, a., “software architecture for immersipresence”, imsc technical report imsc-03-001, university of southern california, diciembre 2003, disponible en http:/ /iris.usc.edu/ ~afrancoi/pdf/sai- tr.pdf. [fre80] freeman, p., “the context of design”, en software design techniques , 3a. ed. (p. freeman y a. wasser- man, eds.), ieee computer society press, 1980, pp. 2-4. [fre90] freedman, d. p. y g. m. weinberg, handbook of walkthroughs, inspections and technical reviews, 3a. ed., dorset house, 1990. [gag04] gage, d. y j. mccormick, “we did nothing wrong”, baseline magazine, marzo 4, 2004, disponible en www.baselinemag.com/article2/0,1397,1544403,00.asp. [gai95] gaines, b., “modeling and forecasting the information sciences”, technical report, university of calgary, calgary, alberta, septiembre 1995. [gam95] gamma, e., et al., design patterns: elements of reusable object-oriented software, addison-wesley, 1995. [gar84] garvin, d., “what does ‘product quality’ really mean?” sloan management review, otoño 1984, pp. 25-45. [gar87] garvin d., “competing on the eight dimensions of quality”, harvard business review , noviembre 1987, pp. 101-109. resumen disponible en www.acm.org/crossroads/ xrds6-4/software.html. [gar95] garlan, d. y m. shaw, “an introduction to software architecture”, advances in software engineering and knowledge engineering, vol. i (v. ambriola and g. tortora, eds.), world scientific publishing company, 1995. [gar08] gartnergroup, “understanding hype cycles”, 2008, disponible en www.gartner.com/ pages/story. php.id.8795.s.8.jsp. [gau89] gause, d. c. y g. m. weinberg, exploring requirements: quality before design, dorset house, 1989. [gey01] geyer-schulz, a. y m. hahsler, “software engineering with analysis patterns”, technical report 01/2001, institut für informationsverarbeitung und -wirtschaft, wirschaftsuniversität wien, noviembre 2001, descargable de wwwai.wu-wien.ac.at/~hahsler/ research/virlib_working2001/virlib/. [gil88] gilb, t., principles of software project management, addison-wesley, 1988. [gil95] gilb, t., “what we fail to do in our current testing culture”, testing techniques newsletter (online edition, ttn@soft.com), software research, enero 1995. [gil06] gillis, d., “pattern-based design”, tehan + lax blog, septiembre 14, 2006, disponible en www.teehan- lax.com/blog/?p=96. [gla98] glass, r., “defining quality intuitively”, ieee software, mayo 1998, pp. 103-104, 107. [gla00] gladwell, m., the tipping point, back bay books, 2002. [gli07] glinz, m. y r. wieringa, “stakeholders in requirements engineering”, ieee software , vol. 24, núm. 2, marzo-abril 2007, pp. 18-20. [glu94] gluch, d., “a construct for describing software development risks”, cmu/sei-94-tr-14, software engineering institute, 1994. [gna99] gnaho, c. y f. larcher, “a user-centered methodology for complex and customizable web enginee- ring”, proc. 1st icse workshop on web engineering, acm, los angeles, mayo 1999. [gon04] gonzales, r., “requirements engineering”, sandia national laboratories, presentación de diapositi- vas, disponible en www.incose.org/enchantment/docs/04aprrequirementsengineering.pdf. [gor02] gordon, b. y m. gordon, the complete guide to digital graphic design , watson- guptill, 2002. [gor06] gorton, i., essential software architecture, springer, 2006. [gra87] grady, r. b. y d. l. caswell, software metrics: establishing a company-wide program , prentice hall, 1987. [gra92] grady, r. b., practical software metrics for project management and process improvement, prentice hall, 1992. [gra99] grable, r., et al., “metrics for small projects: experiences at sed ,” ieee software, marzo 1999, pp. 21-29. [gra03] gradecki, j. y n. lesiecki, mastering aspectj: aspect-oriented programming in java, wiley, 2003. [gru02] grundy, j., “aspect-oriented component engineering”, 2002, www.cs.auckland.ac.nz/~john-g/as- pects.html. [gus89] gustavsson, a., “maintaining the evolution of software objects in an integrated environment”, proc. 2nd intl. workshop on software configuration management, acm, princeton, nj, octubre 1989, pp. 114-117. [gut93] guttag, j. v. y j. j. horning, larch: languages and tools for formal specification, springer-verlag, 1993. [hac98] hackos, j. y j. redish, user and task analysis for interface design, wiley, 1998. [hai02] hailpern, b. y p. santhanam, “software debugging, testing and verification”, ibm systems journal, vol. 41, núm. 1, 2002, disponible en www.research.ibm.com/journal/sj/ 411/hailpern.html. [hal77] halstead, m., elements of software science, north-holland, 1977. 35pressman(751-766)refer.indd  75635pressman(751-766)refer.indd  756 2/2/10  11:41:182/2/10  11:41:18