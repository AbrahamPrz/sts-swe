756 REFERENCIAS [Fow04] Fowler, M., UML Distilled, 3a. ed., Addison-Wesley, 2004. [Fra93] Frankl, P. G. y S. Weiss, “An Experimental Comparison of the Effectiveness of Branch Testing and Data  Flow”, IEEE Trans. Software Engineering, vol. SE-19, núm. 8, agosto 1993, pp. 770-787. [Fra03] Francois, A., “Software Architecture for Immersipresence”, IMSC Technical Report IMSC-03-001,  University of Southern California, diciembre 2003, disponible en http:/ /iris.usc.edu/ ~afrancoi/pdf/sai- tr.pdf. [Fre80] Freeman, P., “The Context of Design”, en Software Design Techniques , 3a. ed. (P. Freeman y A. Wasser- man, eds.), IEEE Computer Society Press, 1980, pp. 2-4. [Fre90] Freedman, D. P. y G. M. Weinberg, Handbook of Walkthroughs, Inspections and  Technical Reviews, 3a.  ed., Dorset House, 1990. [Gag04] Gage, D. y J. McCormick, “We Did Nothing Wrong”, Baseline Magazine, marzo 4, 2004, disponible en  www.baselinemag.com/article2/0,1397,1544403,00.asp. [Gai95] Gaines, B., “Modeling and Forecasting the Information Sciences”, Technical Report,  University of  Calgary, Calgary, Alberta, septiembre 1995. [Gam95] Gamma, E., et al., Design Patterns: Elements of Reusable Object-Oriented Software,  Addison-Wesley,  1995. [Gar84] Garvin, D., “What Does ‘Product Quality’ Really Mean?” Sloan Management Review, otoño 1984, pp.  25-45. [Gar87] Garvin D., “Competing on the Eight Dimensions of Quality”,  Harvard Business Review ,  noviembre 1987,  pp. 101-109. Resumen disponible en www.acm.org/crossroads/ xrds6-4/software.html. [Gar95] Garlan, D. y M. Shaw, “An Introduction to Software Architecture”, Advances in  Software Engineering  and Knowledge Engineering, vol. I (V. Ambriola and G. Tortora, eds.), World Scientific Publishing Company, 1995. [Gar08] GartnerGroup, “Understanding Hype Cycles”, 2008, disponible en www.gartner.com/ pages/story. php.id.8795.s.8.jsp. [Gau89] Gause, D. C. y G. M. Weinberg, Exploring Requirements: Quality Before Design, Dorset House, 1989. [Gey01] Geyer-Schulz, A. y M. Hahsler, “Software Engineering with Analysis Patterns”,  Technical Report  01/2001, Institut für Informationsverarbeitung und -wirtschaft, Wirschaftsuniversität Wien, noviembre 2001, descargable de wwwai.wu-wien.ac.at/~hahsler/  research/virlib_working2001/virlib/. [Gil88] Gilb, T., Principles of Software Project Management, Addison-Wesley, 1988. [Gil95] Gilb, T., “What We Fail to Do in Our Current Testing Culture”, Testing Techniques Newsletter (online  edition, ttn@soft.com), Software Research, enero 1995. [Gil06] Gillis, D., “Pattern-Based Design”, tehan + lax blog, septiembre 14, 2006, disponible en www.teehan- lax.com/blog/?p=96. [Gla98] Glass, R., “Defining Quality Intuitively”, IEEE Software, mayo 1998, pp. 103-104, 107. [Gla00] Gladwell, M., The Tipping Point, Back Bay Books, 2002. [Gli07] Glinz, M. y R. Wieringa, “Stakeholders in Requirements Engineering”, IEEE Software , vol. 24, núm. 2,  marzo-abril 2007, pp. 18-20. [Glu94] Gluch, D., “A Construct for Describing Software Development Risks”, CMU/SEI-94-TR-14, Software  Engineering Institute, 1994. [Gna99] Gnaho, C. y F. Larcher, “A User-Centered Methodology for Complex and Customizable Web Enginee- ring”, Proc. 1st ICSE Workshop on Web Engineering, ACM, Los Angeles, mayo 1999. [Gon04] Gonzales, R., “Requirements Engineering”, Sandia National Laboratories, presentación de diapositi- vas, disponible en www.incose.org/enchantment/docs/04AprRequirementsEngineering.pdf. [Gor02] Gordon, B. y M. Gordon, The Complete Guide to Digital Graphic Design , Watson- Guptill, 2002. [Gor06] Gorton, I., Essential Software Architecture, Springer, 2006. [Gra87] Grady, R. B. y D. L. Caswell, Software Metrics: Establishing a Company-Wide Program , Prentice Hall,  1987. [Gra92] Grady, R. B., Practical Software Metrics for Project Management and Process Improvement, Prentice Hall,  1992. [Gra99] Grable, R., et al., “Metrics for Small Projects: Experiences at SED  ,” IEEE Software, marzo 1999, pp.  21-29.  [Gra03] Gradecki, J. y N. Lesiecki, Mastering AspectJ: Aspect-Oriented Programming in Java,  Wiley, 2003. [Gru02] Grundy, J., “Aspect-Oriented Component Engineering”, 2002, www.cs.auckland.ac.nz/~john-g/as- pects.html. [Gus89] Gustavsson, A., “Maintaining the Evolution of Software Objects in an Integrated Environment”, Proc.  2nd Intl. Workshop on Software Configuration Management, ACM, Princeton, NJ, octubre 1989, pp. 114-117. [Gut93] Guttag, J. V. y J. J. Horning, Larch: Languages and Tools for Formal Specification, Springer-Verlag,  1993. [Hac98] Hackos, J. y J. Redish, User and Task Analysis for Interface Design, Wiley, 1998. [Hai02] Hailpern, B. y P. Santhanam, “Software Debugging, Testing and Verification”, IBM Systems Journal,  vol. 41, núm. 1, 2002, disponible en www.research.ibm.com/journal/sj/ 411/hailpern.html. [Hal77] Halstead, M., Elements of Software Science, North-Holland, 1977. 35Pressman(751-766)Refer.indd   75635Pressman(751-766)Refer.indd   756 2/2/10   11:41:182/2/10   11:41:18