private void setintarg(char argchar) throws argsexception { currentargument++; string parameter = null; try { parameter = args[currentargument]; intargs.put(argchar, new integer(parameter)); } catch (arrayindexoutofboundsexception e) { valid = false; errorargumentid = argchar; errorcode = errorcode.missing_integer; throw new argsexception(); } catch (numberformatexception e) { valid = false; errorargumentid = argchar; errorparameter = parameter; errorcode = errorcode.invalid_integer; throw new argsexception(); } } private void setstringarg(char argchar) throws argsexception { currentargument++; try { stringargs.put(argchar, args[currentargument]); } catch (arrayindexoutofboundsexception e) { valid = false; errorargumentid = argchar; errorcode = errorcode.missing_string; throw new argsexception(); } } private boolean isstringarg(char argchar) { return stringargs.containskey(argchar); } private void setbooleanarg(char argchar, boolean value) { booleanargs.put(argchar, value); } private boolean isbooleanarg(char argchar) { return booleanargs.containskey(argchar); } public int cardinality() { return argsfound.size(); } public string usage() { if (schema.length() > 0) return "-[" + schema + “]”; else return “”; } 267