638  Capítulo 23 ■ Planeación de proyectos guiones o programación de base de datos. Las estimaciones del tamaño de soft- ware se basan en puntos de aplicación, y para estimar el esfuerzo requerido se usa una simple fórmula tamaño/productividad. El número de puntos de aplicación en un programa es una estimación ponderada del número de pantallas separadas que se despliegan, el número de informes que se producen, el número de módulos en len-guajes de programación imperativa (como Java) y el número de líneas de lenguaje de escritura de guiones (scripting) o código de programación de base de datos. 2. Un modelo de diseño temprano Este modelo se usa durante etapas tempranas del diseño del sistema después de establecer los requerimientos. La estimación se basa en la fórmula de estimación estándar que se discutió en la introducción, con un con-junto simplificado de siete multiplicadores. Las estimaciones se basan en puntos de función, que luego se convierten a número de líneas de código fuente. Los puntos de función son una forma independiente de lenguaje para cuantificar la funcionali-dad del programa. El número total de puntos de función en un programa se calcula al medir o estimar el número de entradas y salidas externas, las interacciones de usuario, las interfaces externas y las tablas de archivos o bases de datos que usa el sistema. 3. Un modelo de reutilización Este modelo se emplea para calcular el esfuerzo reque-rido al integrar los componentes de reutilización y/o código de programa generado automáticamente. Muchas veces se utiliza en conjunto con el modelo posarquitec-tónico. 4. Un modelo posarquitectónico Una vez diseñada la arquitectura del sistema, puede hacerse una estimación más precisa del tamaño del software. Nuevamente, este modelo usa la fórmula estándar para estimación de costo discutida líneas arriba. Sin embargo, incluye un conjunto más extenso de 17 multiplicadores que reflejan características de capacidad personal, del producto y del proyecto.  Desde luego, en sistemas grandes pueden desarrollarse diferentes partes del sistema mediante distintas tecnologías y es posible que no se tenga que estimar todas las partes del sistema con el mismo nivel de precisión. En tales casos se puede usar el submodelo Productividad del software La productividad del software es una estimación de la cantidad promedio de trabajo de desarrollo que los  ingenieros de software completan en una semana o un mes. Por lo tanto, se expresa como líneas de código/mes, puntos de función/mes, etcétera. Sin embargo, en tanto que la productividad puede medirse fácilmente donde existe un resultado tangible  (por ejemplo, un oficinista que procesa N facturas por día), la productividad del software es más difícil de definir. Diferentes personas pueden implementar la misma funcionalidad de distintas formas, mediante un número diferente de líneas de código. La calidad del código también es importante pero, en cierta medida, se considera subjetiva. Por consiguiente, las comparaciones de productividad entre ingenieros de software son poco fiables y, por consiguiente, no son muy útiles para la planeación del proyecto. http://www.SoftwareEngineering-9.com/Web/Planning/productivity.html M23_SOMMERVILLE_INGENIERIA_1ED_SE_618-650.indd   638M23_SOMMERVILLE_INGENIERIA_1ED_SE_618-650.indd   638 3/18/11   5:10:39 PM3/18/11   5:10:39 PM