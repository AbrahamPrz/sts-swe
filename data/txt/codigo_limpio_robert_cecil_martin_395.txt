t1: pruebas insuficientes ¿cuántas pruebas debe incluir una suite de pruebas? desafortunadamente, muchos programadores dirían que las que parezcan suficientes. una suite de pruebas debe probar todo lo que pueda fallar. las pruebas son insuficientes mientras haya condiciones que no se hayan examinado o cálculos que no se hayan validado. t2: usar una herramienta de cobertura las herramientas de cobertura indican vacíos en su estrategia de pruebas. facilitan la detección de módulos, clases y funciones insuficientemente probadas. muchos ide le ofrecen un indicador visual y marcan en verde las líneas cubiertas y en rojo las no cubiertas. de este modo es más rápido y sencillo detectar instrucciones if o catch cuyos cuerpos no se han comprobado. t3: no ignorar pruebas triviales son fáciles de redactar y su valor documental es mayor que el coste de crearlas. t4: una prueba ignorada es una pregunta sobre una ambigüedad en ocasiones dudamos de un detalle de comportamiento porque los requisitos no son claros. podemos expresar nuestra duda sobre los requisitos en forma de prueba comentada o como prueba anotada con @ignore . la decisión depende de si la ambigüedad es sobre algo que se compila o no. t5: probar condiciones de límite 396