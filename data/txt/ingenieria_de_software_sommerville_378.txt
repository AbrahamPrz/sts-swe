13.4 ■ Programación conﬁ  able  361 11. Procesamiento de entrada por defecto Algunos sistemas ofrecen un procesamiento  de entrada por defecto, sin importar la entrada que se presente al sistema. Éste es  un hueco de seguridad que un atacante aprovecharía al presentar el programa con entradas inesperadas que no rechaza el sistema.  Algunos estándares para el desarrollo de sistemas de seguridad críticos prohíben por completo el uso de estos constructos. Sin embargo, tal posición extrema generalmente no es práctica. Todos estos constructos y técnicas son útiles, aunque deben usarse con cuidado. Siempre que sea posible, sus efectos potencialmente riesgosos deben contro-larse mediante el uso de tipos de datos abstractos u objetos, que actúan como “firewalls” naturales que limitan el daño causado si ocurren errores. Lineamiento 5: Ofrecer capacidades de reinicio Muchos sistemas de información organizacional se basan en transacciones cortas, en las que el procesamiento de entradas del usuario tarda un tiempo relativamente breve. Dichos sistemas se diseñan de modo que los cambios a la base de datos del sistema sólo finalizan después de que todos los demás procesamientos se completan con éxito. Si algo sale mal durante el procesamiento, la base de datos no se actualiza y, así, no se vuelve inconsistente. Prácticamente todos los sistemas de comercio electrónico (e-commerce), donde uno sólo se compromete con la compra en la pantalla final, trabajan de esta forma. Las interacciones del usuario con los sistemas de comercio electrónico duran por lo general algunos minutos y requieren procesamiento mínimo. Las transacciones en la base de datos son breves y con frecuencia se completan en menos de un segundo. Sin embargo, otros tipos de sistemas, como los sistemas de CAD y los de procesamiento de texto, nece-sitan transacciones amplias. En un sistema de transacción amplia, el tiempo entre comen-zar a usar el sistema y terminar de trabajar tomaría varios minutos o incluso horas. Si el sistema falla durante una transacción larga, entonces podría perderse todo el trabajo. De igual modo, en sistemas computacionalmente intensivos, como algunos sistemas de ciencia electrónica (e-science), tal vez se requieran minutos u horas de procesamiento para completar el cálculo. Todo este tiempo se pierde en caso de una falla del sistema. En todos estos tipos de sistemas se debe proporcionar una capacidad de reinicio, que se basa en la conservación de copias de los datos que se recopilan o generan durante el proce-samiento. La instalación de reinicio tiene que permitir al sistema reiniciar mediante dichas copias, en vez de tener que comenzar todo desde el principio. Dichas copias se conocen en ocasiones como checkpoints (punto de control o de verificación). Por ejemplo: 1. En un sistema de comercio electrónico se pueden conservar copias de los formularios  llenados por un usuario, y permitir a éste el acceso y envío de dichos formularios sin tener que llenarlos nuevamente. 2. En una transacción larga o un sistema computacionalmente intensivo se pueden guardar automáticamente los datos cada determinada cantidad de minutos y, en caso de falla del sistema, reiniciar con los datos guardados más recientemente. También se deben permitir errores de usuario y proporcionar una forma de que los usuarios regresen al checkpoint más reciente y comiencen de nuevo desde ahí.  Si ocurre una excepción y es imposible continuar la operación normal, se puede mane-jar la excepción mediante recuperación de error hacia atrás. Esto significa que se resta- M13_SOMMERVILLE_INGENIERIA_1ED_SE_341-365.indd   361M13_SOMMERVILLE_INGENIERIA_1ED_SE_341-365.indd   361 3/18/11   4:59:14 PM3/18/11   4:59:14 PM