ejecutable del programa y todos los archivos de datos asociados deben identificarse en el sistema de gestión de versiones y etiquetarse con el identificador de la entrega (release). quizás haya que escribir descripciones de configuración para hardware y sistemas opera-tivos diferentes, e instrucciones preparadas para los clientes que necesiten configurar sus sistemas. si se distribuyen en la máquina manuales legibles, deben almacenarse copias electrónicas con el software. probablemente haya que escribir rutinas para el programa de instalación. finalmente, cuando toda la información está disponible, debe prepararse una imagen maestra ejecutable del software y transferirse para distribución a los clientes o almacenes de ventas. cuando se planea la instalación de nuevas entregas del sistema, no se puede suponer que los clientes siempre instalarán nuevas entregas del sistema. algunos usuarios del sistema pueden estar satisfechos con un sistema existente y considerarán que no vale la pena el costo de cambiar a una nueva entrega. por lo tanto, las nuevas entregas del sistema no pueden depender de la instalación de entregas anteriores. para ilustrar este problema, considere el siguiente escenario: 1. la entrega 1 de un sistema se distribuye y se pone en uso. 2. la entrega 2 requiere la instalación de nuevos archivos de datos, pero algunos clien- tes no necesitan las facilidades de la entrega 2, así que continúan con la entrega 1. 3. la entrega 3 requiere de los archivos de datos instalados en la entrega 2 y no tiene nuevos archivos de datos propios. el distribuidor del software no puede suponer que los archivos requeridos por la entrega 3 ya se instalaron en todos los sitios. algunos sitios pueden ir directamente de la entrega 1 a la entrega 3, y saltar la entrega 2. otros sitios posiblemente modificaron los archivos de datos asociados con la entrega 2 para reflejar circunstancias locales. en consecuencia, los archivos de datos deben distribuirse e instalarse con la entrega 3 del sistema. los costos de marketing y empaquetado asociados con las nuevas entregas de produc-tos de software son altos, de modo que los proveedores de productos, por lo general, sólocrean nuevas entregas para nuevas plataformas o para agregar funcionalidad significa-tivamente novedosa. entonces cobran a sus usuarios por este nuevo software. cuando se descubren problemas en la entrega existente, los proveedores de software elaboran parches para reparar este software, disponibles en un sitio web para que los clientes los descarguen. el problema con usar parches descargables es que muchos clientes nunca pue-den descubrir la existencia de dichas reparaciones de problemas ni entender por qué deben instalarlos. en vez de ello, siguen usando el sistema defectuoso existente, con los conse-cuentes riesgos para su empresa. en algunas situaciones, donde el parche está diseñado para reparar vacíos de seguridad, los riesgos de fallar en la instalación del parche pueden significar que la empresa es vulnerable a ataques externos. para evitar estos problemas, los vendedores de software para mercado masivo, como adobe, apple y microsoft, por lo general implementan actualizaciones automáticas, en las que los sistemas se actualizan siempre que está disponible una nueva versión mínima. sin embargo, esto generalmente no funciona para sistemas a la medida, puesto que dichos sistemas no existen en una versión estándar para todos los clientes.25.4 ■ gestión de entregas de software (release) 701 m25_sommerville_ingenieria_1ed_se_681-704.indd  701m25_sommerville_ingenieria_1ed_se_681-704.indd  701 3/18/11  5:16:31 pm3/18/11  5:16:31 pm