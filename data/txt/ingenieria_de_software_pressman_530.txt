capítulo 21 modelado y verificación formal 499 lección de datos; 2) el estado, una representación del modo de comportamiento observable externamente a un sistema o (en lenguajes z o relacionados) los datos almacenados a los que un sistema accede o que altera; y 3) la operación, una acción que tiene lugar en un sistema y que lee o escribe datos a un estado. una operación se asocia con dos condiciones: una precon-dición y una poscondición. ¿alguna vez la ingeniería del cuarto limpio o los métodos formales se usarán ampliamente? la respuesta es “probablemente no”. son más difíciles de aprender que los métodos de ingenie-ría del software convencional y representan un significativo “choque cultural” para algunos profesionales del software. pero la siguiente vez que escuche a alguien lamentarse: “¿por qué este software no puede quedar bien desde la primera vez?”, sabrá que hay técnicas que le ayu-dan a hacer exactamente eso.  problemas y puntos por evaluar 21.1. si tuviera que elegir un aspecto de la ingeniería del software de cuarto limpio que la haga radicalmente diferente de los enfoques de ingeniería del software convencional o de la orientada a objeto, ¿cuál sería? 21.2. ¿cómo trabajan en conjunto un modelo de proceso incremental y la certificación para producir soft- ware de alta calidad? 21.3. con la especificación de estructura de cajas, desarrolle modelos de análisis y diseño de “primer paso” para el sistema casasegura. 21.4. un algoritmo de ordenamiento en burbujas (bubble-sort) se define de la manera siguiente: procedure bubblesort; var i, t, integer;beginrepeat until t5a[1] t:5a[1];for j:5 2 to n do if a[j-1] . a[j] then begin t:5a[j-1];a[j-1]:5a[j];a[j]:5t;end endrepend divida el diseño en subfunciones y defina un conjunto de condiciones que le permitirían probar que este algoritmo es correcto. 21.5. documente una prueba de verificación de exactitud para el ordenamiento en burbujas estudiado en el problema 21.4. 21.6. seleccione un programa que usted use regularmente (por ejemplo, manejador de correo electrónico, procesador de palabra, programa de hoja de cálculo). cree un conjunto de escenarios de uso para el pro-grama. defina la probabilidad de uso para cada escenario y luego desarrolle una tabla de estímulos del programa y distribución de probabilidad, similar a la que se muestra en la sección 21.4.1. 21.7. para la tabla de estímulos del programa y distribución de probabilidad que desarrolló en el problema 21.6, use un generador de números aleatorios para desarrollar un conjunto de casos de prueba para usar en la prueba de uso estadístico. 21.8. con sus palabras, describa la intención de la certificación en el contexto de la ingeniería del software de cuarto limpio. 21.9. al lector lo asignan a un equipo que desarrolla software para un fax módem. su labor es desarrollar la porción de “directorio” de la aplicación. la función directorio permite el almacenamiento de hasta maxnombres personas junto con los nombres de compañía asociados, números de fax y otra información relacionada. use lenguaje natural para definir 21pressman(478-500).indd  49921pressman(478-500).indd  499 19/1/10  12:43:2919/1/10  12:43:29