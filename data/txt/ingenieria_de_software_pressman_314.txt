CAPÍTULO 11  DISEÑO DE LA INTERFAZ DE USUARIO 283 • El mensaje debe estar acompañado de una clave audible o visual. Es decir, debe  generarse un sonido que acompañe la aparición del mensaje o éste debe cintilar  momentáneamente o desplegarse en un color que se reconozca con facilidad como el “color del error”. • El mensaje “no debe juzgar”. Es decir, sus palabras nunca deben culpar al usuario. Como en realidad a nadie le gustan las malas noticias, a pocos usuarios les agradará un mensaje de error, no importa lo bien diseñado que esté. Pero una filosofía eficaz de mensajes de error puede hacer mucho para mejorar la calidad de un sistema interactivo y disminuirá de manera significativa la frustración del usuario cuando sucedan los problemas. Leyendas del menú y de los comandos.  El comando escrito fue alguna vez el modo más  común de interacción entre el usuario y el sistema de software , y era normal usarlo para aplica- ciones de todo tipo. Hoy día, el uso de interfaces orientadas a las ventanas, y de apuntar y tomar, ha reducido la dependencia de los comandos escritos, pero algunos usuarios avanzados aún prefieren un modo de interacción orientado a los comandos. Cuando se dan comandos o leyendas en el menú como un modo de interactuar, surgen ciertos aspectos relacionados con el diseño: • ¿Toda opción de menú tiene un comando correspondiente? • ¿Qué forma tendrán los comandos? Las opciones incluyen una secuencia de control (por  ejemplo, alt-P), teclas de función o palabras escritas. • ¿Cuán difícil será aprender y recordar los comandos? ¿Qué puede hacerse si se olvida un  comando? • ¿Los comandos pueden ser personalizados o abreviados por el usuario? • ¿Las leyendas del menú se explican por sí mismas en el contexto de la interfaz? • ¿Son consistentes los submenús con la función implicada por un tema maestro del  menú? Como ya se dijo, en todas las aplicaciones deben establecerse convenciones para el uso de los comandos. Con frecuencia resultan confusos y se facilita que el usuario cometa errores si tiene que escribir alt-D cuando se ha de duplicar un objeto gráfico en una aplicación y alt-D cuando ha de eliminarse en otra. Resulta obvio el potencial que hay para el error. Accesibilidad de la aplicación.  Conforme las aplicaciones de la computación se hacen ubi- cuas, los ingenieros de software deben asegurarse de que el diseño de la interfaz incluya meca-nismos que permitan el acceso fácil de las personas con necesidades especiales. La accesibilidad  para los usuarios (e ingenieros de software) que tengan discapacidades físicas es un imperativo por razones éticas, legales y comerciales. Son varios los lineamientos de accesibilidad (por ejemplo [W3C03]) —muchos de ellos diseñados para aplicaciones web pero aplicables con fre-cuencia a todos los tipos de software— que hacen sugerencias detalladas para el diseño de in-terfaces que alcancen niveles variables de accesibilidad. Otras (ver [App08], [Mic08]) brindan lineamientos específicos para la “tecnología de ayuda” y se abocan a las necesidades de quienes tienen discapacidades visuales, auditivas, motrices, del habla y de aprendizaje. Internacionalización.  Los ingenieros de software y sus gerentes invariablemente subesti- man el esfuerzo y aptitudes que se requieren para crear interfaces de usuario que incluyan las necesidades de lugares e idiomas diferentes. Con demasiada frecuencia, las interfaces se dise-ñan para una localidad y lenguaje y después se adaptan para funcionar en otros países. El de-safío para los diseñadores de interfaces es crear un software “globalizado”. Es decir , las interfa-WebRef En la dirección www3.ibm.com/ able/guidelines/software/accesssoftware.html se dan lineamientos para desarrollar software accesible. 11Pressman(265-294).indd   28311Pressman(265-294).indd   283 14/1/10   16:13:4814/1/10   16:13:48