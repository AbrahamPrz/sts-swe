Lenguaje de pruebas específico del dominio Las pruebas del Listado 9-2 ilustran la creación de un lenguaje específico del dominio para sus pruebas. En lugar de usar las API que los programadores emplean para manipular el sistema, creamos una serie de funciones y utilidades que usan dichas API y que facilitan la escritura y la lectura de las pruebas. Estas funciones y utilidades se convierten en una API especializada usada por las pruebas. Son un lenguaje de pruebas que los programadores usan personalmente para crear sus pruebas y para ayudar a los que después las lean. Esta API de pruebas no se diseña con antelación, sino que evoluciona con la refactorización continuada del código de prueba. Al igual que refactorizamos el Listado 9-1 en el Listado 9-2, los programadores disciplinados refactorizan su código de prueba en versiones más sucintas y expresivas. Un estándar dual En un sentido, el equipo que mencionamos antes tenía razón. El código de la API de pruebas tiene un conjunto de estándares de ingeniería diferentes al código de producción. También tiene que ser sencillo, sucinto y expresivo, pero no tan eficaz como el código de producción. Después de todo, se ejecuta en un entorno de prueba, no de producción, y cada entorno tiene sus propias necesidades. Fíjese en la prueba del Listado 9-3. La creé como parte de un prototipo de sistema de control medioambiental. Sin entrar en detalles, se aprecia que esta prueba comprueba que la alarma de baja temperatura, el calentador y el fuelle estén activados cuando la temperatura sea demasiado fría. Listado 9-3 EnvironmentControllerTest.java @Test public void turnOnLoTempAlarmAtThreashold() throws Exception { hw.setTemp(WAY_TOO_COLD); 177