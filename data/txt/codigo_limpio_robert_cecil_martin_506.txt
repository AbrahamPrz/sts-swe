9 wednesday(calendar.wednesday), 10 thursday(calendar.thursday), 11 friday(calendar.friday), 12 saturday(calendar.saturday), 13 sunday(calendar.sunday); 14 15 private final int index; 16 private static dateformatsymbols datesymbols = new dateformatsymbols(); 17 18 day(int day) { 19 index = day; 20 } 21 22 public static day fromint(int index) throws illegalargumentexception { 23 for (day d : day.values()) 24 if (d.index == index) 25 return d; 26 throw new illegalargumentexception( 27 string.format(“illegal day index: %d.”, index)); 28 } 29 30 public static day parse(string s) throws illegalargumentexception { 31 string[] shortweekdaynames = 32 datesymbols.getshortweekdays(); 33 string[] weekdaynames = 34 datesymbols.getweekdays(); 35 36 s = s.trim(); 37 for (day day : day.values()) { 38 if (s.equalsignorecase(shortweekdaynames[day.index]) || 39 s.equalsignorecase(weekdaynames[day.index])) { 40 return day; 41 } 42 } 43 throw new illegalargumentexception( 44 string.format(“%s is not a valid weekday string”, s)); 45 } 46 47 public string tostring() { 48 return datesymbols.getweekdays()[index]; 49 } 50 51 public int toint() { 52 return index; 53 } 507