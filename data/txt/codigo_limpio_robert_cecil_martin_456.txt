month, 796 final int yyyy) { 797 return new spreadsheetdate(day, month, yyyy); 798 } 799 800 /** 801 * método de factoría que devuelve una instancia de una subclase concreta de 802 * {@link serialdate}. 803 * 804 * @param serial numero de serie del día (1 de enero de 1900 = 2). 805 * 806 * @return una instancia de serialdate. 807 */ 808 public static serialdate createinstance(final int serial) { 809 return new spreadsheetdate(serial); 810 } 811 812 /** 813 * método de factoría que devuelve una instancia de una subclase de serialdate. 814 * 815 * @param date un objeto de fecha de java. 816 * 817 * @return una instancia de serialdate. 818 */ 818 public static serialdate createinstance(final java.util.date date) { 820 821 final gregoriancalendar calendar = new gregoriancalendar(); 822 calendar.settime(date); 823 return new spreadsheetdate(calendar.get(calendar.date), 824 calendar.get(calendar.month) + 1, 825 calendar.get(calendar.year)); 826 827 } 828 829 /** 830 * devuelve el número de serie de la fecha, siendo el 1 de enero de 1900 = 2 (se 831 * corresponde, casi totalmente, al sistema de numeración empleado en microsoft 832 * excel para windows y lotus 1-2-3). 833 * 834 * @return el número de serie de la fecha. 835 */ 836 public abstract int toserial(); 457