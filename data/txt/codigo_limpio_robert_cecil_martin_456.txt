month, 796 final int yyyy) { 797 return new SpreadsheetDate(day, month, yyyy); 798 } 799 800 /** 801 * Método de factoría que devuelve una instancia de una subclase concreta de 802 * {@link SerialDate}. 803 * 804 * @param serial numero de serie del día (1 de enero de 1900 = 2). 805 * 806 * @return una instancia de SerialDate. 807 */ 808 public static SerialDate createInstance(final int serial) { 809 return new SpreadsheetDate(serial); 810 } 811 812 /** 813 * Método de factoría que devuelve una instancia de una subclase de SerialDate. 814 * 815 * @param date Un objeto de fecha de Java. 816 * 817 * @return una instancia de SerialDate. 818 */ 818 public static SerialDate createInstance(final java.util.Date date) { 820 821 final GregorianCalendar calendar = new GregorianCalendar(); 822 calendar.setTime(date); 823 return new SpreadsheetDate(calendar.get(Calendar.DATE), 824 calendar.get(Calendar.MONTH) + 1, 825 calendar.get(Calendar.YEAR)); 826 827 } 828 829 /** 830 * Devuelve el número de serie de la fecha, siendo el 1 de enero de 1900 = 2 (se 831 * corresponde, casi totalmente, al sistema de numeración empleado en Microsoft 832 * Excel para Windows y Lotus 1-2-3). 833 * 834 * @return el número de serie de la fecha. 835 */ 836 public abstract int toSerial(); 457