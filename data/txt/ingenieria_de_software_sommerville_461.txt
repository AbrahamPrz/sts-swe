444 capítulo 16 ■ reutilización de software software ampliamente difundida. no obstante, la limitación evidente de este enfoque a la reutilización es que la funcionalidad del sistema se restringe a la funcionalidad del núcleo genérico. más aún, los procesos y las operaciones de una compañía tienen que expresarse en el lenguaje de configuración del sistema, y puede haber desajuste de con-cordancia entre los conceptos en la empresa y los conceptos incluidos en el lenguaje de configuración. por ejemplo, en un sistema erp que se vendió a una universidad, debía definirse el concepto de cliente. esto causó grandes dificultades cuando se configuró el sistema. sin embargo, las universidades tienen múltiples tipos de clientes, como estudiantes, agencias que patrocinan investigaciones, instituciones que proveen fondos educativos, etcétera, cada uno de los cuales posee diferentes características. ninguno de ellos es realmente comparable a la noción de un cliente comercial (esto es, una persona o empresa que adquiere productos o servicios). una discordancia seria entre el modelo empresarial usado por el sistema y el del comprador del sistema hace altamente probable que el sis-tema erp no cumpla con las necesidades reales del comprador (scott, 1999). tanto los productos de dominio específico cots como los sistemas erp por lo gene-ral requieren de una extensa configuración para adaptarlos a los requerimientos de cada organización donde se instalan. esta configuración puede implicar: 1. seleccionar la funcionalidad requerida del sistema (por ejemplo, al decidir qué módulos deben incluirse). 2. establecer un modelo de datos que defina cómo se estructurarán los datos de la orga- nización en la base de datos del sistema. 3. definir las reglas empresariales que se aplican a dichos datos. 4. definir las interacciones esperadas con sistemas externos.5. diseñar los formatos de entrada y los reportes de salida generados por el sistema.6. diseñar nuevos procesos empresariales que se conformen al modelo de proceso sub- yacente apoyado por el sistema. 7. establecer parámetros que definan cómo se implementará el sistema en su plata- forma subyacente. una vez completados los escenarios de configuración, el sistema de solución cots está listo para las pruebas. las pruebas son un gran problema cuando los sistemas se con-figuran en vez de programarse con un lenguaje convencional. puesto que dichos sistemas se construyen mediante una plataforma fiable, las fallas y caídas evidentes del sistema son relativamente excepcionales. más bien, los problemas con frecuencia son sutiles y se relacionan con las interacciones entre los procesos operacionales y la configuración del sistema. esto sólo puede ser detectable por parte de los usuarios finales y, por lo tanto, tal vez pase inadvertido durante el proceso de pruebas del sistema. además, no pueden usarse las pruebas automatizadas de unidad, apoyadas por los frameworks de pruebas como junit. es improbable que el sistema subyacente soporte algún tipo de automatiza-ción de pruebas, y es posible que no haya especificación completa del sistema que pueda usarse para derivar pruebas del sistema. m16_sommerville_ingenieria_1ed_se_423-451.indd  444m16_sommerville_ingenieria_1ed_se_423-451.indd  444 3/18/11  5:02:14 pm3/18/11  5:02:14 pm