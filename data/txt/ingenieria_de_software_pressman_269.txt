238 parte dos modelado calcularcostoporpáginacomponente del diseño accederabddecostosobtenerdatosdeltrabajo módulo elaborado costoporpágina entra: númerodepáginas entra: númerodedocumentosentra: lados = 1, 2entra: color = 1, 2, 3, 4entra: tamaño de página = a, b, c, dsale: costo de páginaentra: tamaño del trabajoentra: color = 1, 2, 3, 4entra: tamañodepágina = a, b, c, dsale: costo base por página (cbp)sale: factor de tamaño (ft) tamaño del trabajo (tt) =   númerodepáginas*númerodedocumentos; buscar costo base por página (cbp) ->   accederabddecostos (tt, color); buscar factor de tamaño (ft) ->   accederabdde costos (tt, color, tamaño) factor de complejidad del trabajo (fct) =  1 + [(lados-1)*costoporlado+ft costoporpágina= cbp*fctobtenerdatosdeltrabajo (númerodepáginas, númerodedocumentos, lados, color, tamañodepágina, costoporpágina)accederabddecostos (tamañodeltrabajo,color, tamañodepágina, cbp, ft) calcularcostoporpágina( )control que fluya a través de la interfaz. se definen las estructuras de datos que se utilicen en el interior del módulo. el algoritmo que permite que el módulo cumpla su función prevista se di-seña con el empleo del enfoque de refinamiento por etapas que se estudió en el capítulo 8. el comportamiento del módulo se representa en ocasiones con un diagrama de estado. para ilustrar este proceso, considere el módulo calcularcostoporpágina. el objetivo de este módulo es calcular el costo de impresión por página con base en las especificaciones dadas por el cliente. los datos requeridos para realizar esta función son: número de páginas en el documento, número total de documentos que se va a producir, impresión por uno o dos lados, requerimientos de color y requeri- mientos de tamaño . estos datos se pasan a calcularcostoporpágina a través de la interfaz del mó- dulo. calcularcostoporpágina usa estos datos para determinar el costo por página con base en el tamaño y complejidad del trabajo, que es función de todos los datos proporcionados al mó- dulo a través de la interfaz. el costo por página es inversamente proporcional al tamaño del trabajo y directamente proporcional a su complejidad. la figura 10.3 representa el diseño en el nivel de componentes con el uso de notación uml modificada. el módulo calcularcostoporpágina accede a los datos invocando el módulo obtener- datosdeltrabajo, que permite que todos los datos relevantes pasen al componente, y una interfaz de base de datos, accederbddecostos, que permite que el módulo acceda a una base de datos que contiene todos los costos de impresión. a medida que avanza el diseño, se elabora el mó-dulo calcularcostoporpágina para que provea los detalles del algoritmo y de la interfaz (véase la figura 10.3). los detalles del algoritmo se representan con el uso del texto de seudocódigo que aparece en la figura, o con un diagrama de actividades uml. las interfaces se representan como una colección de objetos de datos o conceptos de entrada y salida. la elaboración del diseño continúa hasta que haya detalles suficientes que guíen la construcción del componente.conforme se elabora el diseño para cada componente del software, la atención pasa al diseño de estructuras de datos específicas y al diseño del procedimiento para manipularlas. sin embargo, no hay que olvidar la arquitectura que debe albergar los componentes o las estructuras de datos globales que den servicio a muchos componentes.consejo figura 10.3 diseño en el nivel de componentes para calcularcostoporpágina 10pressman(234-264).indd  23810pressman(234-264).indd  238 26/1/10  17:33:1726/1/10  17:33:17