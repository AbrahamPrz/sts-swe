CAPÍTULO 21  MODELADO Y VERIFICACIÓN FORMAL 479 En muchas formas, el enfoque de cuarto limpio eleva la ingeniería del software a otro nivel, al  enfatizar la necesidad de probar la exactitud. Los modelos desarrollados que usan métodos formales se describen mediante una sintaxis y  semántica formales que especifican el funcionamiento y el comportamiento del sistema. La especificación consiste en matemática en forma (por ejemplo, puede usarse cálculo de predica-dos como la base para un lenguaje de especificación formal). En su introducción a los métodos formales, Anthony Hall [Hal90] hace un comentario que se aplica igualmente a los métodos de cuarto limpio: Los métodos formales [la ingeniería del software de cuarto limpio] son controversiales. Sus defensores  afirman que pueden revolucionar el desarrollo [del software]. Sus detractores creen que son imposi-blemente difíciles. Mientras tanto, para la mayoría de la gente, los métodos formales [y la ingeniería del software de cuarto limpio] son tan poco corrientes que es difícil juzgar las afirmaciones rivales. En este capítulo se exploran los métodos de modelado y verificación formales y se examina su  impacto potencial sobre la ingeniería del software en los años por venir.  21.1 E STRATEGIA  DE CUARTO  LIMPIO La ingeniería del software de cuarto limpio usa una versión especializada del modelo de soft-ware incremental que se introdujo en el capítulo 2. Pequeños equipos de software independien-tes desarrollan “una tubería de incrementos de software” [Lin94b]. Conforme cada incremento se certifica, se integra en el todo. Por tanto, la funcionalidad del sistema crece con el tiempo. La secuencia de las tareas de cuarto limpio para cada incremento se ilustra en la figura 21.1.  Dentro de la tubería de incrementos de cuarto limpio, ocurren las siguientes tareas: Planeación del incremento.  Se desarrolla un plan de proyecto que adopte la estrategia incremental. Se crea la funcionalidad de cada incremento, su tamaño proyectado y un ca-lendario de desarrollo de cuarto limpio. Debe tenerse especial cuidado para garantizar que los incrementos certificados se integrarán en forma oportuna. Recopilación de requerimientos.  Se desarrolla una descripción más detallada de los  requerimientos del cliente (para cada incremento), con el uso de técnicas similares a las in-troducidas en el capítulo 5. Especificación de estructura de caja.   Se usa un método de especificación que utilice  las estructuras de caja para describir la especificación funcional. Las estructuras de caja “se  aíslan, y separan la definición creativa de comportamiento, datos y procedimientos en cada nivel de refinamiento” [Hev93]. Diseño formal.  Al usar el enfoque de estructura de cajas, el diseño de cuarto limpio es  una extensión natural y sin costuras de la especificación. Aunque es posible hacer una dis-tinción clara entre las dos actividades, las especificaciones (llamadas cajas negras) se refi- nan iterativamente (dentro de un incremento) para convertirse en análogas de los diseños arquitectónicos y en el nivel de componente (llamados cajas de estado y cajas claras, respec- tivamente). Verificación de exactitud.  El equipo de cuarto limpio realiza una serie de rigurosas acti- vidades de verificación de exactitud sobre el diseño y, luego, el código. La verificación (sec-ción 21.3.2) comienza con la estructura de caja (especificación) de nivel más alto y avanza hacia el detalle y el código de diseño. El primer nivel de la verificación de exactitud ocurre al aplicar un conjunto de “preguntas de exactitud” [Lin88]. Si esto no demuestra que la es-pecificación es correcta, se usan métodos más formales (matemáticos) para la verificación.Cita: “La única forma de que ocurran  errores en un programa es que el autor los ponga ahí. No se conocen otros mecanismos [...] La práctica correcta se dirige a evitar la inserción de errores y, al fallar esto, a removerlos antes de probarlo o de cualquier otra forma de poner en marcha el programa.” Harlan Mills WebRef En www.cleansoft.com puede  encontrarse una excelente fuente de información y recursos para ingeniería del software de cuarto limpio. Cita: “La ingeniería del software de  cuarto limpio logra control de calidad estadístico sobre el de-sarrollo del software al separar estrictamente el proceso de dise-ño del proceso de prueba en una tubería de desarrollo incre-mental de software.” Harlan Mills 21Pressman(478-500).indd   47921Pressman(478-500).indd   479 19/1/10   12:43:2219/1/10   12:43:22