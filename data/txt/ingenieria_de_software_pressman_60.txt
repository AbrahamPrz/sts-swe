capítulo 2 modelos del proceso 29 paralelo con otras (por ejemplo, el modelado de un aspecto del software tal vez se ejecute en paralelo con la construcción de otro aspecto del software). 2.1.1 definición de actividad estructural aunque en el capítulo 1 se describieron cinco actividades estructurales y se dio una definición básica de cada una, un equipo de software necesitará mucha más información antes de poder ejecutar de manera apropiada cualquiera de ellas como parte del proceso del software. por tanto, surge una pregunta clave: ¿qué acciones son apropiadas para una actividad estructural, dados la naturaleza del problema por resolver, las características de las personas que hacen el tra-bajo y los participantes que patrocinan el proyecto? para un proyecto de software pequeño solicitado por una persona (en una ubicación remota) con requerimientos sencillos y directos, la actividad de comunicación tal vez no incluya algo más que una llamada telefónica con el participante apropiado. entonces, la única acción nece-saria es una conversación telefónica, y las tareas del trabajo (el conjunto de tareas) que engloba son las siguientes: 1. hacer contacto con el participante por vía telefónica. 2. analizar los requerimientos y tomar notas. 3. organizar las notas por escrito en una formulación breve de los requerimientos. 4. enviar correo electrónico al participante para que revise y apruebe. si el proyecto fuera considerablemente más complejo, con muchos participantes y cada uno con un distinto conjunto de requerimientos (a veces en conflicto), la actividad de comunicación puede tener seis acciones distintas (descritas en el capítulo 5): concepción, indagación, elabor a- ción, negociación, especificación y validación. cada una de estas acciones de la ingeniería del software tendrá muchas tareas de trabajo y un número grande de diferentes productos finales. 2.1.2 identificación de un conjunto de tareas en relación con la figura 2.1, cada acción de la ingeniería de software (por ejemplo, obtención, asociada a la actividad de comunicación) se representa por cierto número de distintos conjuntos de tareas, cada uno de los cuales es una colección de tareas de trabajo de la ingeniería de soft-ware, relacionadas con productos del trabajo, puntos de aseguramiento de la calidad y puntos de referencia del proyecto. debe escogerse el conjunto de tareas que se adapte mejor a las ne-cesidades del proyecto y a las características del equipo. esto implica que una acción de la in-geniería de software puede adaptarse a las necesidades específicas del proyecto de software y a las características del equipo del proyecto. 2.1.3 patrones del proceso cada equipo de software se enfrenta a problemas conforme avanza en el proceso del software. si se demostrara que existen soluciones fáciles para dichos problemas, sería útil para el equipo abordarlos y resolverlos rápidamente. un patrón del proceso 1 describe un problema relacionado con el proceso que se encuentra durante el trabajo de ingeniería de software, identifica el am-biente en el que surge el problema y sugiere una o más soluciones para el mismo. dicho de manera general, un patrón de proceso da un formato [amb98]: un método consistente para describir soluciones del problema en el contexto del proceso del software. al combinar patro-nes, un equipo de software resuelve problemas y construye el proceso que mejor satisfaga las necesidades de un proyecto.¿cómo se transforma una actividad estructural cuando cambia la naturaleza del proyecto?? punto clave diferentes proyectos demandan diferentes conjuntos de tareas. el equipo de software elige el conjunto de tareas con base en las características del problema y el proyecto. ¿qué es un patrón del proceso? ? 1 en el capítulo 12 se hace el análisis detallado de los patrones. 02pressman(025-054).indd  2902pressman(025-054).indd  29 14/1/10  13:36:4514/1/10  13:36:45