386 PARTE TRES  ADMINISTRACIÓN DE LA CALIDAD haustivas. Mientras se realizan éstas, el desarrollador debe estar disponible para corregir los  errores que se descubran. El GPI es parte del equipo de proyecto de desarrollo del software pues se involucra durante el  análisis y el diseño, y sigue involucrado (mediante planificación y especificación de procedimien-tos de prueba) a lo largo de un proyecto grande. No obstante, en muchos casos, el GPI reporta a la organización de aseguramiento de calidad del software, y por tanto logra un grado de inde-pendencia que no puede existir si fuese parte de la organización de ingeniería del software. 17.1.3  Estrategia de prueba del software. Visión general El proceso de software puede verse como la espiral que se ilustra en la figura 17.1. Inicialmente, la ingeniería de sistemas define el papel del software y conduce al análisis de los requerimientos del mismo, donde se establecen los criterios de dominio, función, comportamiento, desempeño, restricciones y validación de información para el software. Al avanzar hacia adentro a lo largo de la espiral, se llega al diseño y finalmente a la codificación. Para desarrollar software de  computadoras, se avanza en espiral hacia adentro (contra las manecillas del reloj) a lo largo  de una línea que reduce el nivel de abstracción en cada vuelta. Una estrategia para probar el software también puede verse en el contexto de la espiral (fi- gura 17.1). La prueba de unidad  comienza en el vértice de la espiral y se concentra en cada  unidad (por ejemplo, componente, clase o un objeto de contenido de una webapp) del software como se implementó en el código fuente. La prueba avanza al moverse hacia afuera a lo largo de la espiral, hacia la prueba de integración , donde el enfoque se centra en el diseño y la cons- trucción de la arquitectura del software. Al dar otra vuelta hacia afuera de la espiral, se encuen-tra la prueba de validación, donde los requerimientos establecidos como parte de su modelado  se validan confrontándose con el software que se construyó. Finalmente, se llega a la prueba del  sistema, donde el software y otros elementos del sistema se prueban como un todo. Para probar el software de cómputo, se avanza en espiral hacia afuera en dirección de las manecillas del reloj a lo largo de líneas que ensanchan el alcance de las pruebas con cada vuelta. Al considerar el proceso desde un punto de vista procedural, las pruebas dentro del contexto  de la ingeniería del software en realidad son una serie de cuatro pasos que se implementan de manera secuencial. Éstos se muestran en la figura 17.2. Inicialmente, las pruebas se enfocan en cada componente de manera individual, lo que garantiza que funcionan adecuadamente como unidad. De ahí el nombre de prueba de unidad . Esta prueba utiliza mucho de las técnicas de  prueba que ejercitan rutas específicas en una estructura de control de componentes para ase-gurar una cobertura completa y la máxima detección de errores. A continuación, los componen-tes deben ensamblarse o integrarse para formar el paquete de software completo. La prueba de  integración aborda los conflictos asociados con los problemas duales de verificación y construc-ción de programas. Durante la integración, se usan más las técnicas de diseño de casos de Cita: “El primer error que comete la  gente es creer que el equipo de prueba es responsable de ase-gurar la calidad.” Brian Marick Prueba del sistema Prueba de validación Prueba de integración Prueba de unidad Código Diseño Requerimientos Ingeniería del sistemaFIGURA 17.1 Estrategia de  pruebas¿Cuál es la estrategia  global para la prueba del software?? WebRef Quienes prueban software pueden  encontrar recursos útiles en www.SQAtester.com 17Pressman(383-410).indd   38617Pressman(383-410).indd   386 21/1/10   10:59:1921/1/10   10:59:19