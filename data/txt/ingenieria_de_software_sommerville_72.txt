 2.7. Explique por qué los sistemas desarrollados como prototipos por lo general no deben usarse  como sistemas de producción.  2.8. Exponga por qué el modelo en espiral de Boehm es un modelo adaptable que puede apoyar  las actividades tanto de evitar el cambio como de tolerar el cambio. En la práctica, este  modelo no se ha usado ampliamente. Sugiera por qué éste podría ser el caso.  2.9. ¿Cuáles son las ventajas de proporcionar visiones estática y dinámica del proceso de software  como en el Proceso Unificado Racional? 2.10. Históricamente, la introducción de la tecnología ha causado profundos cambios en el mercado  laboral y, al menos temporalmente, ha reemplazado a personas en los puestos de trabajo. Explique si es probable que la introducción de extensos procesos de automatización tenga las mismas consecuencias para los ingenieros de software. Si no cree que haya consecuencias, explique por qué. Si cree que reducirá las oportunidades laborales, ¿es ético que los ingenieros afectados resistan pasiva o activamente la introducción de esta tecnología? REFERENCIAS Arlow, J. y Neustadt, I. (2005). UML 2 and the Unified Process: Practical Object-Oriented Analysis and Design (2nd Edition). Boston: Addison-Wesley. Boehm, B. y Turner, R. (2003). Balancing Agility and Discipline: A Guide for the Perplexed . Boston:  Addison-Wesley.Boehm, B. W. (1988). “A Spiral Model of Software Development and Enhancement”. IEEE  Computer, 21 (5), 61–72.Budgen, D. (2003). Software Design (2nd Edition). Harlow, UK.: Addison-Wesley.Krutchen, P. (2003). The Rational Unified Process—An Introduction (3rd Edition) . Reading, MA:  Addison-Wesley.Massol, V. y Husted, T. (2003). JUnit in Action. Greenwich, Conn.: Manning Publications Co.Rettig, M. (1994). “Practical Programmer: Prototyping for Tiny Fingers”. Comm. ACM, 37 (4), 21–7. Royce, W. W. (1970). “Managing the Development of Large Software Systems: Concepts and  Techniques”. IEEE WESTCON, Los Angeles CA: 1–9. Rumbaugh, J., Jacobson, I. y Booch, G. (1999). The Unified Software Development Process. Reading,  Mass.: Addison-Wesley. Schmidt, D. C. (2006). “Model-Driven Engineering”. IEEE Computer, 39 (2), 25–31.Schneider, S. (2001). The B Method. Houndmills, UK: Palgrave Macmillan.Wordsworth, J. (1996). Software Engineering with B. Wokingham: Addison-Wesley.Capítulo 2 ■ Referencias  55 M02_SOMMERVILLE_INGENIERIA_1ED_SE_027-055.indd   55M02_SOMMERVILLE_INGENIERIA_1ED_SE_027-055.indd   55 3/18/11   4:45:32 PM3/18/11   4:45:32 PM