REFERENCIAS 763 [SEE03] The Software Engineering Ethics Research Institute, “UCITA Updates”, 2003, disponible en http:/ / seeri.etsu.edu/default.htm. [SEI00] SCAMPI, V1.0 Standard CMMI ®Assessment Method for Process Improvement: Method  Description, Soft- ware Engineering Institute, Technical Report CMU/SEI-2000-TR-009, descargable de www.sei.cmu.edu/ publications/documents/00.reports/00tr009.html. [SEI02] “Maintainability Index Technique for Measuring Program Maintainability”, SEI, 2002, disponible en  www.sei.cmu.edu/str/descriptions/mitmpm_body.html. [SEI08] “The Ideal Model”, Software Engineering Institute, 2008, disponible en www.sei.cmu .edu/ideal/.[Sha95a] Shaw, M. y D. Garlan, “Formulations and Formalisms in Software Architecture”, Volume 1000—Lec- ture Notes in Computer Science, Springer-Verlag, 1995. [Sha95b] Shaw, M., et al., “Abstractions for Software Architecture and Tools to Support Them”, IEEE Trans.  Software Engineering, vol. SE-21, núm. 4, abril 1995, pp. 314-335. [Sha96] Shaw, M. y D. Garlan, Software Architecture, Prentice Hall, 1996. [Sha05] Shalloway, A. y J. Trott, Design Patterns Explained, 2a. ed., Addison-Wesley, 2005. [Shn80] Shneiderman, B., Software Psychology, Winthrop Publishers, 1980, p. 28.[Shn04] Shneiderman, B. y C. Plaisant, Designing the User Interface, 4a. ed., Addison-Wesley, 2004. [Sho83] Shooman, M. L., Software Engineering, McGraw-Hill, 1983. [Sim05] Simsion, G. y G. Witt, Data Modeling Essentials, 3a. ed., Morgan Kaufman, 2005. [Sin99] Singpurwalla, N. y S. Wilson, Statistical Methods in Software Engineering: Reliability and Risk , Springer- Verlag, 1999. [Smi99] Smith, J., “The Estimation of Effort Based on Use Cases”, Rational Software Corp., 1999, descargable  de www.rational.com/media/whitepapers/finalTP171.PDF. [Smi05] Smith, D, Reliability, Maintainability and Risk, 7a. ed., Butterworth-Heinemann, 2005. [Sne95] Sneed, H., “Planning the Reengineering of Legacy Systems”, IEEE Software, enero 1995, pp. 24-25. [Sne03] Snee, R. y R. Hoerl, Leading Six Sigma, Prentice Hall, 2003. [Sol99] van Solingen, R. y E. Berghout, The Goal/Question/Metric Method, McGraw-Hill, 1999. [Som97] Somerville, I. y P. Sawyer, Requirements Engineering, Wiley, 1997. [Som05] Somerville, I., “Integrating Requirements Engineering: A Tutorial”, IEEE Software, vol. 22, núm. 1,  enero-febrero 2005, pp. 16-23. [SPI99] “SPICE: Software Process Assessment, Part 1: Concepts and Introduction”, Version 1.0, ISO/IEC JTC1,  1999. [Spl01] Splaine, S. y S. Jaskiel, The Web Testing Handbook, STQE Publishing, 2001. [Spo02] Spolsky, J, “The Law of Leaky Abstractions”, noviembre 2002, disponible en www  .joelonsoftware. com/articles/LeakyAbstractions.html. [Sri01] Sridhar, M. y N. Mandyam, “Effective Use of Data Models in Building Web  Applications,” 2001, dispo- nible en www2002.org/CDROM/alternate/698/. [SSO08] Software-Supportability.org, www.software-supportability.org/ 2008.[Sta97] Stapleton, J., DSDM—Dynamic System Development Method: The Method in Practice ,  Addison-Wesley,  1997. [Sta97b] Statz, J., D. Oxley y P. O’Toole, “Identifying and Managing Risks for Software Process Improvement”,  CrossTalk, abril 1997, disponible en www.stsc.hill.af.mil/crosstalk/1997/ 04/identifying.asp. [Ste74] Stevens, W., G. Myers y L. Constantine, “Structured Design”, IBM Systems Journal, vol. 13, núm. 2,  1974, pp. 115-139. [Ste93] Stewart, T. A., “Reengineering: The Hot New Managing Tool”, Fortune, agosto 23, 1993, pp. 41-48. [Ste99] Stelzer, D. y W. Mellis, “Success Factors of Organizational Change in Software Process Improvement”,  Software Process Improvement and Practice, vol. 4, núm. 4, Wiley, 1999, descargable de www.systement-wicklung.uni-koeln.de/forschung/artikel/dokumente/successfactors.pdf. [Ste03] Stephens, M. y D. Rosenberg, Extreme Programming Refactored, Apress, 2003.[Sto05] Stone, D., et al., User Interface Design and Evaluation, Morgan Kaufman, 2005. [Tai89] Tai, K. C., “What to Do Beyond Branch Testing,” ACM Software Engineering Notes, vol. 14, núm. 2, abril  1989, pp. 58-61. [T ay90] Taylor, D., Object-Oriented Technology: A Manager’s Guide, Addison-Wesley, 1990. [Tha97] Thayer, R. H. y M. Dorfman, Software Requirements Engineering, 2a. ed., IEEE  Computer Society Press,  1997. [The01] Thelin, T., H. Petersson y C. Wohlin, “Sample Driven Inspections”, Proc. of Workshop on Inspection in  Software Engineering (WISE’01) , París, Francia, julio 2001, pp. 81-91, descargable de http://www.cas. mcmaster.ca/wise/wise01/ThelinPeterssonWohlin.pdf. [Tho92] Thomsett, R., “The Indiana Jones School of Risk Management”, American Programmer, vol. 5, núm.  7, septiembre 1992, pp. 10-18. [Tic05] TickIT, 2005, www.tickit.org/.[Tid02] Tidwell, J., “IU Patterns and Techniques”, mayo 2002, disponible en http://time-tripper.com/  uipatterns/index.html. [Til93] Tillmann, G., A Practical Guide to Logical Data Modeling, McGraw-Hill, 1993. [Til00] Tillman, H., “Evaluating Quality on the Net”, Babson College, mayo 30, 2000, disponible en www.ho- petillman.com/findqual.html#2. 35Pressman(751-766)Refer.indd   76335Pressman(751-766)Refer.indd   763 2/2/10   11:41:202/2/10   11:41:20