referencias 763 [see03] the software engineering ethics research institute, “ucita updates”, 2003, disponible en http:/ / seeri.etsu.edu/default.htm. [sei00] scampi, v1.0 standard cmmi ®assessment method for process improvement: method description, soft- ware engineering institute, technical report cmu/sei-2000-tr-009, descargable de www.sei.cmu.edu/ publications/documents/00.reports/00tr009.html. [sei02] “maintainability index technique for measuring program maintainability”, sei, 2002, disponible en www.sei.cmu.edu/str/descriptions/mitmpm_body.html. [sei08] “the ideal model”, software engineering institute, 2008, disponible en www.sei.cmu .edu/ideal/.[sha95a] shaw, m. y d. garlan, “formulations and formalisms in software architecture”, volume 1000—lec- ture notes in computer science, springer-verlag, 1995. [sha95b] shaw, m., et al., “abstractions for software architecture and tools to support them”, ieee trans. software engineering, vol. se-21, núm. 4, abril 1995, pp. 314-335. [sha96] shaw, m. y d. garlan, software architecture, prentice hall, 1996. [sha05] shalloway, a. y j. trott, design patterns explained, 2a. ed., addison-wesley, 2005. [shn80] shneiderman, b., software psychology, winthrop publishers, 1980, p. 28.[shn04] shneiderman, b. y c. plaisant, designing the user interface, 4a. ed., addison-wesley, 2004. [sho83] shooman, m. l., software engineering, mcgraw-hill, 1983. [sim05] simsion, g. y g. witt, data modeling essentials, 3a. ed., morgan kaufman, 2005. [sin99] singpurwalla, n. y s. wilson, statistical methods in software engineering: reliability and risk , springer- verlag, 1999. [smi99] smith, j., “the estimation of effort based on use cases”, rational software corp., 1999, descargable de www.rational.com/media/whitepapers/finaltp171.pdf. [smi05] smith, d, reliability, maintainability and risk, 7a. ed., butterworth-heinemann, 2005. [sne95] sneed, h., “planning the reengineering of legacy systems”, ieee software, enero 1995, pp. 24-25. [sne03] snee, r. y r. hoerl, leading six sigma, prentice hall, 2003. [sol99] van solingen, r. y e. berghout, the goal/question/metric method, mcgraw-hill, 1999. [som97] somerville, i. y p. sawyer, requirements engineering, wiley, 1997. [som05] somerville, i., “integrating requirements engineering: a tutorial”, ieee software, vol. 22, núm. 1, enero-febrero 2005, pp. 16-23. [spi99] “spice: software process assessment, part 1: concepts and introduction”, version 1.0, iso/iec jtc1, 1999. [spl01] splaine, s. y s. jaskiel, the web testing handbook, stqe publishing, 2001. [spo02] spolsky, j, “the law of leaky abstractions”, noviembre 2002, disponible en www .joelonsoftware. com/articles/leakyabstractions.html. [sri01] sridhar, m. y n. mandyam, “effective use of data models in building web applications,” 2001, dispo- nible en www2002.org/cdrom/alternate/698/. [sso08] software-supportability.org, www.software-supportability.org/ 2008.[sta97] stapleton, j., dsdm—dynamic system development method: the method in practice , addison-wesley, 1997. [sta97b] statz, j., d. oxley y p. o’toole, “identifying and managing risks for software process improvement”, crosstalk, abril 1997, disponible en www.stsc.hill.af.mil/crosstalk/1997/ 04/identifying.asp. [ste74] stevens, w., g. myers y l. constantine, “structured design”, ibm systems journal, vol. 13, núm. 2, 1974, pp. 115-139. [ste93] stewart, t. a., “reengineering: the hot new managing tool”, fortune, agosto 23, 1993, pp. 41-48. [ste99] stelzer, d. y w. mellis, “success factors of organizational change in software process improvement”, software process improvement and practice, vol. 4, núm. 4, wiley, 1999, descargable de www.systement-wicklung.uni-koeln.de/forschung/artikel/dokumente/successfactors.pdf. [ste03] stephens, m. y d. rosenberg, extreme programming refactored, apress, 2003.[sto05] stone, d., et al., user interface design and evaluation, morgan kaufman, 2005. [tai89] tai, k. c., “what to do beyond branch testing,” acm software engineering notes, vol. 14, núm. 2, abril 1989, pp. 58-61. [t ay90] taylor, d., object-oriented technology: a manager’s guide, addison-wesley, 1990. [tha97] thayer, r. h. y m. dorfman, software requirements engineering, 2a. ed., ieee computer society press, 1997. [the01] thelin, t., h. petersson y c. wohlin, “sample driven inspections”, proc. of workshop on inspection in software engineering (wise’01) , parís, francia, julio 2001, pp. 81-91, descargable de http://www.cas. mcmaster.ca/wise/wise01/thelinpeterssonwohlin.pdf. [tho92] thomsett, r., “the indiana jones school of risk management”, american programmer, vol. 5, núm. 7, septiembre 1992, pp. 10-18. [tic05] tickit, 2005, www.tickit.org/.[tid02] tidwell, j., “iu patterns and techniques”, mayo 2002, disponible en http://time-tripper.com/ uipatterns/index.html. [til93] tillmann, g., a practical guide to logical data modeling, mcgraw-hill, 1993. [til00] tillman, h., “evaluating quality on the net”, babson college, mayo 30, 2000, disponible en www.ho- petillman.com/findqual.html#2. 35pressman(751-766)refer.indd  76335pressman(751-766)refer.indd  763 2/2/10  11:41:202/2/10  11:41:20