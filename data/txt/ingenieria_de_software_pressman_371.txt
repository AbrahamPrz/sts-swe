340 PARTE TRES  ADMINISTRACIÓN DE LA CALIDAD Pero, ¿son la calidad del diseño y de la conformidad los únicos aspectos que deben conside- rar los ingenieros de software? Robert Glass [Gla98] afirma que es mejor plantear una relación  más intuitiva: satisfacción del usuario = producto que funciona + buena calidad + entrega dentro del presupuesto y plazo En última instancia, Glass sostiene que la calidad es importante, pero que si el usuario no  está satisfecho, nada de lo demás importa. DeMarco [DeM98] refuerza esta opinión al decir que “la calidad de un producto está en función de cuánto cambia al mundo para bien”. Este punto de vista de la calidad afirma que si un producto de software beneficia mucho a los usuarios fi-nales, éstos se mostrarán dispuestos a tolerar problemas ocasionales de confiabilidad o desem-peño.  14.2 C ALIDAD  DEL SOFTWARE Incluso los desarrolladores de software más experimentados estarán de acuerdo en que obtener software de alta calidad es una meta importante. Pero, ¿cómo se define la calidad del software?  En el sentido más general se define 1 como: Proceso eficaz de software que se aplica de manera que  crea un producto útil que proporciona valor medible a quienes lo producen y a quienes lo utilizan. Hay pocas dudas acerca de que la definición anterior podría modificarse o ampliarse en un  debate sin fin. Para propósitos de este libro, la misma sirve a fin de enfatizar tres puntos impor-tantes:  1. Un proceso eficaz de software establece la infraestructura que da apoyo a cualquier es-fuerzo de elaboración de un producto de software de alta calidad. Los aspectos de ad-ministración del proceso generan las verificaciones y equilibrios que ayudan a evitar que el proyecto caiga en el caos, contribuyente clave de la mala calidad. Las prácticas de ingeniería de software permiten al desarrollador analizar el problema y diseñar una solución sólida, ambas actividades críticas de la construcción de software de alta cali-dad. Por último, las actividades sombrilla, tales como administración del cambio y revi-siones técnicas, tienen tanto que ver con la calidad como cualquier otra parte de la  práctica de la ingeniería de software.  2. Un producto útil entrega contenido, funciones y características que el usuario final de- sea; sin embargo, de igual importancia es que entrega estos activos en forma confiable y libre de errores. Un producto útil siempre satisface los requerimientos establecidos en forma explícita por los participantes. Además, satisface el conjunto de requerimientos (por ejemplo, la facilidad de uso) con los que se espera que cuente el software de alta  calidad.  3.  Al agregar valor para el productor y para el usuario de un producto, el software de alta  calidad proporciona beneficios a la organización que lo produce y a la comunidad de  usuarios finales. La organización que elabora el software obtiene valor agregado por-que el software de alta calidad requiere un menor esfuerzo de mantenimiento, menos errores que corregir y poca asistencia al cliente. Esto permite que los ingenieros de soft-ware dediquen más tiempo a crear nuevas aplicaciones y menos a repetir trabajos mal hechos. La comunidad de usuarios obtiene valor agregado porque la aplicación provee una capacidad útil en forma tal que agiliza algún proceso de negocios. El resultado final es 1) mayores utilidades por el producto de software, 2) más rentabilidad cuando una  1 Esta definición ha sido adaptada de [Bes04] y sustituye aquélla más orientada a la manufactura presentada en  ediciones anteriores de este libro. 14Pressman(337-353).indd   34014Pressman(337-353).indd   340 14/1/10   16:51:2914/1/10   16:51:29