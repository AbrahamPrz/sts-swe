un ejemplo de nombre desinformativo sería el uso de la l minúscula o la o mayúscula como nombres de variables, sobre todo combinados. el problema, evidentemente, es que se parecen a las constantes 1 y 0 respectivamente: int a = l; if ( o == l ) a = o1; else l = 01; el lector puede pensar que es una invención, pero hemos visto código con abundancia de estos elementos. en un caso, el autor del código, sugirió usar una fuente distinta para que las diferencias fueran más evidentes, una solución que se hubiera transmitido a todos los futuros programadores como tradición oral o en un documento escrito. el problema se resolvió con carácter definitivo y sin necesidad de crear nuevos productos, con tan sólo cambiar los nombres. realizar distinciones con sentido los programadores se crean un problema al crear código únicamente dirigido a un compilador o intérprete. por ejemplo, como se puede usar el mismo nombre para hacer referencia a dos elementos distintos en el mismo ámbito, puede verse tentado a cambiar un nombre de forma arbitraria. en ocasiones se hace escribiéndolo incorrectamente, lo que provoca que los errores ortográficos impidan la compilación [7] . no basta con añadir series de números o palabras adicionales, aunque eso satisfaga al compilador. si los nombres tienen que ser distintos, también deben tener un significado diferente. los nombres de series numéricas ( a1 , a2 … an ) son lo contrario a los nombres intencionados. no desinforman, simplemente no ofrecen información; son una pista sobre la intención del autor. fíjese en lo siguiente: 45