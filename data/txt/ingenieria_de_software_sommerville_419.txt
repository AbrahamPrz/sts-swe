402  Capítulo 15 ■ Garantía de confiabilidad y seguridad 3. Incertidumbre estadística cuando se especifica alta fiabilidad Debe generarse un  número estadísticamente significativo de fallas para permitir mediciones de fiabili-dad precisas. Cuando el software ya es fiable, ocurren muy pocas fallas y es difícil generar nuevas fallas. 4. Reconocimiento de la falla  No siempre es evidente si ocurrió o no una falla de  sistema. Si se tiene una especificación formal, es posible identificar desviaciones de dicha especificación, pero si la especificación está en lenguaje natural, podría haber ambigüedades que signifiquen que los observadores no estén de acuerdo en torno al hecho de que haya fallado el sistema.  Con mucho, la mejor forma de generar el gran conjunto de datos requeridos para la medición de la fiabilidad es usar un generador de datos de prueba, el cual puede configu-rarse para producir automáticamente entradas que coincidan con el perfil operativo. Sin embargo, por lo regular no es posible automatizar la producción de todos los datos de prueba para sistemas interactivos, porque las entradas con frecuencia son una respuesta a salidas del sistema. Los conjuntos de datos para dichos sistemas tienen que generarse de forma manual, con los correspondientes costos más elevados. Incluso donde es posible la automatización completa, podría necesitarse una cantidad significativa de tiempo para escribir los comandos para el generador de datos de prueba. Las pruebas estadísticas pueden usarse en conjunto con inyección de fallas en el desa-rrollo para reunir datos acerca de cuán efectivo ha sido el proceso de pruebas de defecto. La inyección de fallas en el desarrollo (Voas, 1997) es la introducción deliberada de errores en un programa. Cuando el programa se ejecuta, ello conduce a fallas de programa y fallas asociadas. Entonces se analizan las fallas para descubrir si la raíz de la causa es uno de los errores agregados al programa. Si se descubre que el X% de las fallas en el desa-rrollo inyectadas conduce a fallas en la operación, entonces los defensores de la inyección de fallas en el desarrollo argumentarán que esto sugiere que el proceso de pruebas de defec-to también habrá descubierto el X% de las fallas en el desarrollo reales en el programa. Desde luego, ello supone que la distribución y el tipo de fallas en el desarrollo inyec-tadas coinciden con las fallas en el desarrollo reales que surgen en la práctica. Es razo-nable pensar que esto es cierto para fallas en el desarrollo que se deben a errores de programación, pero la inyección de fallas no es efectiva para predecir el número de fallas en el desarrollo que surgen de errores de requerimientos o de diseño. La prueba estadística revela con frecuencia errores en el software que no se descubrieron mediante otros procesos V&V. Tales errores pueden significar que la fiabilidad de un sis-tema no cubre los requerimientos y que deben hacerse reparaciones. Después de completar dichas reparaciones, el sistema se pone nuevamente a prueba para revalorar su fiabilidad. Luego de repetir muchas veces este proceso de reparación y de nuevas pruebas, es posible extrapolar los resultados y predecir cuándo se logrará cierto nivel requerido de fiabilidad. Esto requiere ajustar los datos extrapolados a un modelo de crecimiento de fiabilidad, que muestre cómo la fiabilidad tiende a mejorar con el tiempo, lo que ayuda con la planeación de pruebas. En ocasiones, un modelo de crecimiento revela que nunca se alcanzará un nivel de fiabilidad, de forma que deberán renegociarse los requerimientos.  15.2.1 Perfiles operativos El perfil operativo de un sistema de software refleja cómo éste se usará en la prácti-ca. Consta de una especificación de clases de entrada y su probabilidad de ocurrencia. Cuando un nuevo sistema de software sustituye a un sistema automatizado existente, es M15_SOMMERVILLE_INGENIERIA_1ED_SE_393-422.indd   402M15_SOMMERVILLE_INGENIERIA_1ED_SE_393-422.indd   402 3/18/11   5:01:19 PM3/18/11   5:01:19 PM