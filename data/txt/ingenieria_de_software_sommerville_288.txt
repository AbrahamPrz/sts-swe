10.1 ■ Sistemas complejos  271 errores que, a la vez, conducirían a más problemas de software o de procesamiento adi- cional. Esto podría sobrecargar el hardware causando más fallas. Por lo tanto, la falla inicial, que podría ser recuperable, se convertiría rápidamente en un problema serio que dé como resultado una parálisis completa del sistema. La fiabilidad de un sistema depende del contexto en que se use. Sin embargo, el entorno del sistema no se puede especificar por completo, ni los diseñadores del sis-tema pueden colocar restricciones en dicho entorno para sistemas operacionales. Los diferentes sistemas que operan dentro de un entorno tal vez reaccionen a los problemas de formas impredecibles, lo cual en consecuencia afectaría la fiabilidad de todos esos sistemas. Por ejemplo, imagine que un sistema se diseña para operar a una temperatura ambiente normal. Para permitir variaciones y condiciones excepcionales, los componentes electró-nicos de un sistema se diseñan para operar dentro de cierto intervalo de temperaturas, por ejemplo, de 0 a 45 grados. Fuera de este intervalo de temperatura, los componentes se comportarán en forma impredecible. Ahora suponga que este sistema se instala cerca del aire acondicionado. Si éste falla y arroja gas caliente sobre el dispositivo electrónico, entonces el sistema podría sobrecalentarse. Siendo así, los componentes y, en consecuen-cia, todo el sistema, fallarían. Si este sistema se hubiera instalado en alguna otra parte de ese ambiente, tal problema no ocurriría. Cuando el aire acondicionado funciona adecuadamente no hay problemas. No obstante, debido a la cercanía física de dichas máquinas, existió entre ellas una rela-ción no prevista que condujo a la falla del sistema. Como la fiabilidad, las propiedades emergentes como rendimiento o usabilidad son difíciles de valorar, aunque pueden medirse después de poner en funcionamiento el sis-tema. Sin embargo, propiedades como la seguridad y la protección no son mensurables. Aquí, usted no está interesado simplemente por los atributos que se relacionan con el comportamiento del sistema, sino también con el comportamiento no deseado o inacep-table. Un sistema seguro es aquel que impide el acceso no autorizado a sus datos. A pesar de ello, resulta claramente imposible predecir todos los posibles modos de acceso y prohibirlos de forma explícita. Por consiguiente, sólo sería posible valorar dichas pro-piedades “no se debe”. Esto es, sólo se sabe que un sistema no es seguro cuando alguien trata de penetrarlo.  10.1.2 No determinismo Un sistema determinista es uno completamente predecible. Si se ignoran los problemas de temporización, los sistemas de software que se ejecutan en un hardware confiable por completo y los que presentan una secuencia de entradas producirán siempre la misma secuencia de salidas. Por supuesto, no hay nada como un hardware completamente fia-ble; sin embargo, el hardware es por lo general bastante fiable para considerar a los siste-mas de hardware como deterministas. Por otro lado, los individuos no son deterministas. Cuando se les presenta exac-tamente la misma entrada (es decir, un requerimiento para completar una tarea), sus respuestas dependerán de sus estados emocional y físico, de la persona que hace la peti-ción, de otros individuos en el entorno y de cualquier otra cuestión que estén haciendo. En algunas ocasiones, se sentirán satisfechos por hacer el trabajo, aunque en otras se negarán a realizarlo. M10_SOMMERVILLE_INGENIERIA_1ED_SE_261-288.indd   271M10_SOMMERVILLE_INGENIERIA_1ED_SE_261-288.indd   271 3/18/11   4:53:19 PM3/18/11   4:53:19 PM