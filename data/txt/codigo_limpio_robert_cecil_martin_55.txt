verb = “is”; pluralmodifier = “”; } else { number = integer.tostring(count); verb = “are”; pluralmodifier = “s”; } string guessmessage = string.format( “there %s %s %s%s”, verb, number, candidate, pluralmodifier ); print(guessmessage); } la función es demasiado extensa y las variables aparecen por todas partes. para dividir la función en fragmentos más reducidos necesitamos crear una clase guessstatisticsmessage y convertir a las tres variables en campos de la misma. de este modo contamos con un contexto más obvio para las tres variables. forman parte sin duda de guessstatisticsmessage . la mejora del contexto también permite que el algoritmo sea más limpio y se divida en funciones más reducidas (véase el listado 2-2). listado 2-2 variables con un contexto. public class guessstatisticsmessage ( private string number; private string verb; private string pluralmodifier; public string make(char candidate, int count) { createpluraldependentmessageparts(count); return string.format( “there %s %s %s%s, verb, number, candidate, pluralmodifier); } private void createpluraldependentmessageparts(int count) { if (count == 0) { therearenoletters(); } else if (cout == 1) { thereisoneletter(); } else { therearemanyletters(count); } } private void therearemanyletters(int count) { number = “1”; 56