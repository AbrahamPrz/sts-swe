CAPÍTULO 20  PRUEBA DE APLICACIONES WEB 473 En todo caso, dichas variables se definen dentro de fronteras operativas normales del sistema.  Conforme se aplica cada condición de prueba, se recopila una o más de las siguientes medidas: respuesta de usuario promedio, tiempo promedio para descargar una unidad estandarizada de datos y tiempo promedio para procesar una transacción. Estas medidas deben examinarse para determinar si una disminución abrupta en el rendimiento puede rastrearse en una combinación específica de N, T y D. La prueba de carga también puede usarse para valorar las velocidades de conexión recomen- dadas para los usuarios de la webapp. El rendimiento global, P, se calcula de la forma si-guiente: P /H11005 N /H11003 T /H11003 D Tome como ejemplo un sitio popular de noticias deportivas. En un momento dado, 20 000 usua-rios concurrentes envían una solicitud (una transacción, T) una vez cada 2 minutos en prome- dio. Cada transacción requiere que la webapp descargue un nuevo artículo que promedia 3 Kb  de longitud. Por tanto, el rendimiento global puede calcularse como: P /H11005 [20 000 /H11003 0.5 /H11003 3Kb]/60 /H11005 500 Kbytes/s  /H11005 4 megabits por segundo Por ende, la conexión de la red para el servidor tendría que soportar esta tasa de datos y debería  ponerse a prueba para asegurarse de que lo hace. 20.9.3  Prueba de esfuerzo La prueba de esfuerzo es una continuación de la prueba de carga, pero en esta instancia las va-riables N, T y D se fuerzan a satisfacerse y luego se superan los límites operativos. La intención  de estas pruebas es responder a cada una de las siguientes preguntas: • ¿El sistema se degrada “suavemente” o el servidor se apaga conforme la capacidad se  supera? • ¿El software servidor genera mensajes “servidor no disponible”? De manera más  general, ¿los usuarios están conscientes de que no pueden llegar al servidor? • ¿El servidor pone en cola los recursos solicitados y vacía la cola una vez que disminuye  la demanda de capacidad? • ¿Las transacciones se pierden conforme la capacidad se excede? • ¿La integridad de los datos resulta afectada conforme la capacidad se excede? • ¿Qué valores de N, T y D fuerzan el fallo del entorno servidor? ¿Cómo se manifiesta la  falla? ¿Se envían notificaciones automáticas al personal de apoyo técnico en el sitio servidor? • Si el sistema falla, ¿cuánto tiempo tardará en regresar en línea? • ¿Ciertas funciones de la webapp (por ejemplo, funcionalidad de cálculo intenso, capaci- dades de transmisión de datos) quedan descontinuadas conforme la capacidad alcanza el nivel de 80 o 90 por ciento? A una variación de las pruebas de esfuerzo en ocasiones se le conoce como prueba pico/re- bote ( spike/bounce) [Spl01]. En este régimen de pruebas, la carga alcanza un pico de capacidad,  luego se baja rápidamente a condiciones operativas normales y después alcanza de nuevo un pico. Al rebotar la carga del sistema, es posible determinar cuán bien el servidor puede ordenar los recursos para satisfacer una demanda muy alta y entonces liberarlos cuando reaparecen condiciones normales (de modo que esté listo para el siguiente pico).Si una webapp usa múltiples  servidores para proporcionar una capacidad significativa, la prueba de carga debe realizarse en un entorno multiservidor.CONSEJO PUNTO CLAVE El objetivo de la prueba de esfuerzo es comprender de mejor manera como falla un sistema a medida que es forzado más allá de sus límites operacionales. 20Pressman(453-477).indd   47320Pressman(453-477).indd   473 21/1/10   10:58:1221/1/10   10:58:12