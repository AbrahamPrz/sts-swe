capítulo 14 conceptos de calidad 349 en la mayor parte de los casos, el cliente afirma que el desarrollador ha sido negligente (en cuanto a la manera en la que aplicó las prácticas del software), por lo que no merece el pago. es frecuente que el desarrollador diga que el cliente ha cambiado repetidamente sus requeri-mientos y trastornado de diversas maneras los acuerdos para el trabajo. en cualquier caso, es la calidad del sistema lo que está en entredicho. 14.3.5 calidad y seguridad a medida que aumenta la importancia crítica de los sistemas y aplicaciones basados en web, la seguridad de las aplicaciones se ha vuelto más importante. en pocas palabras, el software que no tiene alta calidad es fácil de penetrar por parte de intrusos y, en consecuencia, el software de mala calidad aumenta indirectamente el riesgo de la seguridad, con todos los costos y proble-mas que eso conlleva. en una entrevista para computerworld, el autor y experto en seguridad gary mcgraw co- menta lo siguiente [wil05]: la seguridad del software se relaciona por completo con la calidad. debe pensarse en seguridad, confiabilidad, disponibilidad y dependencia, en la fase inicial, en la de diseño, en la de arquitectura, pruebas y codificación, durante todo el ciclo de vida del software [proceso]. incluso las personas cons-cientes del problema de la seguridad del software se centran en las etapas finales del ciclo de vida. entre más pronto se detecte un problema en el software, mejor. y hay dos clases de problemas. uno son los errores, que son problemas de implementación. el otro son las fallas del software: problemas de arquitectura en el diseño. la gente presta demasiada atención a los errores pero no la suficiente a las fallas. para construir un sistema seguro hay que centrarse en la calidad, y eso debe comenzar du- rante el diseño. los conceptos y métodos analizados en la parte 2 del libro llevan a una arqui- tectura del software que reduce las “fallas”. al eliminar las fallas de arquitectura (con lo que mejora la calidad del software) será más difícil que intrusos penetren en el software. 14.3.6 el efecto de las acciones de la administración es frecuente que la calidad del software reciba influencia tanto de las decisiones administrativas como de las tecnológicas. incluso las mejores prácticas de la ingeniería de software pueden ser arruinadas por malas decisiones gerenciales y por acciones cuestionables de la administración del proyecto. en la parte 4 de este libro se analiza la administración del proyecto en el contexto del proceso del software. al iniciar toda tarea del proyecto, el líder de éste tomará decisiones que tienen un efecto significativo en la calidad del producto. decisiones de estimación. como se dice en el capítulo 26, un equipo de software rara vez puede darse el lujo de dar una estimación para el proyecto antes de que se hayan establecido las fechas de entrega y especificado un presupuesto general. en vez de ello, el equipo realiza un “filtro sanitario” para garantizar que las fechas de entrega y puntos de revisión son racionales. en muchos casos, hay una presión enorme del tiempo para entrar al mercado que fuerza al equipo a aceptar fechas de entrega irreales. en consecuencia, se toman atajos, se pasan por alto las actividades que elevan la calidad del software y disminuye la calidad del producto. si una fecha de entrega es irracional, es importante poner los pies sobre la tierra. explique por qué se necesita más tiempo o, alternativamente , sugiera un subconjunto de funciones que puedan entregarse (sin demasiada calidad) en el tiempo programado. decisiones de programación. cuando se establece un programa de desarrollo de un pro- yecto de software (véase el capítulo 27), se establece la secuencia de las tareas con base en dependencias. por ejemplo, como el componente a depende del procesamiento que ocurra 14pressman(337-353).indd  34914pressman(337-353).indd  349 14/1/10  16:51:3114/1/10  16:51:31