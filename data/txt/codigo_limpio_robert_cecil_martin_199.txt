abrir una clase, debemos corregir el diseño. ¿Y si optamos por una solución como la del Listado 10-10? Los métodos públicos de interfaz definidos en  Sql  en el Listado 10-9 se refactorizan en sus propias variantes de la clase  Sql . Los métodos privados, como  valuesList , se mueven directamente a las posiciones necesarias. El comportamiento privado se reduce a un par de clases de utilidad:  Where  y  ColumnList . Listado 10-10 Un grupo de clases cerradas. Abstract public class Sql { public Sql(String table, Column[] columns) abstract public String generate(); } public class CreateSql extends Sql { public CreateSql(String table, Column[] columns) @Override public String generate() } public class SelectSql extends Sql { public SelectSql(String table, Column[] columns) @Override public String generate() } public class InsertSql extends Sql { public SelectSql(String table, Column[] columns, Object[] fields) @Override public String generate() private String valuesList(Object[] fields, final Column[] columns) } public class SelectWithCriteriaSql extends Sql { public SelectWithCriteriaSql( String table, Column[] columns, Criteria criteria) @Override public String generate() } public class SelectWithMatchSql extends Sql { public SelectWithMatchSql( String table, Column[] columns, Column column, String pattern) @Override public String generate() } public class FindByKeySql extends Sql { public FindByKeySql( String table, Column[] columns, String keyColumn, String keyValue) @Override public String generate() } 200