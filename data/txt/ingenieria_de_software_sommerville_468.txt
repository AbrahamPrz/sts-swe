capítulo 16 ■ referencias 451 holdener, a. t. (2008). ajax: the definitive guide. sebastopol, calif.: o’reilly and associates. jacobson, i., griss, m. y jonsson, p. (1997). software reuse. reading, mass.: addison-wesley.matsumoto, y. (1984). “some experience in promoting reusable software: presentation in higher abstract levels”. ieee. trans. on software engineering, se-10 (5), 502–12. mcilroy, m. d. (1968). “mass-produced software components”. proc. nato conf. on software eng., garmisch, alemania: springer-verlag. nuseibeh, b. (1997). “ariane 5: who dunnit?” ieee software, 14 (3), 15–6.o’leary, d. e. (2000). enterprise resource planning systems: systems, life cycle, electronic commerce and risk. cambridge, uk: cambridge university press. pfarr, t. y reis, j. e. (2002). “the integration of cots/gots within nasa’s hst command and control system”. proc. iccbss 2002 (1st int. conf on cots-based software systems) , orlando, fla.: springer, 209–21. schmidt, d. c. (1997). “applying design patterns and frameworks to develop object-oriented communications software”. en handbook of programming languages, vol. 1. (ed.). nueva york: macmillan computer publishing. schmidt, d. c., gokhale, a. y natarajan, b. (2004). “leveraging application frameworks”. acm queue, 2 (5 (julio/agosto)), 66–75.scott, j. e. (1999). “the foxmeyer drug’s bankruptcy: was it a failure of erp”. proc. association for information systems 5th americas conf. on information systems , milwaukee, wi. torchiano, m. y morisio, m. (2004). “overlooked aspects of cots-based development”. ieee software, 21 (2), 88–93. tracz, w. (2001). “cots myths and other lessons learned in component-based software development”. en component-based software engineering. heineman, g. t. y councill, w. t. (ed.). boston: addison-wesley, 99–112. m16_sommerville_ingenieria_1ed_se_423-451.indd  451m16_sommerville_ingenieria_1ed_se_423-451.indd  451 3/18/11  5:02:14 pm3/18/11  5:02:14 pm