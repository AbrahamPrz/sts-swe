reducido, una opinión habitual en la literatura de software desde su concepción. cuanto más pequeño, mejor. también afirma que el código debe ser culto , una referencia indirecta a la programación de knuth [4] y que en definitiva indica que el código debe redactarse de una forma legible para los humanos. michael feathers, autor de working effectively with legacy code podría enumerar todas las cualidades del código limpio, pero hay una principal que engloba a todas ellas. el código limpio siempre parece que ha sido escrito por alguien a quien le importa. no hay nada evidente que hacer para mejorarlo. el autor del código pensó en todos los aspectos posibles y si intentamos imaginar alguna mejora, volvemos al punto de partida y sólo nos queda disfrutar del código que alguien a quien le importa realmente nos ha proporcionado. una palabra; dar importancia. es el verdadero tema de este libro, que incluso podría usar el subtítulo « cómo dar importancia al código ». michael ha acertado de pleno. el código limpio es aquél al que se le ha dado importancia. alguien ha dedicado su tiempo para que sea sencillo y ha prestado atención a los detalles. se ha preocupado. ron jeffries, autor de extreme programming installed y extreme programming adventures in c# 32