return currentArgument.nextIndex(); } public boolean getBoolean(char arg) { return BooleanArgumentMarshaler.getValue(marshalers.get(arg)); } public String getString(char arg) { return StringArgumentMarshaler.getValue(marshalers.get(arg)); } public int getInt(char arg) { return IntegerArgumentMarshaler.getValue (marshalers.get(arg)); } public double getDouble(char arg) { return DoubleArgumentMarshaler.getValue(marshalers.get(arg)); } public String[] getStringArray(char arg) { return StringArrayArgumentMarshaler.getValue(marshalers.get(arg)); } } Puede leer el código de arriba a abajo sin necesidad de saltar de un punto a otro ni buscar hacia adelante. Lo que seguramente busque es la definición de  ArgumentMarshaler , que hemos omitido intencionadamente. Tras leer el código, comprenderá la interfaz  ArgumentMarshaler  y la función de sus variantes. Veamos algunas de ellas (entre los listados 14-3 y 14-6). Listado 14-3 ArgumentMarshaler.java public interface ArgumentMarshaler { void set(Iterator<String> currentArgument) throws ArgsException; } Listado 14-4 BooleanArgumentMarshaler.java public class BooleanArgumentMarshaler implements ArgumentMarshaler { private boolean booleanValue = false; public void set (Iterator<String> currentArgument) throws ArgsException { booleanValue = true; } public static boolean getValue(ArgumentMarshaler am) { 259