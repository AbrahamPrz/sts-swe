CAPÍTULO 18  PRUEBA DE APLICACIONES CONVENCIONALES 431 cliente para asegurar que los datos se almacenen, actualicen y recuperen de manera  adecuada. También se prueba la forma de archivar. • Pruebas de transacción. Se crea una serie de pruebas para garantizar que cada clase de transacciones se procese de acuerdo con los requerimientos. Las pruebas se enfocan en comprobar lo correcto del procesamiento y también en los conflictos de rendimiento (por ejemplo, tiempos de procesamiento de transacción y volumen de transacción). • Pruebas de comunicación de red.  Estas pruebas verifican que la comunicación entre  los nodos de la red ocurre de manera correcta y que el mensaje que pasa, las transac-ciones y el tráfico de red relacionado ocurren sin errores. Como parte de estas pruebas, también pueden realizarse pruebas de seguridad de red. Para lograr estos abordajes de prueba, Musa [Mus93] recomienda el desarrollo de perfiles  operativos derivados de escenarios de uso cliente-servidor. 9 Un perfil operativo indica cómo in- teractúan con el sistema cliente-servidor diferentes tipos de usuarios. Es decir, los perfiles pro-porcionan un “patrón de uso” que puede aplicarse cuando las pruebas se diseñan y ejecutan. Por ejemplo, para un tipo particular de usuario, ¿qué porcentaje de transacciones serán consultas?, ¿cuántas serán actualizaciones?, ¿cuántos serán pedidos? Para desarrollar el perfil operativo, es necesario derivar un conjunto de escenarios que sean  similares a los casos de uso (capítulos 5 y 6). Cada escenario aborda quién, dónde, qué y por qué. Es decir: quién es el usuario, dónde (en la arquitectura cliente-servidor física) ocurre la interacción del sistema, cuál es la transacción y por qué ocurre. Los escenarios pueden derivarse usando técnicas de respuesta a requerimientos (capítulo 5) o a través de análisis menos forma-les con los usuarios finales. Sin embargo, el resultado debe ser el mismo. Cada escenario debe proporcionar un indicio de las funciones del sistema que se requerirán para atender a un usua-rio particular, el orden en el que se requieren dichas funciones, la temporización y la respuesta que se espera, así como la frecuencia con la que se usa cada función. Luego, estos datos se combinan (para todos los usuarios) a fin de crear el perfil operativo. En general, el esfuerzo de prueba y el número de casos de prueba por ejecutar se asignan a cada escenario de uso con base en la frecuencia de uso y en lo crítico de las funciones realizadas. 18.8.3  Documentación de prueba y centros de ayuda El término prueba de software  invoca imágenes de gran número de casos de prueba preparados  para revisar los programas de cómputo y los datos que manipulan. Al recordar la definición de software que se presentó en el capítulo 1, es importante notar que las pruebas también deben extenderse al tercer elemento de la configuración del software: la documentación. Los errores en la documentación pueden ser tan devastadores para la aceptación del pro- grama como los errores en los datos o en el código fuente. Nada es más frustrante que seguir con exactitud una guía de usuario o un centro de ayuda en línea y obtener resultados o compor-tamientos que no coinciden con los predichos por la documentación. Por esta razón, las pruebas de documentación deben ser parte significativa de todo plan de prueba de software. La prueba de documentación puede abordarse en dos fases. La primera, la revisión técnica  (capítulo 15), examina el documento en su claridad editorial. La segunda, prueba en vivo, usa la documentación en conjunto con el programa real. Sorprendentemente, una prueba en vivo para la documentación puede abordarse usando  técnicas que son análogas a muchos de los métodos de prueba de caja negra estudiados ante-riormente. La prueba basada en gráfico puede usarse para describir el uso del programa; la partición de equivalencia y el análisis del valor de frontera pueden usarse para definir varias  9 Debe señalarse que los perfiles operativos pueden usarse para probar todo tipo de arquitecturas de sistema, no  sólo arquitectura cliente-servidor. 18Pressman(411-436).indd   43118Pressman(411-436).indd   431 21/1/10   10:59:0021/1/10   10:59:00