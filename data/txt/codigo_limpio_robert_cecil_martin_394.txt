g.roll(pins); } Es totalmente claro y se complicaría si la variable  i  se cambiara por algo como  rollCount . Por otra parte, las variables y funciones con nombres breves pierden su significado en las grandes distancias. Por tanto, cuanto mayor sea el ámbito del nombre, más extenso y preciso tendrá que ser el nombre. N6: Evitar codificaciones Los nombres no deben codificarse con información de tipos o ámbitos. Prefijos como  m_  o  f  no sirven de nada en los entornos actuales. Además, codificaciones de proyecto y/o subsistema como  vis_  (para un sistema de imágenes visuales) distraen la atención y son redundantes. Los entornos actuales proporcionan toda esa información sin tener que modificar los nombres. Aleje sus nombres de la contaminación húngara. N7: Los nombres deben describir efectos secundarios Los nombres deben describir todo lo que haga una función, variable o clase. No oculte efectos secundarios con un nombre. No utilice un simple verbo para describir una función que realiza algo más que una simple acción. Fíjese en este código de TestNG: public ObjectOutputStream getOos() throws IOException { if (m_oos == null) { m_oos = new ObjectOutputStream(m_socket.getOutputStream()); } return m_oos; } Esta función hace algo más que obtener  oos ; lo crea si todavía no se ha creado. Por lo tanto, un nombre más acertado sería  createOrReturnOos . Pruebas (Test) 395