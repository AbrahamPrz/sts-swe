522 parte tres administración de la calidad 22.4.5 control de versión conforme una webapp evoluciona a través de una serie de incrementos, pueden existir al mismo tiempo algunas versiones diferentes. una versión (la webapp operativa actual) está disponible mediante internet para usuarios finales; otra (el siguiente incremento de webapp) puede estar en las etapas finales de prueba antes de su implementación; una tercera versión está en desa-rrollo y representa una gran actualización en contenido, estética de interfaz y funcionalidad. los objetos de configuración deben definirse con claridad, de modo que cada uno pueda asociarse con la versión adecuada. además, deben establecerse mecanismos de control. dreilinger [dre99] analiza la importancia del control de versiones (y de cambios) cuando escribe: en un sitio descontrolado, donde múltiples autores tienen acceso para editar y contribuir, surge el potencial para conflictos y problemas, más aún si dichos autores trabajan desde diferentes oficinas en diferentes momentos del día y de la noche. usted puede pasar el día mejorando el archivo index.html para un cliente. después de que usted realiza sus cambios, otro desarrollador que trabaja en casa después de las horas de oficina, o en otra oficina, puede pasar la noche actualizando su propia versión recientemente revisada del archivo index.html, ¡y sobreescribir por completo su trabajo sin que haya forma de recuperarlo! es probable que usted haya experimentado una situación similar. para evitarla, se requiere un proceso de control de versiones. 1. debe establecerse un repositorio centr al para el proyecto web , que contendrá las versiones actuales de todos los objetos de configuración webapp (contenido, componentes funcio- nales y otros). 2. cada ingeniero web crea su propia carpeta de tr abajo, que contiene aquellos objetos que se crean o cambian en cualquier momento. 3. los relojes en todas las estaciones de tr abajo de los desarrolladores deben estar sincroniza- dos para evitar conflictos de sobreescritura cuando dos desarrolladores realizan actuali- zaciones que están muy cercanas en el tiempo. 4. conforme se desarrollan n uevos objetos de configuración o se cambian los objetos existen- tes, deben importarse hacia el repositorio central. la herramienta de control de versión (vea la discusión de svc en la barra lateral) gestionará todas las funciones de entrada y salida de las carpetas de trabajo de cada desarrollador web. cuando se hagan cambios al repositorio, la herramienta también proporcionará actualizaciones automáticas por correo electrónico a todas las partes interesadas. 5. conforme los objetos se importen al o se exporten del repositorio, se elabor a un mensaje de bitácora automático con marca de tiempo. esto proporciona información útil para auditar y puede volverse parte de un esquema de reporte efectivo. la herramienta de control de versión conserva diferentes versiones de la webapp y puede rever- tir una de ellas a una versión más antigua si se requiere. 22.4.6 auditoría y reporte con la intención de obtener agilidad, las funciones de auditoría y reporte no tienen mucho én-fasis en el trabajo de ingeniería web. 10 sin embargo, no se eliminan por completo. todos los objetos que entran o salen del repositorio se registran en una bitácora que puede revisarse en 10 esto empieza a cambiar. hay un creciente énfasis en la acs como un elemento de la seguridad de la webapp [sar06]. al proporcionar un mecanismo para rastrear y reportar todo cambio hecho a cada objeto web, una he- rramienta de administración del cambio puede proporcionar valiosa protección contra cambios maliciosos. 22pressman(501-525).indd  52222pressman(501-525).indd  522 19/1/10  17:12:1319/1/10  17:12:13