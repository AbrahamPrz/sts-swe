rápidas. Conclusión Esta lista de heurística y síntomas no se podría considerar completa. De hecho, dudo de que alguna vez exista alguna. Pero puede que ese no sea el objetivo, ya que lo que implica esta lista es un sistema de valores. El sistema de valores ha sido el objetivo y la base de este libro. El código limpio no se crea siguiendo una serie de reglas. No se convertirá en un maestro del  software  aprendiendo una lista de heurísticas. La profesionalidad y la maestría provienen de los valores que impulsan las disciplinas. Bibliografía [Refactoring] :  Refactoring: Improving the Design of Existing Code , Martin Fowler et al., Addison-Wesley, 1999. [PRAG] :  The Pragmatic Programmer , Andrew Hunt, Dave Thomas, Addison-Wesley, 2000. [GOF] :  Design Patterns: Elements of Reusable Object Oriented Software , Gamma et al., Addison-Wesley, 1996. [Beck97] :  Smalltalk Best Practice Patterns , Kent Beck, Prentice Hall, 1997. [Beck07] :  Implementation Patterns , Kent Beck, Addison-Wesley, 2008. [PPP] :  Agile Software Development: Principles, Patterns, and Practices , Robert C. Martin, Prentice Hall, 2002. [DDD] :  Domain Driven Design , Eric Evans, Addison-Wesley, 2003. 398