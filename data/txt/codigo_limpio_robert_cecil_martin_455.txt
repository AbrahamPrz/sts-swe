753 switch (count) { 754 case SerialDate.FIRST_WEEK_IN_MONTH : return “First”; 755 case SerialDate.SECOND_WEEK_IN_MONTH : return “Second”; 756 case SerialDate.THIRD_WEEK_IN_MONTH : return “Third”; 757 case SerialDate.FOURTH_WEEK_IN_MONTH : return “Fourth”; 758 case SerialDate.LAST_WEEK_IN_MONTH : return “Last”; 759 default : 760 return “SerialDate.weekInMonthToString(): invalid code.”; 761 } 762 763 } 764 765 /** 766 * Devuelve una cadena que representa el valor ‘relativo’ proporcionado. 767 * <P> 768 * Necesitamos un enfoque mejor. 769 * 770 * @param relative una constante que representa el valor ‘relativo’. 771 * 772 * @return una cadena que representa el valor ‘relativo’ proporcionado. 773 */ 774 public static String relativeToString(final int relative) { 775 776 switch (relative) { 777 case SerialDate.PRECEDING : return “Preceding”; 778 case SerialDate.NEAREST : return “Nearest”; 779 case SerialDate.FOLLOWING : return “Following”; 780 default : return “ERROR : Relative To String”; 781 } 782 783 } 784 785 /** 786 * Método de factoría que devuelve una instancia de una subclase concreta de 787 * {@link SerialDate}. 788 * 789 * @param day el día (1-31). 790 * @param month el mes (1-12). 791 * @param yyyy el año (entre 1900 y 9999). 792 * 793 * @return Una instancia de {@link SerialDate} 794 */ 795 public static SerialDate createInstance(final int day, final int 456