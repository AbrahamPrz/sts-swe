CAPÍTULO 22  ADMINISTRACIÓN DE LA CONFIGURACIÓN DEL SOFTWARE 505 22.1.4  Ítems de configuración del software Ya se definió un ítem de configuración del software como la información que se crea como parte  del proceso de ingeniería de software. En última instancia, un ICS podría considerarse como una sola sección de una gran especificación o como un caso de prueba en una gran suite de pruebas. De manera más realista, un ICS es todo o parte de un producto de trabajo (por ejemplo, un do-cumento, toda una suite de casos de prueba o un componente de programa nominado). Además de los ICS que se derivan de los productos de trabajo de software, muchas organi- zaciones de ingeniería de software también colocan las herramientas de software bajo control de configuración, es decir, versiones específicas de editores, compiladores, navegadores y otras herramientas automatizadas se “congelan” como parte de la configuración del software. Puesto que dichas herramientas se usaron para producir documentación, código fuente y datos, deben estar disponibles cuando tengan que realizarse cambios a la configuración del software. Aunque los problemas son raros, es posible que una nueva versión de una herramienta (por ejemplo, un compilador) pueda producir resultados diferentes que la versión original. Por esta razón, las herramientas, como el software que ayudan a producir, pueden convertirse en líneas de refe-rencia como parte de un proceso amplio de administración de la configuración. En realidad, los ICS se organizan para formar objetos de configuración que puedan catalo- garse con un solo nombre en la base de datos del proyecto. Un objeto de configuración tiene un  nombre y atributos, y está “conectado” con otros objetos mediante relaciones. En la figura 22.2, los objetos de configuración DesignSpecification (especificación de diseño), DataModel (mo- delo de datos), ComponentN (componente n), SourceCode (código fuente) y TestSpecifica- tion (especificación de prueba) se definen cada uno por separado. Sin embargo, cada uno de los objetos se relaciona con los demás, como se muestra mediante las flechas. Una flecha curva indica una relación composicional, es decir, DataModel y ComponentN son parte del objeto  DesignSpecification. Una flecha con doble punta indica una interrelación. Si se realizara un cambio al objeto SourceCode, las interrelaciones permiten determinar qué otros objetos (e ICS)  pueden resultar afectados. 2ICS ICSModiﬁcado Tareas de la ingeniería de softwareRevisiones técnicasICSAprobado ICSExtraído Controles ACSICSAlmacenadoBase de datos del proyecto Especiﬁcación del sistema Requerimientos de softwareEspeciﬁcación de diseñoCódigo fuentePlanes/procedimientos/datos de pruebaSistema operativoLÍNEAS DE REFERENCIA:FIGURA 22.1 ICS como línea de referencia y base de datos del proyecto 2 Esas relaciones se definen dentro de la base de datos. La estructura de la base de datos (repositorio) se estudia  con mayor detalle en la sección 22.2. 22Pressman(501-525).indd   50522Pressman(501-525).indd   505 19/1/10   17:12:0819/1/10   17:12:08