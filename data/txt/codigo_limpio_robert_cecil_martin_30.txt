La frase «nítida abstracción» de Grady es un oxímoron fascinante. Nítido es casi un sinónimo de concreto, con un potente mensaje. El código debe ser específico y no especulativo. Sólo debe incluir lo necesario. Nuestros lectores deben percibir que hemos tomado decisiones. «Big» Dave Thomas, fundador de OTI, el padrino de la estrategia Eclipse El código limpio se puede leer y mejorar por parte de un programador que no sea su autor original. Tiene pruebas de unidad y de aceptación. Tiene nombres con sentido. Ofrece una y no varias formas de hacer algo. Sus dependencias son mínimas, se definen de forma explícita y ofrece una API clara y mínima. El código debe ser culto en función del lenguaje, ya que no toda la información necesaria se puede expresar de forma clara en el código. Big Dave comparte el deseo de Grady de la legibilidad, pero con una importante variante. Dave afirma que el código limpio facilita las labores de mejora de  otros . Puede parecer evidente pero no debemos excedernos. Después de todo, existe una diferencia entre el código fácil de leer y el código fácil de cambiar. Dave vincula la limpieza a las pruebas. Hace 10 años esto hubiera provocado cierta controversia. Pero la disciplina del Desarrollo controlado por pruebas ha tenido un gran impacto en nuestro sector y se ha convertido en uno de sus pilares. Dave tiene razón. El código, sin pruebas, no es limpio. Independientemente de su elegancia, legibilidad y accesibilidad, si no tiene pruebas, no será limpio. Dave usa dos veces la palabra  mínimo . Valora el código de tamaño 31