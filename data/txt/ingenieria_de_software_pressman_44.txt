CAPÍTULO 1  EL SOFTWARE Y LA INGENIERÍA DE SOFTWARE 13 Comunicación. Antes de que comience cualquier trabajo técnico, tiene importancia crí- tica comunicarse y colaborar con el cliente (y con otros participantes).11 Se busca entender  los objetivos de los participantes respecto del proyecto, y reunir los requerimientos que  ayuden a definir las características y funciones del software. Planeación. Cualquier viaje complicado se simplifica si existe un mapa. Un proyecto de  software es un viaje difícil, y la actividad de planeación crea un “mapa” que guía al equipo  mientras viaja. El mapa —llamado plan del proyecto de software— define el trabajo de inge- niería de software al describir las tareas técnicas por realizar, los riesgos probables, los re-cursos que se requieren, los productos del trabajo que se obtendrán y una programación de las actividades. Modelado. Ya sea usted diseñador de paisaje, constructor de puentes, ingeniero aeronáu- tico, carpintero o arquitecto, a diario trabaja con modelos. Crea un “bosquejo” del objeto por  hacer a fin de entender el panorama general —cómo se verá arquitectónicamente, cómo ajustan entre sí las partes constituyentes y muchas características más—. Si se requiere, re-fina el bosquejo con más y más detalles en un esfuerzo por comprender mejor el problema y cómo resolverlo. Un ingeniero de software hace lo mismo al crear modelos a fin de entender mejor los requerimientos del software y el diseño que los satisfará. Construcción.  Esta actividad combina la generación de código (ya sea manual o auto- matizada) y las pruebas que se requieren para descubrir errores en éste.Despliegue. El software (como entidad completa o como un incremento parcialmente  terminado) se entrega al consumidor que lo evalúa y que le da retroalimentación, misma  que se basa en dicha evaluación. Estas cinco actividades estructurales genéricas se usan durante el desarrollo de programas pe-queños y sencillos, en la creación de aplicaciones web grandes y en la ingeniería de sistemas enormes y complejos basados en computadoras. Los detalles del proceso de software serán distintos en cada caso, pero las actividades estructurales son las mismas. Para muchos proyectos de software, las actividades estructurales se aplican en forma itera- tiva a medida que avanza el proyecto. Es decir, la comunicación, la planeación, el mode- lado, la  construcción  y el despliegue se ejecutan a través de cierto número de repeticiones  del proyecto. Cada iteración produce un incremento del software  que da a los participantes un  subconjunto de características y funcionalidad generales del software. Conforme se produce cada incremento, el software se hace más y más completo. Las actividades estructurales del proceso de ingeniería de software son complementadas por  cierto número de actividades sombrilla. En general, las actividades sombrilla se aplican a lo largo  de un proyecto de software y ayudan al equipo que lo lleva a cabo a administrar y controlar el avance, la calidad, el cambio y el riesgo. Es común que las actividades sombrilla sean las si-guientes: Seguimiento y control del proyecto de software: permite que el equipo de software  evalúe el progreso comparándolo con el plan del proyecto y tome cualquier acción necesa-ria para apegarse a la programación de actividades. Administración del riesgo: evalúa los riesgos que puedan afectar el resultado del pro- yecto o la calidad del producto.¿Cuáles son las  cinco actividades estructurales del proceso?? 11 Un participante es cualquier persona que tenga algo que ver en el resultado exitoso del proyecto —gerentes del  negocio, usuarios finales, ingenieros de software, personal de apoyo, etc.—. Rob Thomset dice en broma que “un  participante es una persona que blande una estaca grande y aguda […] Si no vez más lejos que los participantes, ya sabes dónde terminará la estaca”. (N. del T.: Esta nota es un juego de palabras: stake significa estaca y también  parte, y stakeholder es el que blande una estaca, pero también un participante.)Cita: “Einstein afirmaba que debía  haber una explicación sencilla de la naturaleza porque Dios no es caprichoso o arbitrario. Al ingeniero de software no lo con-forta una fe parecida. Gran parte de la complejidad que debe doblegar es de origen arbitrario.” Fred Brooks PUNTO CLAVE Las actividades sombrilla ocurren  a lo largo del proceso de software y se centran sobre todo en la administración, el seguimiento y el control del proyecto. 01Pressman(001-024).indd   1301Pressman(001-024).indd   13 14/1/10   13:31:0014/1/10   13:31:00