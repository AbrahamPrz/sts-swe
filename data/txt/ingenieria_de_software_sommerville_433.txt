416 capítulo 15 ■ garantía de confiabilidad y seguridad insegura no puede ser verdadera. si es posible hacer esto, podemos estar seguros de que el programa no calculará una dosis inadecuada de insulina. en la figura 15.11 se estruc-turan y presentan gráficamente los argumentos de protección. para elaborar un argumento estructurado de un programa que no efectúa un cálculo inseguro, primero identifique todas las posibles rutas a lo largo del código que podrían conducir al estado potencialmente no protegido. trabaje hacia atrás a partir de ese estado no protegido y considere la última asignación a todas las variables de estado en cada ruta que conduzca a dicho estado no protegido. si es posible probar que ninguno de los valo-res de esas variables es inseguro, entonces se demostrará que la suposición inicial (de que el cálculo es inseguro) es incorrecta. trabajar hacia atrás es importante porque significa que usted puede ignorar todos los estados, además de los estados finales, que conduzcan a la condición de salida para el código. los valores anteriores no son importantes para la protección del sistema. en este ejemplo, sólo necesita preocuparse por el conjunto de posibles valores de currentdose currentdose = 0 currentdose = 0 ejecución enunciado if 2 rama thencurrentdose = maxdose currentdose = maxdose ejecución enunciado if 2 rama elseenunciado if 2 no ejecutadocurrentdose >= minimumdose y currentdose <= maxdoseocurrentdose> maxdose administerinsulin contradicción contradicción contradicciónprecondición de estado insegurosobredosis administrada asignar asignar figura 15.11 argumentos de protección informales basados en contradicciones de demostración m15_sommerville_ingenieria_1ed_se_393-422.indd  416m15_sommerville_ingenieria_1ed_se_393-422.indd  416 3/18/11  5:01:20 pm3/18/11  5:01:20 pm