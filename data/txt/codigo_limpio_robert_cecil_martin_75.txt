un nombre más acertado podría ser writefield(name) , que nos dice que name es un campo (field) . éste es un ejemplo de palabra clave como nombre de función. con este formato codificamos los nombres de los argumentos en el nombre de la función. por ejemplo, assertequals se podría haber escrito como assertexpectedequalsactual(expected, actual) , lo que mitiga el problema de tener que recordar el orden de los argumentos. sin efectos secundarios los efectos secundarios son mentiras. su función promete hacer una cosa, pero también hace otras cosas ocultas. en ocasiones realiza cambios inesperados en las variables de su propia clase. en ocasiones las convierte en las variables pasadas a la función o a elementos globales del sistema. en cualquier caso, se comete un engaño que suele provocar extrañas combinaciones temporales y dependencias de orden. fíjese en la función del listado 3-6, aparentemente inofensiva. usa un algoritmo estándar para comparar username con password . devuelve true si coinciden y false si hay algún problema, pero también hay un efecto secundario. ¿lo detecta? listado 3-6 uservalidator.java. public class uservalidator { private cryptographer cryptographer; public boolean checkpassword(string username, string password) { user user = usergateway.findbyname(username); if (user != user.null) { string codedphrase = user.getphraseencodedbypassword(); string phrase = cryptographer.decrypt(codedphrase, password); if (“valid password”.equals(phrase)){ session.initialize(); return true; } } return false; } 76