690 capítulo 25 ■ administración de la conﬁ guración 2 5.2 gestión de versiones la gestión de versiones (vm, por las siglas de version management) es el proceso de hacer un seguimiento de las diferentes versiones de los componentes de software o ítems de configuración, y los sistemas donde se usan dichos componentes. también incluye asegurar que los cambios hechos a dichas versiones por los diferentes desarrolladores no in ter fie ran unos con otros. por lo tanto, se puede considerar a la gestión de versiones como el proceso de administrar líneas de código y líneas base. la figura 25.6 ilustra las diferencias entre línea de código y línea base. en esencia, una línea de código es una secuencia de versiones de código fuente con las versiones más recientes en la secuencia derivadas de las versiones anteriores. las líneas de código se aplican regularmente a componentes de sistemas, de manera que existen diferentes ver-siones de cada componente. una línea base es una definición de un sistema específico. por consiguiente, la línea base especifica las versiones del componente que se incluyen en el sistema más una especificación de las librerías usadas, archivos de configuración, etcétera. en la figura 25.6 se observa que diferentes líneas base usan distintas versiones de los componentes de cada línea de código. en el diagrama se sombrearon los recuadros que representan componentes en la definición línea base para indicar que en realidad son referencias a componentes en una línea de código. la línea principal es una secuencia de versiones del sistema desarrolladas a partir de una línea base original. las líneas base pueden especificarse mediante un lenguaje de configuración, lo que permite definir cuáles componentes se incluyen en una versión de un sistema particular. es posible especificar de manera explícita una versión de componente específica (x.1.2, por ejemplo) o simplemente especificar el identificador del componente (x). si usa el identificador, esto significa que en la línea base debe usarse la versión más reciente del componente. las líneas base son importantes porque muchas veces es necesario volver a crear una versión específica de un sistema completo. por ejemplo, una línea de producto puede ejemplificarse de modo que existan versiones de sistema individuales para diferentes clientes. posiblemente se tenga que volver a crear la versión entregada a un cliente espe-cífico si, por ejemplo, dicho cliente reporta bugs en su sistema que deban repararse. para soportar la gestión de versiones, siempre se deben usar herramientas de gestión de versiones (llamadas en ocasiones sistemas de control de versiones o sistemas de control baseline - v1 a b1.2 c1.1 l1 l2 ex1 baseline - v2 a1.3 b1.2 c1.2 l1 l2 ex2 mainlinel1 l2 ex1 ex2codeline (a) codeline (b)codeline (c) librerías y componentes externos c c1.1 c1.2 c1.3b b1.1 b1.2 b1.3a a1.1 a1.2 a1.3 figura 25.6 líneas de código (codelines) y líneas base (baselines) m25_sommerville_ingenieria_1ed_se_681-704.indd  690m25_sommerville_ingenieria_1ed_se_681-704.indd  690 3/18/11  5:16:31 pm3/18/11  5:16:31 pm