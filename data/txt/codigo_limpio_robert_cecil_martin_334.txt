actual == null || expected.equals(actual); } private void findcommonprefixandsuffix() { findcommonprefix(); suffixlength = 0; for (; !suffixoverlapsprefix(); suffixlength++) { if (charfromend(expected, suffixlength) != charfromend(actual, suffixlength) ) break; } } private char charfromend(string s, int i) { return s.charat(s.length() - i - 1); } private boolean suffixoverlapsprefix() { return actual.length() - suffixlength <= prefixlength || expected.length() - suffixlength <= prefixlength; } private void findcommonprefix() { prefixlength = 0; int end = math.min(expected.length(), actual.length()); for (; prefixlength < end; prefixlength++) if (expected.charat(prefixlength) != actual.charat(prefixlength)) break; } private string compact(string s) { return new stringbuilder() .append(startingellipsis()) .append(startingcontext()) .append(delta_start) .append(delta(s)) .append(delta_end) .append(endingcontext()) .append(endingellipsis()) .tostring(); } private string startingellipsis() { return prefixlength > contextlength ? ellipsis : “”; } private string startingcontext() { int contextstart = math.max(0, prefixlength - contextlength); int contextend = prefixlength; return expected.substring(contextstart, contextend); } private string delta(string s) { 335