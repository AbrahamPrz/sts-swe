30 PARTE UNO  EL PROCESO DEL SOFTWARE Los patrones se definen en cualquier nivel de abstracción.2 En ciertos casos, un patrón puede  usarse para describir un problema (y su solución) asociado con un modelo completo del proceso  (por ejemplo, hacer prototipos). En otras situaciones, los patrones se utilizan para describir un problema (y su solución) asociado con una actividad estructural (por ejemplo, planeación) o una acción dentro de una actividad estructural (estimación de proyectos). Ambler [Amb98] ha propuesto un formato para describir un patrón del proceso: Nombre del patrón.  El patrón recibe un nombre significativo que lo describe en el con- texto del proceso del software (por ejemplo, RevisionesTécnicas). Fuerzas.  El ambiente en el que se encuentra el patrón y los aspectos que hacen visible el  problema y afectan su solución. Tipo.   Se especifica el tipo de patrón. Ambler [Amb98] sugiere tres tipos:  1. Patrón de etapa: define un problema asociado con una actividad estructural para el  proceso. Como una actividad estructural incluye múltiples acciones y tareas del tra-bajo, un patrón de la etapa incorpora múltiples patrones de la tarea (véase a conti-nuación) que son relevantes para la etapa (actividad estructural). Un ejemplo de pa-trón de etapa sería EstablecerComunicación. Este patrón incorporaría el patrón de tarea RecabarRequerimientos y otros más.  2. Patrón de tarea: define un problema asociado con una acción o tarea de trabajo de la ingeniería de software y que es relevante para el éxito de la práctica de ingeniería de software (por ejemplo, RecabarRequerimientos es un patrón de tarea).Conjunto de tareas Un conjunto de tareas define el trabajo real por efectuar a  fin de cumplir los objetivos de una acción de ingeniería de  software. Por ejemplo, la indagación (mejor conocida como “recabar los requerimientos”) es una acción importante de la ingeniería de soft-ware que ocurre durante la actividad de comunicación. La meta al recabar los requerimientos es entender lo que los distintos participan-tes desean del software que se va a elaborar. Para un proyecto pequeño y relativamente sencillo, el conjunto de  tareas para la indagación de requerimientos tendrá un aspecto pare-cido al siguiente:  1. Elaborar la lista de participantes del proyecto.  2. Invitar a todos los participantes a una reunión informal. 3. Pedir a cada participante que haga una relación de las caracte- rísticas y funciones que requiere.  4. Analizar los requerimientos y construir la lista definitiva. 5. Ordenar los requerimientos según su prioridad. 6. Identificar las áreas de incertidumbre. Para un proyecto de software más grande y complejo se requerirá  de un conjunto de tareas diferente que quizá esté constituido por las siguientes tareas de trabajo:  1. Hacer la lista de participantes del proyecto.  2. Entrevistar a cada participante por separado a fin de determi- nar los deseos y necesidades generales. 3. Formar la lista preliminar de las funciones y características con  base en las aportaciones del participante.  4. Programar una serie de reuniones para facilitar la elaboración  de las especificaciones de la aplicación.  5. Celebrar las reuniones. 6. Producir en cada reunión escenarios informales de usuario. 7. Afinar los escenarios del usuario con base en la retroalimenta- ción de los participantes.  8. Formar una lista revisada de los requerimientos de los partici- pantes.  9. Usar técnicas de despliegue de la función de calidad para asig- nar prioridades a los requerimientos.  10. Agrupar los requerimientos de modo que puedan entregarse en  forma paulatina y creciente.  11. Resaltar las limitantes y restricciones que se introducirán al sis- tema.  12. Analizar métodos para validar el sistema. Los dos conjuntos de tareas mencionados sirven para “recabar los  requerimientos”, pero son muy distintos en profundidad y formalidad. El equipo de software elige el conjunto de tareas que le permita alcanzar la meta de cada acción con calidad y agilidad.INFORMACIÓN Cita: “La repetición de patrones es  algo muy diferente de la repeti-ción de las partes. En realidad, las distintas partes serán únicas porque los patrones son los mis-mos.” Christopher Alexander 2 Los patrones son aplicables a muchas actividades de la ingeniería de software. El análisis, el diseño y la prueba  de patrones se estudian en los capítulos 7, 9, 10, 12 y 14. Los patrones y “antipatrones” para las actividades de  administración de proyectos se analizan en la parte 4 del libro.PUNTO CLAVE Un formato de patrón proporciona un  medio consistente para describir al patrón. 02Pressman(025-054).indd   3002Pressman(025-054).indd   30 14/1/10   13:36:4514/1/10   13:36:45