cenicienta. al mover el ratón, salían estrellitas del cursor, y descendían a la parte inferior de la pantalla en un campo gravitatorio simulado. cuando kent me enseñó el código, me sorprendió la brevedad de las funciones. estaba acostumbrado a ver programas de swing con funciones que ocupaban kilómetros de espacio vertical. en este programa, las funciones tenían dos, tres o cuatro líneas de longitud. todas eran obvias. todas contaban una historia y cada una llevaba a la siguiente en un orden atractivo. ¡así de breves deberían ser todas las funciones! [12] ¿qué tamaño mínimo deben tener sus funciones? deberían ser más breves que las del listado 3-2. de hecho, el listado 3-2 debería reducirse como el listado 3-3. listado 3-3 htmlutil.java (nueva refactorización). public static string renderpagewithsetupsandteardowns( pagedata pagedata, boolean issuite) throws exception { if (istestpage(pagedata)) includesetupandteardownpages(pagedata, issuite); return pagedata.gethtml(); } bloques y sangrado esto implica que los bloques en instrucciones if , else , while y similares deben tener una línea de longitud que, seguramente, sea la invocación de una función. de esta forma, no sólo se reduce el tamaño de la función, sino que también se añade valor documental ya que la función invocada desde el bloque puede tener un nombre descriptivo. también implica que las funciones no deben tener un tamaño excesivo que albergue estructuras anidadas. por tanto, el nivel de sangrado de una función no debe ser mayor de uno o dos. evidentemente, de esta forma las funciones son más fáciles de leer y entender. hacer una cosa 64