archivos de código. g2: comportamiento evidente no implementado de acuerdo al principio de la mínima sorpresa [105] , una función o clase debe implementar los comportamientos que otro programador esperaría. por ejemplo, imagine una función que traduce el nombre de un día en una enumeración que represente dicho día. day day = daydate.stringtoday(string dayname); esperaríamos que la cadena « monday » se tradujera en day.monday. también esperaríamos la traducción de las abreviaturas habituales y que la función ignorara mayúsculas y minúsculas. cuando un comportamiento obvio no se implementa, los lectores y usuarios del código ya no dependen de su intuición sobre los nombres de las funciones. pierden su confianza en el autor original y se ven obligados a leer los detalles del código. g3: comportamiento incorrecto en los límites parece evidente afirmar que el código debe comportarse de forma correcta. el problema es que no nos damos cuenta de lo complicado que es dicho comportamiento correcto. los programadores suelen crear funciones que esperan que funcionen y confían en su intuición más que en comprobar que el código funciona en todos los casos de límites. no existe sustituto para la meticulosidad. las condiciones de límite, los casos extremos, las excepciones, representan algo que puede confundir a un algoritmo elegante e intuitivo. no dependa de su intuición . busque todas las condiciones de límite y cree pruebas para cada una. g4: medidas de seguridad canceladas chernobyl se derritió porque el director de la central ignoró todos y cada uno de los mecanismos de seguridad. impedían que se realizara un experimento. 364