25.1 ■ administración del cambio 689 del sistema mediante construcciones diarias (o más frecuentes), por lo general se usa un proceso de administración del cambio más sencillo. los problemas y cambios aún deben registrarse, pero los cambios que sólo afectan a componentes y módulos individuales no necesitan valorarse de manera independiente; se transmiten directamente al desarrollador del sistema. éste los acepta u ofrece razones por las que no son necesarios tales cambios. sin embargo, una autoridad independiente, como el arquitecto del sistema, debe valorar y priorizar los cambios que afectan a aquellos módulos del sistema que produjeron dife-rentes equipos de desarrollo. en algunos métodos ágiles, como en la programación extrema, los clientes participan directamente en la decisión de implementar un cambio. cuando proponen un cambio a los requerimientos del sistema, trabajan con el equipo para valorar el efecto de dicho cambio y deciden entonces si éste tendría prioridad sobre las características planeadas para el siguiente incremento del sistema. no obstante, los cambios que implican mejo-ramiento del software se dejan a discreción de los programadores que trabajan en el sistema. la refactorización, en la que el software se mejora de manera continua, no se ve como una carga, sino como parte necesaria del proceso de desarrollo. conforme el equipo de desarrollo modifica los componentes de software, debe man-tener un registro de los cambios hechos a cada componente. algunas veces a esto se le conoce como historial de derivación de un componente. una buena forma de conservar el historial de derivación es en un comentario estandarizado al principio del código fuente del componente (figura 25.5). este comentario debe hacer referencia a la petición de cambio que provocó el cambio en el software. entonces uno puede escribir rutinas sen-cillas que busquen todos los componentes y procesen los historiales de derivación para generar reportes de cambio de componentes. en el caso de documentos, los registros de los cambios incorporados en cada versión se anotan por lo general al frente del docu-mento en una página aparte. esto se discute en el capítulo web sobre documentación. la administración del cambio, por lo general, recibe soporte de herramientas espe-cializadas de software. éstas pueden ser herramientas relativamente sencillas basadas en la web, como bugzilla, que se usa para reportar problemas con muchos sistemas de código abierto. o bien, pueden usarse herramientas más complejas para automatizar todo el proceso de manejar las peticiones de cambio desde la propuesta inicial del cliente hasta la aprobación del cambio.// sicsa project (xep 6087) //// app-system/auth/rbac/user_role//// objeto: currentrole// autor: r. looek// fecha de creación: 13/11/2009//// © st andrews university 2009//// historial de modificación// versión modificador fecha cambio razón// 1.0 j. jones 11/11/2009 agregar encabezado enviado a cm// 1.1 r. looek 13/11/2009 nuevo campo pet. de cambio r07/02 figura 25.5 historia de derivación m25_sommerville_ingenieria_1ed_se_681-704.indd  689m25_sommerville_ingenieria_1ed_se_681-704.indd  689 3/18/11  5:16:30 pm3/18/11  5:16:30 pm