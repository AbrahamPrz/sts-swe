lecturas sugeridas managing software quality and business risk . aun cuando éste es principalmente un libro sobre administración de software, incluye un excelente capítulo (capítulo 4) de modelos de proceso. (m. ould, john wiley and sons ltd, 1999.) process models in software engineering. ofrece una excelente visión de un amplio rango de modelos de proceso de ingeniería de software que se han propuesto. (w. scacchi, encyclopaedia of software engineering, ed. j.j. marciniak, john wiley and sons, 2001.) http:/ /www. ics. uci. edu/ ~wscacchi/ papers/ se-encyc/ process-models-se-encyc. pdf. the rational unified process—an introduction (3rd edition) . éste es el libro más legible que hay disponible sobre rup hasta ahora. krutchen describe bien el proceso, pero sería más deseable ver las dificultades prácticas de usar el proceso. (p. krutchen, addison-wesley, 2003.) ejercicios 2.1. explicando las razones para su respuesta, y con base en el tipo de sistema a desarrollar, sugiera el modelo de proceso de software genérico más adecuado que se use como fundamento para administrar el desarrollo de los siguientes sistemas: un sistema para controlar el antibloqueo de frenos en un automóvilun sistema de realidad virtual para apoyar el mantenimiento de softwareun sistema de contabilidad universitario que sustituya a uno existenteun sistema interactivo de programación de viajes que ayude a los usuarios a planear viajes con el menor impacto ambiental 2.2. explique por qué el desarrollo incremental es el enfoque más efectivo para diseñar sistemas de software empresariales. ¿por qué este modelo es menos adecuado para ingeniería de sistemas de tiempo real? 2.3. considere el modelo de proceso basado en reutilización que se muestra en la figura 2.3. explique por qué durante el proceso es esencial tener dos actividades separadas de ingeniería de requerimientos. 2.4. sugiera por qué, en el proceso de ingeniería de requerimientos, es importante hacer una distinción entre desarrollar los requerimientos del usuario y desarrollar los requerimientos del sistema. 2.5. describa las principales actividades en el proceso de diseño de software y las salidas de dichas actividades. con un diagrama, muestre las posibles relaciones entre las salidas de dichas actividades. 2.6. explique por qué el cambio es inevitable en los sistemas complejos, y mencione ejemplos (además de la creación de prototipos y la entrega incremental) de las actividades de proceso de software que ayudan a predecir los cambios y a lograr que el software por desarrollar sea más resistente al cambio.54 capítulo 2 ■ procesos de software m02_sommerville_ingenieria_1ed_se_027-055.indd  54m02_sommerville_ingenieria_1ed_se_027-055.indd  54 3/18/11  4:45:32 pm3/18/11  4:45:32 pm