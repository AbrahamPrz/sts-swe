346 parte tres administración de la calidad si el lector trabaja para una compañía pequeña, debe tener cuidado con esta filosofía. al entregar un producto suficientemente bueno (defectuoso), corre el riesgo de causar un daño permanente a la reputación de su compañía. tal vez nunca tenga la oportunidad de entregar una versión 2.0 porque los malos comentarios quizá ocasionen que las ventas se desplomen y que la empresa desaparezca. si trabaja en ciertos dominios de aplicación (por ejemplo, software incrustado en tiempo real) o si construye software de aplicación integrado con hardware (como el software automotriz o de telecomunicaciones), entregar software con errores conocidos es una negligencia y deja expuesta a su compañía a litigios costosos. en ciertos casos, incluso, puede ser un delito. ¡nadie quiere tener software suficientemente bueno en los aviones! así que proceda con cautela si piensa que lo “suficientemente bueno” es un atajo que puede resolver los problemas de calidad de su software. tal vez funcione, pero sólo para unos cuantos y en un conjunto limitado de dominios de aplicación. 4 14.3.2 el costo de la calidad el argumento es algo parecido a esto: sabemos que la calidad es importante, pero cuesta tiempo y dinero —demasiado tiempo y dinero— lograr el nivel de calidad en el software que en realidad que-remos. visto así, este argumento parece razonable (véanse los comentarios anteriores de meyer en esta sección). no hay duda de que la calidad tiene un costo, pero la mala calidad también lo tiene —no sólo para los usuarios finales que deban vivir con el software defectuoso, sino tam-bién para la organización del software que lo elaboró y que debe darle mantenimiento—. la pregunta real es ésta: ¿por cuál costo debemos preocuparnos? para responder a esta pregunta debe entenderse tanto el costo de tener calidad como el del software de mala calidad. el costo de la calidad incluye todos los costos en los que se incurre al buscar la calidad o al realizar actividades relacionadas con ella y los costos posteriores de la falta de calidad. para entender estos costos, una organización debe contar con unidades de medición que provean el fundamento del costo actual de la calidad, que identifiquen las oportunidades para reducir di-chos costos y que den una base normalizada de comparación. el costo de la calidad puede dividirse en los costos que están asociados con la prevención, la evaluación y la falla. los costos de prevención incluyen lo siguiente: 1) el costo de las actividades de administración requeridas para planear y coordinar todas las actividades de control y aseguramiento de la ca-lidad, 2) el costo de las actividades técnicas agregadas para desarrollar modelos completos de los requerimientos y del diseño, 3) los costos de planear las pruebas y 4) el costo de toda la capacitación asociada con estas actividades. los costos de evaluación incluyen las actividades de investigación de la condición del pro- ducto la “primera vez” que pasa por cada proceso. algunos ejemplos de costos de evaluación incluyen los siguientes: • el costo de efectuar revisiones técnicas (véase el capítulo 15) de los productos del trabajo de la ingeniería de software. • el costo de recabar datos y unidades de medida para la evaluación (véase el capítulo 23) • el costo de hacer las pruebas y depurar (véanse los capítulos 18 a 21) los costos de falla son aquellos que se eliminarían si no hubiera errores antes o después de enviar el producto a los consumidores. los costos de falla se subdividen en internos y externos. se incurre en costos internos de falla cuando se detecta un error en un producto antes del envío. los costos internos de falla incluyen los siguientes: 4 un análisis útil de los pros y contras del software “suficientemente bueno” se encuentra en [bre02].no tema incurrir en costos significativos por la prevención. esté seguro de que su inversión tendrá un rendimiento excelente.consejo 14pressman(337-353).indd  34614pressman(337-353).indd  346 14/1/10  16:51:3014/1/10  16:51:30