3.5 ■ escalamiento de métodos ágiles 75 denning y sus colaboradores (2008) argumentan que la única forma de evitar los pro- blemas comunes de la ingeniería de software, como los sistemas que no cubren las necesi-dades del cliente y exceden el presupuesto, es encontrar maneras de hacer que los métodos ágiles funcionen para grandes sistemas. leffingwell (2007) discute cuáles prácticas ágiles se escalan al desarrollo de grandes sistemas. moore y spens (2008) reportan su experien-cia al usar un enfoque ágil para desarrollar un gran sistema médico, con 300 desarrollado-res que trabajaban en equipos distribuidos geográficamente. el desarrollo de grandes sistemas de software difiere en algunas formas del desarrollo de sistemas pequeños: 1. los grandes sistemas son, por lo general, colecciones de sistemas separados en comunicación, donde equipos separados desarrollan cada sistema. dichos equipos trabajan con frecuencia en diferentes lugares, en ocasiones en otras zonas horarias. es prácticamente imposible que cada equipo tenga una visión de todo el sistema. en consecuencia, sus prioridades son generalmente completar la parte del sistema sin con-si de rar asuntos de los sistemas más amplios. 2. los grandes sistemas son “sistemas abandonados” (hopkins y jenkins, 2008); esto es, incluyen e interactúan con algunos sistemas existentes. muchos de los requeri-mientos del sistema se interesan por su interacción y, por lo tanto, en realidad no se prestan a la flexibilidad y al desarrollo incremental. aquí también podrían ser relevantes los conflictos políticos y a menudo la solución más sencilla a un pro-blema es cambiar un sistema existente. sin embargo, esto requiere negociar con los administradores de dicho sistema para convencerlos de que los cambios pueden implementarse sin riesgo para la operación del sistema. 3. donde muchos sistemas se integran para crear un solo sistema, una fracción signifi- cativa del desarrollo se ocupa en la configuración del sistema, y no en el desarrollo del código original. esto no necesariamente es compatible con el desarrollo incre-mental y la integración frecuente del sistema. 4. los grandes sistemas y sus procesos de desarrollo por lo común están restringidos por reglas y regulaciones externas, que limitan la forma en que pueden desarrollarse, lo cual requiere de ciertos tipos de documentación del sistema que se va a producir, etcétera. 5. los grandes sistemas tienen un tiempo prolongado de adquisición y desarrollo. es difícil mantener equipos coherentes que conozcan el sistema durante dicho periodo, pues resulta inevitable que algunas personas se cambien a otros empleos y proyectos. 6. los grandes sistemas tienen por lo general un conjunto variado de participantes. por ejemplo, cuando enfermeras y administradores son los usuarios finales de un sistema médico, el personal médico ejecutivo, los administradores del hospital, etcé-tera, también son participantes en el sistema. en realidad es imposible involucrar a todos estos participantes en el proceso de desarrollo. existen dos perspectivas en el escalamiento de los métodos ágiles: 1. una perspectiva de “expansión” (scaling up), que se interesa por el uso de dichos métodos para el desarrollo de grandes sistemas de software que no logran desarro- llarse con equipos pequeños. m03_sommerville_ingenieria_1ed_se_056-081.indd  75m03_sommerville_ingenieria_1ed_se_056-081.indd  75 3/18/11  4:46:25 pm3/18/11  4:46:25 pm