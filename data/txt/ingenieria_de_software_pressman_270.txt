CAPÍTULO 10  DISEÑO EN EL NIVEL DE COMPONENTES 239 10.1.3  Visión relacionada con el proceso La visión orientada a objetos y la tradicional del diseño en el nivel de componentes, presentadas  en las secciones 10.1.1 y 10.1.2, suponen que el componente se diseña desde la nada. Es decir, que se crea un nuevo componente con base en las especificaciones obtenidas del modelo de requerimientos. Por supuesto, existe otro enfoque. En las últimas dos décadas, la comunidad de la ingeniería de software ha puesto el énfasis  en la necesidad de elaborar sistemas que utilicen componentes de software o patrones de di-seño ya existentes. En esencia, a medida que avanza el trabajo de diseño se dispone de un ca-tálogo de diseño probado o de componentes en el nivel de código. Conforme se desarrolla la arquitectura del software, se escogen del catálogo componentes o patrones de diseño y se usan para construir la arquitectura. Como estos componentes fueron construidos teniendo en mente lo reutilizable, se dispone totalmente de la descripción de su interfaz, de las funciones que rea-lizan y de la comunicación y colaboración que requieren. En la sección 10.6 se estudian algunos aspectos importantes de la ingeniería de software basada en componentes. Uno de los elementos clave que conducen al éxito o fraca- so de la ingeniería de estándares basados en componen- tes es su disponibilidad, que en ocasiones recibe el nombre de middleware. El middleware es una colección de componentes de infraestructura que permiten que los componentes del dominio del problema se comuniquen entre sí a través de una red o dentro de un sistema complejo. Los ingenieros de software que deseen usar el desa-rrollo basado en componentes como proceso de software pueden ele-gir entre los estándares siguientes:OMG CORBA-www.corba.org/ Microsoft COM-www.microsoft.com/com/tech/complus. asp Microsoft.NET-http://msdn2.microsoft.com/en-us/ netframework/default.aspx Sun JavaBeans-http://java.sun.com/products/ejb/ Estos sitios web tienen una amplia variedad de métodos de enseñan- za, documentos en limpio, herramientas y recursos generados con dichos estándares importantes de middleware.INFORMACIÓN Estándares y marcos basados en componentes  10.2 D ISEÑO  DE COMPONENTES  BASADOS  EN CLASE Como ya se dijo, el diseño en el nivel de componentes se basa en la información desarrollada  como parte del modelo de requerimientos (capítulos 6 y 7) y se representa como parte del mo-delo arquitectónico (véase el capítulo 9). Cuando se escoge un enfoque de ingeniería orientado al software, el diseño en el nivel de componentes se centra en la elaboración de clases especí-ficas del dominio del problema y en el refinamiento de las clases de infraestructura contenidas en el modelo de requerimientos. La descripción detallada de los atributos, operaciones e inter-faces que emplean dichas clases es el detalle de diseño que se requiere como precursor de la actividad de construcción. 10.2.1  Principios básicos del diseño Hay cuatro principios básicos que son aplicables al diseño en el nivel de componentes y que han sido ampliamente aceptados para la aplicación de la ingeniería de software orientada a objetos. La motivación subyacente para aplicar estos principios es crear diseños que sean más factibles de cambiar, así como reducir la propagación de efectos colaterales cuando se hagan cambios. Estos principios pueden usarse como guía cuando se desarrolle cada componente del soft-ware. Principio Abierto-Cerrado (PAC).   “Un módulo [componente] debe ser abierto par  a la exten- sión pero cerrado para la modificación” [Mar00]. Este enunciado parece ser una contradicción,  pero representa una de las características más importantes de un buen diseño en el nivel de  10Pressman(234-264).indd   23910Pressman(234-264).indd   239 26/1/10   17:33:1826/1/10   17:33:18