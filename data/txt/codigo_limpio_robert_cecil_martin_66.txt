Leer código de arriba a abajo: la regla descendente El objetivo es que el código se lea como un texto de arriba a abajo [14] . Queremos que tras todas las funciones aparezcan las del siguiente nivel de abstracción para poder leer el programa, descendiendo un nivel de abstracción por vez mientras leemos la lista de funciones. Es lo que denomino la regla descendente. Para decirlo de otra forma, queremos leer el programa como si fuera un conjunto de párrafos  TO , en el que cada uno describe el nivel actual de abstracción y hace referencia a los párrafos  TO  posteriores en el siguiente nivel. Para incluir configuraciones y detalles, incluimos configuraciones, después del contenido de la página de prueba, y por último los detalles. Para incluir las configuraciones, incluimos la configuración de  suite si se trata de una  suite , y después la configuración convencional. Para incluir la configuración de  suite ; buscamos la jerarquía principal de la página  SuiteSetUp  y añadimos una instrucción include  con la ruta de dicha página. Para buscar la jerarquía principal… A los programadores les resulta complicado aprender esta regla y crear funciones en un único nivel de abstracción, pero es un truco importante. Es la clave para reducir la longitud de las funciones y garantizar que sólo hagan una cosa. Al conseguir que el código se lea de arriba a abajo, se mantiene la coherencia de los niveles de abstracción. Fíjese en el Listado 3-7 del final del capítulo. Muestra la función testableHtml  modificada de acuerdo a estos principios. Cada función presenta a la siguiente y se mantiene en un nivel de abstracción coherente. Instrucciones Switch 67