34  Capítulo 2 ■ Procesos de software Problemas con el desarrollo incremental Aunque el desarrollo incremental tiene muchas ventajas, no está exento de problemas. La principal causa  de la dificultad es el hecho de que las grandes organizaciones tienen procedimientos burocráticos que han evolucionado con el tiempo y pueden suscitar falta de coordinación entre dichos procedimientos y un proceso iterativo o ágil más informal.  En ocasiones, tales procedimientos se hallan ahí por buenas razones: por ejemplo, pueden existir  procedimientos para garantizar que el software implementa de manera adecuada regulaciones externas (en Estados Unidos, por ejemplo, las regulaciones de contabilidad Sarbanes-Oxley). El cambio de tales procedimientos podría resultar imposible, de manera que los conflictos son inevitables. http://www.SoftwareEngineering-9.com/Web/IncrementalDev/  El desarrollo incremental ahora es en cierta forma el enfoque más común para el desa- rrollo de sistemas de aplicación. Este enfoque puede estar basado en un plan, ser ágil o, más usualmente, una mezcla de dichos enfoques. En un enfoque basado en un plan se identifi-can por adelantado los incrementos del sistema; si se adopta un enfoque ágil, se detectan los primeros incrementos, aunque el desarrollo de incrementos posteriores depende del avance y las prioridades del cliente. Desde una perspectiva administrativa, el enfoque incremental tiene dos problemas: 1. El proceso no es visible. Los administradores necesitan entregas regulares para  medir el avance. Si los sistemas se desarrollan rápidamente, resulta poco efectivo en  términos de costos producir documentos que reflejen cada versión del sistema. 2. La estructura del sistema tiende a degradarse conforme se tienen nuevos incremen- tos. A menos que se gaste tiempo y dinero en la refactorización para mejorar el soft-ware, el cambio regular tiende a corromper su estructura. La incorporación de más cambios de software se vuelve cada vez más difícil y costosa.  Los problemas del desarrollo incremental se tornan particularmente agudos para sis-temas grandes, complejos y de larga duración, donde diversos equipos desarrollan dife-rentes partes del sistema. Los grandes sistemas necesitan de un marco o una arquitectura estable y es necesario definir con claridad, respecto a dicha arquitectura, las responsabili-dades de los distintos equipos que trabajan en partes del sistema. Esto debe planearse por adelantado en vez de desarrollarse de manera incremental. Se puede desarrollar un sistema incremental y exponerlo a los clientes para su comen-tario, sin realmente entregarlo e implementarlo en el entorno del cliente. La entrega y la implementación incrementales significan que el software se usa en procesos operaciona-les reales. Esto no siempre es posible, ya que la experimentación con un nuevo software llega a alterar los procesos empresariales normales. En la sección 2.3.2 se estudian las ventajas y desventajas de la entrega incremental. M02_SOMMERVILLE_INGENIERIA_1ED_SE_027-055.indd   34M02_SOMMERVILLE_INGENIERIA_1ED_SE_027-055.indd   34 3/18/11   4:45:30 PM3/18/11   4:45:30 PM