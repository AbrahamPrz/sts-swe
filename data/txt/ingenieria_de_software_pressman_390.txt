CAPÍTULO 15  TÉCNICAS DE REVISIÓN 359 beneficio sólo después de que éstas han terminado, de que las unidades de medida de la revisión  se han recabado, de que los datos promedio han sido calculados y de que la calidad posterior del software ha sido medida (mediante pruebas). Si regresamos al ejemplo presentado en la sección 15.3.1, se determinó que la densidad pro- medio del error para los modelos de requerimientos era de 0.6 errores por página. Se reveló que el esfuerzo requerido para corregir un error menor en el modelo era de 4 horas-hombre. Se vio que el esfuerzo necesario para un error mayor en los requerimientos era de 18 horas-hombre. Al estudiar los datos recabados se observa que los errores menores ocurrieron con una frecuen-cia cercana a 6 veces más que los errores mayores. Por tanto, puede estimarse que el esfuerzo promedio para detectar y corregir un error en los requerimientos durante la revisión es alrededor de 6 horas-hombre. Los errores relacionados con los requerimientos no detectados durante las pruebas requieren  un promedio de 45 horas-hombre para encontrarse y corregirse (no hay datos disponibles acerca de la severidad relativa del error). Con estos promedios se obtiene lo siguiente: Esfuerzo ahorrado por error /H11005  E pruebas /H11002 Erevisiones  45 /H11002 6 /H11005 30 horas-hombre/error Como durante la revisión del modelo de requerimientos se encontraron 22 errores, se tendrá un ahorro cercano a 660 horas-hombre en el esfuerzo dedicado a las pruebas. Y esto se refiere sólo a los errores relacionados con los requerimientos. Al beneficio general se suman aquellos aso-ciados con el diseño y el código. El esfuerzo total conduce a ciclos de entrega más cortos y a un mejor tiempo para llegar al mercado. En su libro sobre la revisión por pares, Karl Wiegers [Wie02] analiza datos procedentes de  anécdotas de compañías grandes que han utilizado inspecciones (un tipo relativamente formal  de revisión técnica) como parte de sus actividades de control de calidad del software. Hewlett Packard reportó un rendimiento de 10 a 1 sobre la inversión gracias a las inspecciones y afirmó que la entrega real del producto se aceleró en un promedio de 1.8 meses-calendario. AT&T in-dicaba que las inspecciones habían reducido el costo general de los errores de software en un factor de 10, que la calidad había mejorado en un orden de magnitud y que la productividad se había incrementado 14 por ciento. Otras empresas reportaban beneficios similares. Las revisio-nes técnicas (en diseño y otras actividades) generan una buena relación costo-beneficio y en verdad ahorran tiempo. Pero para muchos profesionales del software, esta afirmación va contra la intuición. “Las  revisiones toman tiempo”, dicen, “y no tenemos tiempo que perder…”. Afirman que el tiempo es precioso en cada proyecto de software y que la actividad de revisar “todo producto del trabajo con detalle” absorbe demasiado. Los ejemplos presentados en esta sección indican otra cosa. Lo más importante es que los  datos de la industria sobre revisiones del software se han recabado durante más de dos décadas y se resumen cualitativamente en las gráficas que aparecen en la figura 15.4 En la figura, el trabajo efectuado cuando se utilizan revisiones se refleja pronto en el desa- rrollo de un incremento de software, pero esta inversión temprana paga dividendos debido a que se reduce el esfuerzo necesario para hacer pruebas y correcciones. De igual importancia es que la fecha de entrega del desarrollo con revisiones ocurre antes que la que se hace sin revi-siones. ¡Las revisiones no quitan tiempo, lo ahorran!  15.4 R EVISIONES : ESPECTRO  DE FORMALIDAD Las revisiones técnicas deben aplicarse con un nivel de formalidad apropiado para el producto que se va a elaborar, para el plazo que tiene el proyecto y para el personal que realice el trabajo.  15Pressman(354-367).indd   35915Pressman(354-367).indd   359 14/1/10   16:53:4414/1/10   16:53:44