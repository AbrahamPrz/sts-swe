708 capítulo 26 ■ mejora de procesos el proceso de desarrollo a menudo tiene lugar a lo largo de varios años, el equipo de desarrollo es volátil. puede cambiar por completo durante la vida del proyecto. sin embargo, para proyectos pequeños, en los que sólo existen en el equipo algunos miembros, la calidad del equipo de desarrollo es más importante que el proceso de desa-rrollo utilizado. por consiguiente, el manifiesto ágil proclama la importancia de la gente por encima de los procesos. si el equipo tiene un alto nivel de habilidad y experiencia, es probable que la calidad del producto sea alta, independientemente del proceso utilizado. si el equipo carece de experiencia y habilidad, un buen proceso puede limitar el daño, pero, en sí mismo, no llevará a un software de alta calidad. donde los equipos son reducidos, la buena tecnología de desarrollo es particularmente importante. el equipo pequeño no puede dedicar mucho tiempo a tediosos procedimientos administrativos. los integrantes del equipo pasan la mayor parte de su tiempo diseñando y programando el sistema; por lo tanto, las buenas herramientas afectan significativamente su productividad. para proyectos grandes es esencial un nivel básico de tecnología de desarrollo para la gestión de la información. no obstante, paradójicamente, las herramien-tas sofisticadas de software son menos importantes en los proyectos grandes. los miem-bros del equipo dedican una menor proporción de su tiempo a las actividades de desarrollo y más tiempo para comunicarse y entender otras partes del sistema. las herramientas de desarrollo no hacen diferencia en esto. sin embargo, las herramientas web 2.0 que soportan las comunicaciones, tales como los wikis y blogs, pueden mejorar de manera sustancial la comunicación entre los miembros de los equipos distribuidos. sin considerar los factores de personal, procesos o herramientas, si un proyecto tiene un presupuesto inadecuado o se planea con un calendario de entregas poco realista, la ca li-dad del producto se verá afectada. un buen proceso requiere de recursos para una im ple-mentación efectiva. si dichos recursos son insuficientes, el proceso no puede ser real mente efectivo. si los recursos son inadecuados, sólo personal de excelencia puede salvar el pro-yecto. aun así, si el déficit es demasiado grande, la calidad del producto se degradará. al no haber suficiente tiempo para el desarrollo, es probable que el software entregado tenga funcionalidad reducida o niveles más bajos de fiabilidad o rendimiento. con demasiada frecuencia, la causa real de los problemas en la calidad del software no es una gestión deficiente, procesos inadecuados o capacitación de escasa calidad. más bien, es el hecho de que las organizaciones deben competir para sobrevivir. para ganar un contrato, una compañía puede subestimar el esfuerzo requerido o prometer la entrega rápida de un sistema. con la intención de cumplir estos compromisos, tal vez acuerde un calendario de desarrollo poco realista. en consecuencia, la calidad del software se ve afectada de manera negativa. 2 6.1 el proceso de mejora de procesos en el capítulo 2 se introdujo la idea general de un proceso de software como una secuen-cia de actividades que, cuando se ejecuta, conduce a la producción de un sistema de software. se describieron procesos genéricos, como el modelo en cascada y el desarrollo basado en reutilización; además, se estudiaron las actividades más importantes del pro-ceso. dichos procesos genéricos se ejemplifican dentro de una organización para crear el proceso particular que se utiliza en el desarrollo del software. los procesos de software pueden ser observados en todas las organizaciones, des-de compañías integradas por una sola persona hasta grandes multinacionales. dichos m26_sommerville_ingenieria_1ed_se_705-732.indd  708m26_sommerville_ingenieria_1ed_se_705-732.indd  708 3/18/11  5:15:50 pm3/18/11  5:15:50 pm