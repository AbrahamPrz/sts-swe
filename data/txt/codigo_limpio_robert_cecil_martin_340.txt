hacer que sea correcta describiremos serialdate de arriba a abajo para mejorarla en nuestro recorrido. aunque no lo veamos en este análisis, ejecutaré todas las pruebas de unidad de jcommon , incluida mi prueba de unidad mejorada para serialdate , con todos los cambios efectuados. por ello, tenga la seguridad de que todos los cambios que vea funcionan para jcommon . en la línea 1 vemos abundantes comentarios sobre información de licencia, derechos de autor, autores e historial de cambios. asumo que hay ciertos aspectos legales que mostrar, por lo que los derechos de autor y las licencias deben conservarse. por otra parte, el historial de cambios es una rémora de la década de 1960. ahora tenemos herramientas de control de código fuente que se encargan de ello. hay que eliminar este historial [c1]. la lista de importación que comienza en la línea 61 se puede reducir por medio de java.text.* y java.util.* . [j1] no me convence el formato html del javadoc (línea 67). un archivo fuente con más de un lenguaje me parece un problema. este comentario tiene cuatro lenguajes: java, español, javadoc y html [g1]. con tantos lenguajes se hace difícil mantener la coherencia. por ejemplo, la ubicación de las líneas 71 y 72 se pierde al generar el javadoc y además, ¿quién quiere ver <ul> y <li> en el código fuente? una estrategia más acertada consiste en rodear el comentario con <pre> para que el formato del código fuente se conserve en el javadoc [96] . la línea 86 es la declaración de la clase. ¿por qué se le asigna el nombre serialdate ? ¿qué sentido tiene la palabra serial ? ¿es porque la clase se deriva de serializable ? parece improbable. basta de adivinanzas. sé por qué (o al menos eso creo) se usa la palabra serial . la clave se encuentra en las constantes serial_lower_bound y serial_upper_bound de las líneas 98 y 101. y una clave todavía mejor es el comentario de la línea 830. el nombre de la clase es serialdate ya que se implementa con un número de serie, que parece ser el número de días desde el 30 de diciembre de 1899. 341