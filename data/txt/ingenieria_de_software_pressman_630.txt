capítulo 26 estimación para proyectos de software 599 desafortunadamente, la primera opción, aunque atractiva, no es práctica. las estimaciones de costo deben proporcionarse por anticipado. no obstante, debe reconocer que mientras más espere, más conocerá, y mientras más conozca, menos probabilidades tendrá de cometer erro-res serios en sus estimaciones. la segunda opción puede funcionar razonablemente bien si el proyecto actual es muy similar a esfuerzos anteriores y otros factores que influyen en el proyecto (por ejemplo, el cliente, con-diciones del negocio, entorno de ingeniería de software, fechas límite) son aproximadamente equivalentes. desafortunadamente, la experiencia pasada no siempre es buen indicador de re-sultados futuros. las opciones restantes son enfoques viables para la estimación del proyecto de software. de manera ideal, las técnicas anotadas para cada opción deben aplicarse en cascada y cada una es una comprobación cruzada para las demás. las técnicas de descomposición tienen un enfoque de “divide y vencerás” para la estimación del proyecto. al descomponer un proyecto en funcio-nes principales y actividades de ingeniería de software relacionadas, la estimación de costo y esfuerzo puede realizarse en forma escalonada. los modelos de estimación empírica pueden usarse para complementar las técnicas de descomposición y ofrecer un enfoque de estimación potencialmente valioso por derecho propio. un modelo se basa en la experiencia (datos histó-ricos) y toma la forma d /h11005 f (v i) donde d es uno de los valores estimados (por ejemplo, esfuerzo, costo, duración del proyecto) y vi son parámetros independientes seleccionados (por ejemplo, loc o pf estimadas). las herramientas de estimación automatizadas implementan una o más técnicas de descom- posición o modelos empíricos y proporcionan una atractiva opción para estimar. en tales siste-mas se describen las características de la organización de desarrollo (por ejemplo, experiencia, entorno) y el software que se va a desarrollar. las estimaciones de costo y esfuerzo se infieren de dichos datos. cada una de las opciones de estimación de costo del software viables sólo es tan buena como los datos históricos usados para generar la estimación. si no existen datos históricos, el cálculo descansa sobre un cimiento muy inseguro. en el capítulo 25 se examinan las características de algunas de las métricas de software que proporcionan la base para los datos de estimación históricos. 26.6 t écnicas de descomposición la estimación del proyecto de software es una forma de resolución de problemas y, en la mayo-ría de los casos, el problema por resolver; es decir, desarrollar una estimación de costo y es-fuerzo para un proyecto de software es muy complejo como para considerarse en una sola pieza. por esta razón, debe descomponerse el problema y volver a caracterizarlo como un con-junto de problemas más pequeños (y, esperanzadoramente, más manejables). en el capítulo 24, el enfoque de descomposición se analizó desde dos puntos de vista dife- rentes: descomposición del problema y descomposición del proceso. la estimación usa una o ambas formas de división. pero antes de hacer una estimación, debe entenderse el ámbito del software que se va a construir y generar una estimación de su “tamaño”. 26.6.1 dimensionamiento del software la precisión de una estimación de proyecto de software se basa en algunas cosas: 1) el grado en el que se estimó adecuadamente el tamaño del producto que se va a construir, 2) la habilidad para traducir la estimación de tamaño en esfuerzo humano, tiempo calendario y dinero (una cita: “es muy difícil hacer una defen- sa vigorosa, plausible y arriesgada de una estimación que se infiera sin método cuan-titativo, apoyada por pocos datos y certificada principalmen-te por las corazonadas de los gerentes.” fred brooks punto clave el “tamaño” del software que se va a construir puede estimarse usando una medida directa, loc, o indirecta, pf . 26pressman(593-619).indd  59926pressman(593-619).indd  599 21/1/10  10:55:5521/1/10  10:55:55