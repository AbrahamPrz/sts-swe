428 PARTE TRES  ADMINISTRACIÓN DE LA CALIDAD de modo doble es indicio de incompatibilidad pareada o de interacciones dañinas entre dos paráme- tros de prueba. Fallos multimodo. Los arreglos ortogonales [del tipo mostrado] sólo pueden garantizar la detec- ción de fallos de modo individual y doble. No obstante, muchos fallos multimodo también son de-tectables por estas pruebas. En [Pha89] se puede encontrar un análisis detallado de la prueba de arreglo ortogonal.Caso de pruebaParámetros de prueba P1 P2 P3 P4 1 2 3 3 1 2 2 3 11 2 3 2 3 1 3 1 21 2 3 1 2 3 1 2 31 1 1 2 2 2 3 3 31 2 3 4 5 6 7 8 9FIGURA 18.10 Un arreglo  ortogonal L9 6 Las herramientas que se mencionan aquí no representan un respaldo, sino una muestra de las herramientas que  existen en esta categoría. En la mayoría de los casos, los nombres de las herramientas son marcas registradas  por sus respectivos desarrolladores.Objetivo: Auxiliar al equipo de software en el desarrollo  de un conjunto completo de casos de prueba tanto para  prueba de caja negra como de caja blanca. Mecánica: Estas herramientas se clasifican en dos categorías  amplias: las herramientas de prueba estáticas y las herramientas de prueba dinámicas. En la industria se utilizan tres diferentes tipos de herramientas de prueba estáticas: herramientas de prueba basadas en código, lenguajes de prueba especializados y herramientas de prueba basadas en requerimientos. Las primeras aceptan código fuente como entrada y realizan algunos análisis que dan como resul-tado la generación de casos de prueba. Los lenguajes de prueba especializados (por ejemplo, ATLAS) permiten al ingeniero de soft-ware escribir especificaciones de prueba detalladas que describen cada caso de prueba y la logística para su ejecución. Las herramien-tas de prueba basadas en requerimientos aíslan requerimientos de usuario específicos y sugieren casos de prueba (o clases de pruebas) que revisarán los requerimientos. Las herramientas de prueba dinámi-cas interactúan con un programa en ejecución, comprueban la cober-tura de ruta, prueban las afirmaciones acerca del valor de variables específicas e instrumentan el flujo de ejecución del programa.Herramientas representativas: 6 McCabeTest, desarrollada por McCabe & Associates (www. mccabe.com), implementa una variedad de técnicas de prueba de trayectoria derivadas de una valoración de complejidad ciclo-mática y de otras mediciones de software. TestWorks, desarrollada por Software Research, Inc. (www.soft. com/Products), es un conjunto completo de herramientas de prueba automatizadas que auxilia en el diseño de casos de prue-ba para software desarrollado en C/C++ y Java, y que proporcio-na apoyo para pruebas de regresión. T-VEC Test Generation System, desarrollada por T-VEC Technologies  (www.t-vec.com), es un conjunto de herramientas que sopor-tan pruebas de unidad, integración y validación al asistir en el diseño de casos de prueba, usando la información contenida en una especificación de requerimientos OO. e-TEST Suite, desarrollada por Empirix, Inc. (www.empirix.com),  abarca un conjunto completo de herramientas para probar  webapps, incluidas herramientas que auxilian en el diseño de  casos de prueba y planificación de pruebas.HERRAMIENTAS  DE SOFTWARE Diseño de casos de prueba 18Pressman(411-436).indd   42818Pressman(411-436).indd   428 21/1/10   10:58:5921/1/10   10:58:59