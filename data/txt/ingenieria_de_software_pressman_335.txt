304 PARTE DOS  MODELADO de abstracción elevado) hasta los subproblemas más pequeños (niveles más bajos de  abstracción).  2. Determinar si se ha desarrollado un lenguaje del patrón confiable para el do- minio del pr oblema. Como se dijo en la sección 12.1.4, un lenguaje del patrón se di- rige a problemas asociados con un dominio específico de la aplicación. El equipo de software CasaSegura buscaría un lenguaje de patrón desarrollado específicamente para productos para la seguridad del hogar. Si no se encontrara ese nivel de especificidad del lenguaje del patrón, el equipo dividiría el problema del software de CasaSegura en una  serie de dominios generales del problema (de vigilancia de dispositivos digitales, de in-terfaz de usuario, de administración de video digital) y en la búsqueda de lenguajes de  patrón apropiados.  3. A partir de un problema amplio, determinar si para el mismo se dispone de  uno o más patr ones arquitectónicos. Si existe un patrón arquitectónico, hay que  asegurarse de estudiar todos los patrones colaboradores. Si el patrón es apropiado, debe adaptarse la solución del diseño propuesta y elaborar un elemento del modelo del diseño que lo represente en forma adecuada. Como se dijo en la sección 12.2.2, un pro-blema amplio para la webapp CasaSeguraAsegurada.com se aborda con un patrón  ComercioElectrónico. Éste sugerirá una arquitectura específica para enfrentar los re- querimientos del comercio electrónico.  4. Con el uso de colaboraciones provistas para el patrón arquitectónico, deben  estudiarse los pr oblemas en el nivel de subsistema o componente, y buscar  los patrones más apropiados para enfrentarlos. Tal vez sea necesario buscar en  varios depósitos de patrones, así como en la lista de aquellos que correspondan a la so-lución arquitectónica. Si se encuentra un patrón apropiado, hay que adaptar la solución del diseño propuesta y construir un elemento del modelo del diseño que lo represente  de manera adecuada. Hay que asegurarse de aplicar el paso 7.  5. Repetir los pasos 2 a 5 hasta que se hayan resuelto todos los problemas am- plios. Esto implica comenzar con el panorama general y elaborarlo para resolver pro- blemas en niveles cada vez más detallados.  6. Si los problemas de diseño de la interfaz de usuario han sido aislados (éste es  el caso casi siempr e), buscar los muchos depósitos de patrones de diseño de  la interfaz de usuario para encontrar patrones apropiados. Se procede en forma  similar a los pasos 3, 4 y 5.  7. Sin importar su nivel de abstracción, si resulta promisorio un lenguaje de pa-tr ón o un depósito de patrones o un patrón individual, hay que comparar el  problema por resolver con el patrón o patrones presentados. Debe asegurarse de estudiar el contexto y las fuerzas para garantizar que el patrón, en efecto, da una so- lución factible para el problema.  8. Asegurarse de refinar el diseño a medida que se obtiene de los patrones, con el empleo de criterios de calidad como guía. A unque este enfoque del diseño es de arriba abajo, las soluciones del diseño en la vida real a  veces son más complejas. Gillis [Gil06] comenta al respecto lo siguiente: Los patrones de diseño que se manejan en la ingeniería de software deben usarse en forma deductiva  y racionalista. De modo que cuando se tiene el problema o requerimiento general X y el patrón de diseño Y resuelve X, entonces utilice Y. Pero cuando reflexiono en mi propio proceso —y tengo razones para pensar que no soy el único—, observo que es más orgánico que eso, más inductivo que deductivo, más de abajo hacia arriba que de arriba abajo.¿Cuáles son las tareas  requeridas para crear un diseño basado en patrones?? 12Pressman(295-316).indd   30412Pressman(295-316).indd   304 14/1/10   16:23:3614/1/10   16:23:36