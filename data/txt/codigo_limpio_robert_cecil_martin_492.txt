345 346 /** 347 * devuelve true si esta serialdate representa la misma fecha que la 348 * serialdate especificada. 349 * 350 * @param other la fecha con la que se compara. 351 * 352 * @return <code>true</code> si esta serialdate representa la misma fecha 353 * que la serialdate especificada. 354 */ 355 public boolean isafter(final serialdate other) { 356 return (this.serial > other.toserial()); 357 } 358 359 /** 360 * devuelve true si esta serialdate representa la misma fecha que la 361 * serialdate especificada. 362 * 363 * @param other la fecha con la que se compara. 364 * 365 * @return <code>true</code> si esta serialdate representa la misma fecha 366 * que la serialdate especificada. 367 */ 368 public boolean isonorafter(final serialdate other) { 369 return (this.serial >= other.toserial()); 370 } 371 372 /** 373 * devuelve <code>true</code> si {@link serialdate} se encuentra en el 374 * intervalo especificado (inclusive). el orden de fecha de d1 y d2 no es 375 * importante. 376 * 377 * @param d1 una fecha límite para el rango. 378 * @param d2 la otra fecha límite para el rango. 379 * 380 * @return un valor booleano. 381 */ 382 public boolean isinrange(final serialdate d1, final serialdate d2) { 383 return isinrange(d1, d2, serialdate.include_both); 384 } 385 386 /** 387 * devuelve true si esta serialdate se encuentra en el intervalo 493