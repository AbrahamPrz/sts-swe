345 346 /** 347 * Devuelve true si esta SerialDate representa la misma fecha que la 348 * SerialDate especificada. 349 * 350 * @param other la fecha con la que se compara. 351 * 352 * @return <code>true</code> si esta SerialDate representa la misma fecha 353 * que la SerialDate especificada. 354 */ 355 public boolean isAfter(final SerialDate other) { 356 return (this.serial > other.toSerial()); 357 } 358 359 /** 360 * Devuelve true si esta SerialDate representa la misma fecha que la 361 * SerialDate especificada. 362 * 363 * @param other la fecha con la que se compara. 364 * 365 * @return <code>true</code> si esta SerialDate representa la misma fecha 366 * que la SerialDate especificada. 367 */ 368 public boolean isOnOrAfter(final SerialDate other) { 369 return (this.serial >= other.toSerial()); 370 } 371 372 /** 373 * Devuelve <code>true</code> si {@link SerialDate} se encuentra en el 374 * intervalo especificado (INCLUSIVE). El orden de fecha de d1 y d2 no es 375 * importante. 376 * 377 * @param d1 una fecha límite para el rango. 378 * @param d2 la otra fecha límite para el rango. 379 * 380 * @return Un valor booleano. 381 */ 382 public boolean isInRange(final SerialDate d1, final SerialDate d2) { 383 return isInRange(d1, d2, SerialDate.INCLUDE_BOTH); 384 } 385 386 /** 387 * Devuelve true si esta SerialDate se encuentra en el intervalo 493