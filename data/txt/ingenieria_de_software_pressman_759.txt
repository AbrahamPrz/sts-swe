728 apéndice 1 introducción a uml una relación de dependencia representa otra conexión entre clases y se indica mediante una línea punteada (con flechas opcionales en los extremos y con etiquetas opcionales). una clase depende de otra si los cambios en la segunda clase pueden requerir cambios en la primera. una asociación de una clase con otra automáticamente indica una dependencia. no se necesitan líneas punteadas entre clases si ya existe una asociación entre ellas. sin embargo, para una relación transitoria (es decir, una clase que no mantiene alguna conexión de largo plazo con otra, sino que usa dicha clase de manera ocasional), debe dibujarse una línea punteada desde la primera clase hasta la segunda. por ejemplo, en la figura a1.2, la clase thoroughbred usa la clase date (fecha) siempre que se invoca su método getcurrentage(); por eso la dependencia se etiqueta “usa”. la multiplicidad de un extremo de una asociación significa el número de objetos de dicha clase que se asocia con la otra clase. una multiplicidad se especifica mediante un entero no negativo o mediante un rango de enteros. una multiplicidad especificada por “0..1” significa que existen 0 o 1 objetos en dicho extremo de la asociación. por ejemplo, cada persona en el mundo tiene un número de seguridad social o no lo tiene (especialmente si no son ciudadanos estado-unidenses); por tanto, una multiplicidad de 0..1 podría usarse en una asociación entre una clase person y una clase socialsecuritynumber (número de seguridad social) en un diagrama de clase. una multiplicidad que se especifica como “1...*” significa uno o más, y una multiplicidad especificada como “0...*” o sólo “*” significa cero o más. un * se usa como la multiplicidad en el extremo ownedobject de la asociación con la clase person en la figura a1.2, porque una person puede poseer cero o más objetos. si un extremo de una asociación tiene multiplicidad mayor que 1, entonces los objetos de la clase a la que se refiere en dicho extremo de la asociación probablemente se almacenan en una colección, como un conjunto o lista ordenada. también podría incluirse dicha clase colección en sí misma en el diagrama uml, pero tal clase por lo general queda fuera y se supone, de ma-nera implícita, que está ahí debido a la multiplicidad de la asociación. una agregación es un tipo especial de asociación que se indica mediante un diamante hueco en un extremo del ícono. ello indica una relación “entero/parte”, en la que la clase a la que apunta la flecha se considera como una “parte” de la clase en el extremo diamante de la asocia-ción. una composición es una agregación que indica fuerte propiedad de las partes. en una composición, las partes viven y mueren con el propietario porque no tienen papel en el sistema de software independiente del propietario. vea la figura a1.3 para ejemplos de agregación y composición. una universidad tiene una agregación de objetos edificio, que representan los edificios que constituyen el campus. la universidad también tiene una colección de cursos. si la universidad quebrara, los edificios todavía existirían (si se supone que la universidad no se destruye física-mente) y podría usar otras cosas, pero un objeto curso no tiene uso fuera de la universidad en la cual se ofrece. si la universidad deja de existir como una entidad empresarial, el objeto curso ya no sería útil y, por tanto, también dejaría de existir. otro elemento común de un diagrama de clase es una nota, que se representa mediante una caja con una esquina doblada y se conecta a otros íconos mediante una línea punteada. puede  {debe tener lugar en un ediﬁcio}curso universidad ediﬁcio* *figura a1.3 relación entre universidades, cursos y edificios 33pressman(725-742)app1.indd  72833pressman(725-742)app1.indd  728 20/1/10  19:01:4820/1/10  19:01:48