* * @return el día del mes. */ public int getdayofmonth() { return dayofmonth; } estos comentarios son tan inservibles que aprendemos a ignorarlos. al leer el código, la vista los salta. con el tiempo, los comentarios empiezan a mentir cuando cambia el código que les rodea. el primer comentario del listado 4-4 parece correcto [25] . explica por qué se ignora el bloque catch , pero el segundo comentario sobra. parece que el programador estaba tan frustrado con crear bloques try/catch en la función que necesitaba explotar. listado 4-4 startsending. private void startsending() { try { dosending(); } catch(socketexception e) { // normal, alguien ha detenido la solicitud. } catch(exception e) { try { response.add(errorresponder.makeexceptionstring(e)); response.closeall(); } catch(exception e1) { //¡un respiro! } } } en lugar de explotar en un comentario sin sentido, el programador debería haber sabido que su frustración se podría aliviar mejorando la estructura del código. tendría que haber centrado su energía en extraer el último bloque try/catch en una función independiente, como muestra el 101