562  Capítulo 20 ■ Software embebido LECTURAS SUGERIDAS Software Engineering for Real-Time Systems. Escrito desde una perspectiva de ingeniería más que  de las ciencias de la computación, este libro es una excelente guía práctica para la ingeniería de los sistemas de tiempo real. Tiene amplia cobertura de los conflictos de hardware, así que es un acertado complemento al libro de Burns y Wellings (véase la siguiente obra citada). (J. Cooling, Addison-Wesley, 2003.) Real-time Systems and Programming Language: Ada, Real-time Java and C/Real-time POSIX,  4th edition. Un extraordinario y completo texto que brinda una vasta cobertura de todos los aspectos de los sistemas de tiempo real. (A. Burns y A. Wellings, Addison-Wesley, 2009.) “Trends in Embedded Software Engineering”. Este artículo sugiere que el desarrollo orientado por  modelo (como se estudió en el capítulo 5 de este libro), se convertirá en un importante enfoque para el desarrollo de sistemas embebidos. Éste es parte de un número especial sobre los sistemas embebidos, y usted también descubrirá que otros artículos son lecturas útiles. ( IEEE Software,  26 (3), mayo-junio de 2009.) http:/ /dx. doi. org/ 10. 1109/ MS. 2009. 80. EJERCICIOS  20.1. Con ejemplos, explique por qué los sistemas de tiempo real por lo general tienen que implementarse mediante procesos concurrentes.  20.2. Identifique posibles estímulos y respuestas esperadas para un sistema embebido que controle un refrigerador o una lavadora domésticos.  20.3. Con el enfoque basado en estado para modelado, como se estudió en la sección 20.1.1, modele la operación de un sistema de software embebido para un sistema de correo de voz incluido en una línea telefónica fija. Éste debe mostrar el número de mensajes grabados en una pantalla LED y permitir al usuario marcar números telefónicos y escuchar los mensajes grabados.  20.4. Explique por qué un enfoque orientado a objetos para el desarrollo de software puede no ser adecuado para sistemas de tiempo real.  20.5. Muestre cómo podría usarse el patrón de Control Ambiental como la base del diseño de un sistema para controlar la temperatura en un invernadero. La temperatura debe estar entre 10 y 30 grados Celsius. Si cae por abajo de 10 grados, debe encenderse el sistema de calefacción; si rebasa los 30, deben abrirse automáticamente las ventanas.  20.6. Diseñe una arquitectura de proceso para un sistema de monitorización ambiental que recopile datos de un conjunto de sensores de calidad del aire colocados alrededor de la ciudad. Hay 5,000 sensores organizados en 100 vecindarios. Cada sensor debe consultarse cuatro veces por segundo. Cuando más del 30% de los sensores en un vecindario particular indiquen que la calidad del aire está por abajo de un nivel aceptable, se activan luces de advertencia locales. Todos los sensores envían las lecturas a una computadora central, la cual genera reportes cada 15 minutos sobre la calidad del aire en la ciudad. M20_SOMMERVILLE_INGENIERIA_1ED_SE_537-564.indd   562M20_SOMMERVILLE_INGENIERIA_1ED_SE_537-564.indd   562 3/18/11   5:05:51 PM3/18/11   5:05:51 PM