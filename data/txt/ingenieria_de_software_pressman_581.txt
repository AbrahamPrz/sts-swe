550 PARTE TRES  ADMINISTRACIÓN DE LA CALIDAD Número de hijos (NDH) y profundidad del árbol de herencia (PAH).17 Como se men- cionó en el capítulo 19, los métodos de superclase tendrán que volverse a probar para cada  subclase.  23.7 M ÉTRICAS  PARA  MANTENIMIENTO Todas las métricas de software presentadas en este capítulo pueden usarse para el desarrollo de nuevo software y para el mantenimiento del software existente. Sin embargo, se han propuesto métricas diseñadas explícitamente para actividades de mantenimiento. IEEE Std. 982.1-1988 [IEE93] sugiere un índice de madurez de software (IMS) que proporcione  un indicio de la estabilidad de un producto de software (con base en cambios que ocurran para cada liberación del producto). Para ello, se determina la siguiente información: M T /H11005 número de módulos en la liberación actual  Fc /H11005 número de módulos en la liberación actual que cambiaron  Fa /H11005 número de módulos en la liberación actual que se agregaron  Fd /H11005 número de módulos de la liberación anterior que se borraron en la liberación ac- tual El índice de madurez del software se calcula de la forma siguiente: IMS /H11005 MT – (Fa /H11001 Fc /H11001 Fd) MT Conforme el IMS tiende a 1.0, el producto comienza a estabilizarse. El IMS también puede usarse como una métrica para planificar actividades de mantenimiento de software. El tiempo medio para producir una liberación de un producto de software puede correlacionarse con el IMS, y es posible desarrollar modelos empíricos para esfuerzo de mantenimiento. 17 Vea la sección 23.3.3 para una descripción del NDH y de la PAH. 18 Las herramientas que se mencionan aquí no representan un respaldo, sino una muestra de las herramientas en  esta categoría. En la mayoría de los casos, los nombres de las herramientas son marcas registradas por sus res-pectivos desarrolladores.Objetivo: Auxiliar a los ingenieros del software a desa- rrollar métricas significativas que valoren los productos  operativos producidos durante el modelado de análisis y diseño, la generación de código fuente y las pruebas. Mecánica: Las herramientas en esta categoría abarcan un amplio  abanico de métricas y se implementan como una aplicación indepen-diente o (más comúnmente) como funcionalidad que existe dentro de las herramientas para análisis y diseño, codificación o pruebas. En la mayoría de los casos, las herramientas de métricas analizan una representación del software (por ejemplo, un modelo UML o código fuente) y desarrollan como resultado una o más métricas. Herramientas representativas: 18 Krakatau Metrics, desarrollada por Power Software (www.power- software.com/products), calcula métricas de complejidad,  Halstead y otras relacionadas para C/C++ y Java.Metrics4C, desarrollada por +1 Software Engineering (www.plus- one.com/Metrics4C_fact_sheet.html), calcula una variedad de métricas arquitectónicas, de diseño y orientadas a código, así como métricas orientadas a proyecto. Rational Rose, distribuida por IBM (www.304.ibm.com/ jct03001c/software/awdtools/developer/rose/ ), es un  amplio conjunto de herramientas para modelado UML que incor-pora algunas características de análisis de métricas. RSM, desarrollada por M-Squared Technologies (msquaredtech- nologies.com/m2rsm/index.html), calcula una amplia variedad de métricas orientadas a código para C, C++ y Java. Understand, desarrollada por Scientific Toolworks, Inc. (www.sci- tools.com), calcula métricas orientadas a código para varios lenguajes de programación.HERRAMIENTAS  DE SOFTWARE Métricas de producto 23Pressman(526-552).indd   55023Pressman(526-552).indd   550 19/1/10   23:29:5819/1/10   23:29:58