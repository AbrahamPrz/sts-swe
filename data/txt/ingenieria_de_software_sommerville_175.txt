158 capítulo 6 ■ diseño arquitectónico capa superior proporciona facilidades de interfaz de usuario. desde luego, es arbitrario el número de capas. cualquiera de las capas en la figura 6.6 podría dividirse en dos o más capas. la figura 6.7 es un ejemplo de cómo puede aplicarse este patrón de arquitectura en capas a un sistema de biblioteca llamado libsys, que permite el acceso electrónico controlado a material con derechos de autor de un conjunto de bibliotecas universitarias. tiene una arquitectura de cinco capas y, en la capa inferior, están las bases de datos indi-viduales en cada biblioteca. en la figura 6.17 (que se encuentra en la sección 6.4) se observa otro ejemplo de patrón de arquitectura en capas. muestra la organización del sistema para atención a la salud mental (mhc-pms) que se estudió en capítulos anteriores. interfaz de usuario lógica empresarial núcleo/funcionalidad de aplicación utilidades del sistema soporte del sistema (os, base de datos, etc.)gestión de interfaz de usuario autenticación y autorización figura 6.6 arquitectura genérica en capas nombre arquitectura en capas descripción organiza el sistema en capas con funcionalidad relacionada con cada capa. una capa da servicios a la capa de encima, de modo que las capas de nivel inferior representan servicios núcleo que es probable se utilicen a lo largo de todo el sistema. véase la figura 6.6. ejemplo un modelo en capas de un sistema para compartir documentos con derechos de autor se tiene en diferentes bibliotecas, como se ilustra en la figura 6.7. cuándo se usa se usa al construirse nuevas facilidades encima de los sistemas existentes; cuando el desarrollo se dispersa a través de varios equipos de trabajo, y cada uno es responsable de una capa de funcionalidad; cuando exista un requerimiento para seguridad multinivel. ventajas permite la sustitución de capas completas en tanto se conserve la interfaz. para aumentar la confiabilidad del sistema, en cada capa pueden incluirse facilidades redundantes (por ejemplo, autenticación). desventajas en la práctica, suele ser difícil ofrecer una separación limpia entre capas, y es posible que una capa de nivel superior deba interactuar directamente con capas de nivel inferior, en vez de que sea a través de la capa inmediatamente abajo de ella. el rendimiento suele ser un problema, debido a múltiples niveles de interpretación de una solicitud de servicio mientras se procesa en cada capa. figura 6.5 patrón de arquitectura en capas m06_sommerville_ingenieria_1ed_se_147-175.indd  158m06_sommerville_ingenieria_1ed_se_147-175.indd  158 3/18/11  4:49:07 pm3/18/11  4:49:07 pm