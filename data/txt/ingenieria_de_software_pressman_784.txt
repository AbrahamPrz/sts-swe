REFERENCIAS 753 [Bor01] Borchers, J., A Pattern Approach to Interaction Design, Wiley, 2001. [Bos00] Bosch, J., Design & Use of Software Architectures, Addison-Wesley, 2000. [Bra85] Bradley, J. H., “The Science and Art of Debugging”, Computerworld, agosto 19, 1985, pp. 35-38. [Bra94] Bradac, M., D. Perry y L. Votta, “Prototyping a Process Monitoring Experiment”, IEEE Trans. Software  Engineering, vol. 20, núm. 10, octubre 1994, pp. 774-784. [Bre02] Breen, P., “Exposing the Fallacy of ’Good Enough’ Software”, informit.com, febrero 1, 2002, disponible  en www.informit.com/articles/article.asp?p=25141&rl=1. [Bro95] Brooks, F., The Mythical Man-Month, Silver Anniversary edition, Addison-Wesley, 1995. [Bro96] Brown, A. W. y K. C. Wallnau, “Engineering of Component Based Systems”, Component-Based Soft- ware Engineering, IEEE Computer Society Press, 1996, pp. 7-15. [Bro01] Brown, B., Oracle9i Web Development, 2a. ed., McGraw-Hill, 2001.[Bro03] Brooks, F, “Three Great Challenges for Half-Century-Old Computer Science”, JACM, vol. 50, núm. 1,  enero 2003, pp. 25-26. [Bro06] Broy, M., “The ‘Grand Challenge’ in Informatics: Engineering Software Intensive  Systems”, IEEE Com- puter, vol. 39, núm. 10, octubre 2006, pp. 72-80. [Buc99] Bucanac, C., “The V-Model”, University of Karlskrona/Ronneby, enero 1999, descargable de www. bucanac.com/documents/The_V-Model.pdf. [Bud96] Budd, T., An Introduction to Object-Oriented Programming, 2a. ed., Addison-Wesley, 1996. [Bus96] Buschmann, F., et al., Pattern-Oriented Software Architecture, Wiley, 1996. [Bus07] Buschmann, F., et al., Pattern-Oriented Software Architecture, A System of Patterns, Wiley, 2007. [Cac02] Cachero, C., et al., “Conceptual Navigation Analysis: A Device and Platform Independent Navigation  Specification”, Proc. 2nd Intl. Workshop on Web-Oriented Technology, junio 2002, descargable de www. dsic.upv.es/~west/iwwost02/papers/cachero.pdf. [Cai03] Caine, Frarber y Gordon, Inc., PDL/81, 2003, disponible en www.cfg.com/pdl81/lpd.html.[Car90] Card, D. N. y R. L. Glass, Measuring Software Design Quality, Prentice Hall, 1990.[Cas89] Cashman, M., “Object Oriented Domain Analysis”, ACM Software Engineering Notes, vol. 14, núm. 6,  octubre 1989, p. 67. [Cav78] Cavano, J. P. y J. A. McCall, “A Framework for the Measurement of Software Quality”, Proc. ACM Soft- ware Quality Assurance Workshop, noviembre 1978, pp. 133-139. [CCS02] CS3 Consulting Services, 2002, www.cs3inc.com/DSDM.htm.[Cec06] Cechich, A., et al., “Trends on COTS Component Identification”, Proc. Fifth Intl. Conf. on COTS-Based  Software Systems, IEEE, 2006. [Cha89] Charette, R. N., Software Engineering Risk Analysis and Management, McGraw-Hill/  Intertext, 1989. [Cha92] Charette, R. N., “Building Bridges over Intelligent Rivers”, American Programmer, vol. 5, núm. 7, sep- tiembre 1992, pp. 2-9. [Cha93] de Champeaux, D., D. Lea y P. Faure, Object-Oriented System Development, Addison-Wesley, 1993. [Cha03] Chakravarti, A., “Online Software Design Pattern Links”, 2003, disponible en www.anupriyo.com/ oopfm.shtml. [Che77] Chen, P., The Entity-Relationship Approach to Logical Database Design, QED Information Systems,  1977. [Chi94] Chidamber, S. R. y C. F. Kemerer, “A Metrics Suite for Object-Oriented Design”, IEEE Trans. Software  Engineering, vol. SE-20, núm. 6, junio 1994, pp. 476-493. [Cho89] Choi, S. C. y W. Scacchi, “Assuring the Correctness of a Configured Software  Description”, Proc. 2nd  Intl. Workshop on Software Configuration Management , ACM,  Princeton, NJ  , octubre 1989, pp. 66-75. [Chu95] Churcher, N. I. y M. J. Shepperd, “Towards a Conceptual Framework for Object- Oriented Metrics”,  ACM Software Engineering Notes, vol. 20, núm. 2, abril 1995, pp. 69-76. [Cig07] Cigital, Inc., “Case Study: Finding Defects Earlier Yields Enormous Savings”, 2007, disponible en www. cigital.com/solutions/roi-cs2.php. [Cla05] Clark, S. y E. Baniasaad, Aspect-Oriented Analysis and Design, Addison-Wesley, 2005. [Cle95] Clements, P., “From Subroutines to Subsystems: Component Based Software Development”, American  Programmer, vol. 8, núm. 11, noviembre 1995. [Cle03] Clements, P., R. Kazman y M. Klein, Evaluating Software Architectures: Methods and Case Studies , Addi- son-Wesley, 2003. [Cle06] Clemmons, R., “Project Estimation with Use Case Points”, CrossTalk, febrero 2006, p. 18-222, descar- gable de www.stsc.hill.af.mil/crosstalk/2006/02/0602Clemmons.pdf. [CMM07] Capability Maturity Model Integration (CMMI) , Software Engineering Institute, 2007, disponible en  www.sei.cmu.edu/cmmi/. [CMM08] People Capability Maturity Model Integration (People CMM) , Software Engineering  Institute, 2008,  disponible en www.sei.cmu.edu/cmm-p/. [Coa91] Coad, P. y E. Yourdon, Object-Oriented Analysis, 2a. ed., Prentice Hall, 1991.[Coa99] Coad, P., E. Lefebvre y J. DeLuca, Java Modeling in Color with UML, Prentice Hall, 1999. [Coc01a] Cockburn, A. y J. Highsmith, “Agile Software Development: The People Factor”, IEEE Computer, vol.  34, núm. 11, noviembre 2001, pp. 131-133. [Coc01b] Cockburn, A., Writing Effective Use-Cases, Addison-Wesley, 2001.[Coc02] Cockburn, A., Agile Software Development, Addison-Wesley, 2002. 35Pressman(751-766)Refer.indd   75335Pressman(751-766)Refer.indd   753 2/2/10   11:41:172/2/10   11:41:17