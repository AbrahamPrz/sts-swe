referencias 753 [bor01] borchers, j., a pattern approach to interaction design, wiley, 2001. [bos00] bosch, j., design & use of software architectures, addison-wesley, 2000. [bra85] bradley, j. h., “the science and art of debugging”, computerworld, agosto 19, 1985, pp. 35-38. [bra94] bradac, m., d. perry y l. votta, “prototyping a process monitoring experiment”, ieee trans. software engineering, vol. 20, núm. 10, octubre 1994, pp. 774-784. [bre02] breen, p., “exposing the fallacy of ’good enough’ software”, informit.com, febrero 1, 2002, disponible en www.informit.com/articles/article.asp?p=25141&rl=1. [bro95] brooks, f., the mythical man-month, silver anniversary edition, addison-wesley, 1995. [bro96] brown, a. w. y k. c. wallnau, “engineering of component based systems”, component-based soft- ware engineering, ieee computer society press, 1996, pp. 7-15. [bro01] brown, b., oracle9i web development, 2a. ed., mcgraw-hill, 2001.[bro03] brooks, f, “three great challenges for half-century-old computer science”, jacm, vol. 50, núm. 1, enero 2003, pp. 25-26. [bro06] broy, m., “the ‘grand challenge’ in informatics: engineering software intensive systems”, ieee com- puter, vol. 39, núm. 10, octubre 2006, pp. 72-80. [buc99] bucanac, c., “the v-model”, university of karlskrona/ronneby, enero 1999, descargable de www. bucanac.com/documents/the_v-model.pdf. [bud96] budd, t., an introduction to object-oriented programming, 2a. ed., addison-wesley, 1996. [bus96] buschmann, f., et al., pattern-oriented software architecture, wiley, 1996. [bus07] buschmann, f., et al., pattern-oriented software architecture, a system of patterns, wiley, 2007. [cac02] cachero, c., et al., “conceptual navigation analysis: a device and platform independent navigation specification”, proc. 2nd intl. workshop on web-oriented technology, junio 2002, descargable de www. dsic.upv.es/~west/iwwost02/papers/cachero.pdf. [cai03] caine, frarber y gordon, inc., pdl/81, 2003, disponible en www.cfg.com/pdl81/lpd.html.[car90] card, d. n. y r. l. glass, measuring software design quality, prentice hall, 1990.[cas89] cashman, m., “object oriented domain analysis”, acm software engineering notes, vol. 14, núm. 6, octubre 1989, p. 67. [cav78] cavano, j. p. y j. a. mccall, “a framework for the measurement of software quality”, proc. acm soft- ware quality assurance workshop, noviembre 1978, pp. 133-139. [ccs02] cs3 consulting services, 2002, www.cs3inc.com/dsdm.htm.[cec06] cechich, a., et al., “trends on cots component identification”, proc. fifth intl. conf. on cots-based software systems, ieee, 2006. [cha89] charette, r. n., software engineering risk analysis and management, mcgraw-hill/ intertext, 1989. [cha92] charette, r. n., “building bridges over intelligent rivers”, american programmer, vol. 5, núm. 7, sep- tiembre 1992, pp. 2-9. [cha93] de champeaux, d., d. lea y p. faure, object-oriented system development, addison-wesley, 1993. [cha03] chakravarti, a., “online software design pattern links”, 2003, disponible en www.anupriyo.com/ oopfm.shtml. [che77] chen, p., the entity-relationship approach to logical database design, qed information systems, 1977. [chi94] chidamber, s. r. y c. f. kemerer, “a metrics suite for object-oriented design”, ieee trans. software engineering, vol. se-20, núm. 6, junio 1994, pp. 476-493. [cho89] choi, s. c. y w. scacchi, “assuring the correctness of a configured software description”, proc. 2nd intl. workshop on software configuration management , acm, princeton, nj , octubre 1989, pp. 66-75. [chu95] churcher, n. i. y m. j. shepperd, “towards a conceptual framework for object- oriented metrics”, acm software engineering notes, vol. 20, núm. 2, abril 1995, pp. 69-76. [cig07] cigital, inc., “case study: finding defects earlier yields enormous savings”, 2007, disponible en www. cigital.com/solutions/roi-cs2.php. [cla05] clark, s. y e. baniasaad, aspect-oriented analysis and design, addison-wesley, 2005. [cle95] clements, p., “from subroutines to subsystems: component based software development”, american programmer, vol. 8, núm. 11, noviembre 1995. [cle03] clements, p., r. kazman y m. klein, evaluating software architectures: methods and case studies , addi- son-wesley, 2003. [cle06] clemmons, r., “project estimation with use case points”, crosstalk, febrero 2006, p. 18-222, descar- gable de www.stsc.hill.af.mil/crosstalk/2006/02/0602clemmons.pdf. [cmm07] capability maturity model integration (cmmi) , software engineering institute, 2007, disponible en www.sei.cmu.edu/cmmi/. [cmm08] people capability maturity model integration (people cmm) , software engineering institute, 2008, disponible en www.sei.cmu.edu/cmm-p/. [coa91] coad, p. y e. yourdon, object-oriented analysis, 2a. ed., prentice hall, 1991.[coa99] coad, p., e. lefebvre y j. deluca, java modeling in color with uml, prentice hall, 1999. [coc01a] cockburn, a. y j. highsmith, “agile software development: the people factor”, ieee computer, vol. 34, núm. 11, noviembre 2001, pp. 131-133. [coc01b] cockburn, a., writing effective use-cases, addison-wesley, 2001.[coc02] cockburn, a., agile software development, addison-wesley, 2002. 35pressman(751-766)refer.indd  75335pressman(751-766)refer.indd  753 2/2/10  11:41:172/2/10  11:41:17