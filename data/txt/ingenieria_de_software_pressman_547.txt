516 parte tres administración de la calidad cambios que conduzcan a aumento de contenido, mejor usabilidad, estética mejorada, mejor navegación, desempeño aumentado y seguridad más fuerte. por tanto, en el mundo ágil de las webapps, el cambio se ve de manera un poco diferente. si usted es miembro de un equipo webapp, debe abrazar el cambio. más aún, un equipo ágil típico se abstiene de todas las cosas que parecen ser pesadas, burocráticas y formales. la ad-ministración de la configuración del software con frecuencia se ve (aunque incorrectamente) como poseedora de estas características. esta aparente contradicción se remedia no al rechazar los principios, prácticas y herramientas acs, sino, más bien, al modelarlos para satisfacer las necesidades especiales de los proyectos webapp. 22.4.1 conflictos dominantes conforme las webapps se vuelven cada vez más importantes para la supervivencia y el creci- miento empresarial, crece la necesidad de la administración de la configuración. ¿por qué? porque sin controles efectivos, los cambios inapropiados para una webapp (recuerde que la in- mediatez y la evolución continua son los atributos dominantes de muchas webapps) pueden conducir a: publicación no autorizada de información de productos nuevos, funcionalidad erró-nea o pobremente probada que frustra a los visitantes de un sitio web, huecos en la seguridad que ponen en peligro los sistemas internos de la compañía y otras consecuencias económica-mente desagradables o incluso desastrosas. las estrategias generales para la administración de la configuración del software (acs) des- critas en este capítulo son aplicables, pero las tácticas y las herramientas deben adaptarse para conformarse a la naturaleza única de las webapps. cuando se desarrollan tácticas para la admi-nistración de la configuración de una webapp, deben considerarse cuatro conflictos [dar99]. contenido. una webapp típica contiene un arreglo muy amplio de contenido: texto, gráficos, applets, guiones, archivos audio/video, elementos de página activos, tablas, transmisión de datos, y muchos otros. el reto es organizar este mar de contenido en un conjunto racional de objetos de configuración (sección 22.1.4) y luego establecer mecanismos de control de la configuración adecuados para dichos objetos. un camino es modelar el contenido de la webapp usando técnicas de modelado de datos convencionales (capítulo 6), unidas a un conjunto de propiedades especializadas de cada objeto. la naturaleza estática/dinámica de cada objeto y su longevidad proyectada (objeto temporal, de existencia fija o permanente) son ejemplos de pro-piedades que se requieren para establecer un enfoque acs efectivo. por ejemplo, si un ítem de contenido cambia cada hora, tiene longevidad temporal. los mecanismos de control para este ítem serán diferentes (menos formales) a los aplicados para un componente de formulario, que es un objeto permanente. personas. puesto que un porcentaje significativo de desarrollo webapp continúa realizándose en una forma ad hoc, cualquier persona in volucrada en la webapp puede (y con frecuencia lo hace) crear contenido. muchos creadores de contenido no tienen antecedentes de ingeniería de software y son completamente ajenos a las necesidades de la administración de la configura-ción. como consecuencia, la aplicación crece y cambia en forma descontrolada. escalabilidad. las técnicas y los controles aplicados a una webapp pequeña no escalan bien hacia arriba. no es raro que una webapp simple crezca significativamente conforme se imple- mentan interconexiones con sistemas de información, bases de datos, almacenes de datos y puertas a portales existentes. conforme crecen el tamaño y la complejidad, pequeños cambios pueden tener efectos de largo alcance y no intencionados que pueden ser problemáticos. por tanto, el rigor de los mecanismos de control de la configuración debe ser directamente propor-cional a la escala de aplicación. 22pressman(501-525).indd  51622pressman(501-525).indd  516 19/1/10  17:12:1119/1/10  17:12:11