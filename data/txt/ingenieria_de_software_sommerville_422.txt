15.3 ■ pruebas de seguridad 405 2. las personas que atacan un sistema son inteligentes y buscan activamente vulnerabili- dades que puedan aprovechar. quieren experimentar con el sistema y utilizan artilugios que se alejan mucho de la actividad y el uso normales del sistema. por ejemplo, en un campo de apellido podrían ingresar 1,000 caracteres con una mezcla de letras, signos de puntuación y números. más aún, una vez que encuentran una vulnerabilidad, podrían intercambiar información sobre ésta y aumentar el número de atacantes potenciales. los atacantes a menudo intentan descubrir las suposiciones que hacen los desarro-lladores del sistema, para entonces contradecir dichas suposiciones y observar lo que sucede. están en una posición para usar y explorar un sistema durante cierto periodo y analizarlo mediante herramientas de software para descubrir vulnerabilidades que pue-dan aprovechar. de hecho, es muy probable que tengan más tiempo para buscar vulne-rabilidades que los ingenieros de pruebas del sistema, pues estos últimos también deben enfocarse en realizar las pruebas del sistema. por esta razón, el análisis estático es particularmente útil como herramienta de prueba de seguridad. un análisis estático de un programa puede guiar rápidamente al equipo de prueba hacia áreas de un programa que incluyen errores y vulnerabilidades. las anoma-lías reveladas en el análisis estático pueden corregirse directamente, o bien, ayudan a identificar pruebas necesarias para revelar si dichas anomalías representan en realidad un riesgo para el sistema. para comprobar la seguridad de un sistema, puede usarse una combinación de prue-bas, análisis basado en herramientas y verificación formal: 1. pruebas basadas en la experiencia en este caso, el sistema se analiza contra tipos de ataque que conoce el equipo de validación. esto implica el desarrollo de casos de prueba o el examen del código fuente de un sistema. por ejemplo, para comprobar que el sistema no es susceptible al bien conocido ataque de envenenamiento sql, se prueba el sistema usando entradas que incluyan comandos sql. para comprobar que no ocurrirán errores de desbordamiento de buffer, se examinan todos los buffers de entrada para ver si el programa comprueba que las asignaciones a los elementos del buffer están dentro de los límites. este tipo de validación se realiza habitualmente en conjunto con la validación basada en herramientas, donde estas últimas brindan información que ayuda a enfocar las pruebas del sistema. pueden crearse listas de verificación de conocidos problemas de seguridad para auxiliar en el proceso. la figura 15.5 brinda algunos ejemplos de preguntas que ayudan a impulsar las pruebas basadas en la experiencia. en una lista de verificación de problemas de seguridad también deberían incluirse las comprobaciones acerca de si se siguieron los lineamientos de diseño y programación para seguridad (capítulo 14). 2. equipos tigre ésta es una forma de pruebas basadas en la experiencia en las que es posible apoyarse en experiencia externa al equipo de desarrollo para probar un sistema de aplicación. se establece un “equipo tigre”, al que se le impone el obje-tivo de violar la seguridad del sistema. ellos simulan ataques al sistema y usan su ingenio para descubrir nuevas formas de comprometer la seguridad del sistema. los miembros del equipo tigre deben tener experiencia previa con pruebas de seguridad y descubrir debilidades de seguridad en los sistemas. 3. pruebas basadas en herramientas para este método se usan varias herramientas de seguridad, tales como verificadores de contraseña que permiten analizar el sis-tema. los verificadores de contraseñas detectan contraseñas inseguras, por ejemplo, los nombres comunes o las cadenas de letras consecutivas. este enfoque en realidad m15_sommerville_ingenieria_1ed_se_393-422.indd  405m15_sommerville_ingenieria_1ed_se_393-422.indd  405 3/18/11  5:01:19 pm3/18/11  5:01:19 pm