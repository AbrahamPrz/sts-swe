406 PARTE TRES  ADMINISTRACIÓN DE LA CALIDAD La depuración es una de las partes más frustrantes de la programación. Tiene elementos de resolución  de problemas o rompecabezas, junto con el desconcertante reconocimiento de que se cometió un error. La elevada ansiedad y la falta de voluntad para aceptar la posibilidad de los errores aumentan la dificultad de la tarea. Por fortuna, hay un gran alivio y la tensión se aligera cuando finalmente el error… se corrige. Aunque puede ser difícil “aprender” a depurar, es posible proponer algunos enfoques al pro- blema. Revise la sección 17.8.3. La escena: Cubículo de Ed mientras se realiza la  codificación y la prueba de unidad. Participantes: Ed y Shakira, miembros del equipo de ingeniería de software CasaSegura. La conversación:Shakira (observa a través de la entrada del cubículo):   Hola... ¿dónde estuviste a la hora del almuerzo?Ed: Aquí... trabajando.Shakira: Te ves horrible... ¿cuál es el problema?Ed (suspira): He estado trabajando en este... error desde que lo  descubrí a las 9:30 esta mañana y es, ¿qué?, 2:45... No tengo ni idea. Shakira: Creí que todos estuvimos de acuerdo en no pasar más de  una hora en tareas de depuración por cuenta propia; luego pediría-mos ayuda, ¿verdad?Ed: Sí, pero... Shakira (entra al cubículo): ¿Así que cuál es el problema?Ed: Es complicado y, además, lo he visto durante, ¿cuánto?, 5 horas.  No lo vas a ver en 5 minutos. Shakira: Permíteme... ¿cuál es el problema?[Ed explica el problema a Shakira, quien lo observa durante 30  segundos sin hablar, luego...] Shakira (se asoma una sonrisa en su cara): Oh, justo ahí,  la variable llamada setAlarmCondition. ¿No debería ponerse en  “falso” antes de comenzar el bucle? [Ed mira la pantalla con incredulidad, se dobla hacia adelante y co- mienza a golpear su cabeza suavemente contra el monitor. Shakira, quien ahora sonríe abiertamente, se incorpora y sale del cubículo].CASASEGURA Depuración 17.8.3  Estrategias de depuración Sin importar el enfoque que se tome, la depuración tiene un objetivo dominante: encontrar y  corregir la causa de un error o defecto de software. El objetivo se realiza mediante una combi-nación de evaluación sistemática, intuición y suerte. Bradley [Bra85] describe el enfoque de depuración de la siguiente forma: La depuración es una aplicación directa del método científico que se ha desarrollado durante más de  2 500 años. La base de la depuración es localizar la fuente del problema [la causa] mediante una par-tición binaria, a través del trabajo con hipótesis que predicen nuevos valores por examinar. Tome un ejemplo simple que no sea de software: una lámpara en mi casa no funciona. Si nada en  la casa funciona, la causa debe estar en el interruptor principal o en el exterior; observo mi alrededor para ver si el vecindario está a oscuras. Conecto la lámpara sospechosa en un tomacorriente que funcione y un electrodoméstico operativo en el circuito sospechoso. Y así continúo la alternación entre hipótesis y pruebas. En general, se han propuesto tres estrategias de depuración [Mye79]: 1) fuerza bruta, 2)  vuelta atrás (del inglés backtracking) y 3) eliminación de causas. Cada una de estas estrategias  puede llevarse a cabo de manera manual, pero modernas herramientas de depuración pueden  hacer el proceso mucho más efectivo. Tácticas de depuración.  La categoría fuerza bruta de la depuración probablemente es el  método más común y menos eficiente para aislar la causa de un error de software. Los métodos Establezca un límite, por decir, dos  horas, en la cantidad de tiempo que empleará al intentar depurar un problema por cuenta propia. Después de eso, ¡pida ayuda!CONSEJO 17Pressman(383-410).indd   40617Pressman(383-410).indd   406 21/1/10   10:59:2521/1/10   10:59:25