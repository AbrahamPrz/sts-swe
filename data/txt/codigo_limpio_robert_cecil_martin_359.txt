para compilar esta lista he examinado diversos programas y los he refactorizado. al aplicar un cambio, me preguntaba el por qué y anotaba el motivo. el resultado es una extensa lista de aspectos que no me «huelen» bien cuando leo código. la lista se debe leer de arriba a abajo, y también se puede usar como referencia. comentarios c1: información inapropiada no es apropiado que un comentario contenga información que se pueda almacenar en otro tipo de sistema como un sistema de control de código fuente, de seguimiento de problemas o de mantenimiento de registros. los historiales de cambios, por ejemplo, abarrotan los archivos de código con abundante texto sin interés alguno. por lo general, metadatos como autores, fechas de modificación, números spr y similares no deben aparecer en los comentarios. los comentarios deben reservarse para notas técnicas sobre el código y el diseño. c2: comentario obsoleto un comentario anticuado, irrelevante e incorrecto es obsoleto. los comentarios envejecen rápidamente. es recomendable no escribir un comentario que vaya a quedar obsoleto. si detecta un comentario obsoleto, conviene actualizarlo o eliminarlo lo antes posible. los comentarios obsoletos tienden a alejarse del código que describían. se convierten en islas de irrelevancia y desorientación en el código. c3: comentario redundante un comentario es redundante si describe algo que ya se define correctamente 360