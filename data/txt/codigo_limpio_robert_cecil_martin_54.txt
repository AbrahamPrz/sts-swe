extraídos de dicho dominio. Añadir contexto con sentido Algunos nombres tienen significado por sí mismos, pero la mayoría no. Por ello, debe incluirlos en un contexto, en clases, funciones y espacios de nombres con nombres adecuados. Cuando todo lo demás falle, pueden usarse prefijos como último recurso. Imagine que tiene las variables  firstName ,  lastName ,  street , houseNumber ,  city ,  state  y z ipcode . Si las combina, es evidente que forman una dirección. Pero si la variable  state  se usa de forma aislada en un método, ¿sabría que forma parte de una dirección? Puede añadir contexto por medio de prefijos:  addrFirstName ,  addrLastName ,  addrState , etc. Al menos los lectores comprenderán que estas variables forman parte de una estructura mayor. Evidentemente, es mejor crear la clase  Address . De ese modo, incluso el compilador sabrá que las variables pertenecen a un concepto más amplio. Fíjese en el método del Listado 2-1. ¿Las variables necesitan un contexto con más sentido? El nombre de la función sólo ofrece parte del contexto, el resto se obtiene del algoritmo. Tras leer la función, verá que las tres variables number ,  verb  y  pluralModifier  forman parte del mensaje  guess statistics . Desafortunadamente, es necesario inferir el contexto. Al leer el método, el significado de las variables no es evidente. Listado 2-1 Variables en un contexto ambiguo. private void printGuessStatistics(char candidate, int count) { String number; String verb; String pluralModifier; if (count == 0) { number = “no”; verb = “are”; pluralModifier = “s”; } else if (count == 1) { number = “1”; 55