incoherente de los nombres. En definitiva, el código limpio muestra gran atención al detalle. Bjarne termina afirmando que el  código limpio hace una cosa bien . No es accidental que existan tantos principios de diseño de  software  que se puedan reducir a esta sencilla máxima. Muchos escritores han tratado de comunicar este pensamiento. El código incorrecto intenta hacer demasiadas cosas y su cometido es ambiguo y enrevesado. El código limpio es  concreto . Cada función, cada clase y cada módulo muestran una única actitud que se mantiene invariable y no se contamina por los detalles circundantes. Grady Booch, autor de  Object Oriented Analysis and Design with Applications El código limpio es simple y directo. El código limpio se lee como un texto bien escrito. El código limpio no oculta la intención del diseñador, sino que muestra nítidas abstracciones y líneas directas de control. Grady mantiene las mismas ideas que Bjarne, pero adopta una perspectiva de  legibilidad . Me gusta especialmente que el código limpio se pueda leer como un texto bien escrito. Piense en un buen libro. Recordará que las palabras desaparecen y se sustituyen por imágenes, como ver una película. Mejor todavía. Es ver los caracteres, escuchar los sonidos, experimentar las sensaciones. Leer código limpio nunca será como leer  El Señor de los Anillos . Pero esta metáfora literaria no es incorrecta. Como una buena novela, el código limpio debe mostrar de forma clara el suspense del problema que hay que resolver. Debe llevar ese suspense hasta un punto álgido para después demostrar al lector que los problemas y el suspense se han solucionado de forma evidente. 30