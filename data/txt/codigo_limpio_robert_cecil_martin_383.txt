nada de  AliasLinkWidget . Puede que el programador añadiera VariableExpandingWidgetRoot  a  AliasWidget  por comodidad o que realmente pensara que debía formar parte del ámbito de  AliasWidget . Independientemente del motivo, el resultado será arbitrario. Las clases públicas que no son utilidades de otra clase no deben incluirse en el ámbito de otra clase. La convención es convertirlas en públicas en el nivel superior de su paquete. G33: Encapsular condiciones de límite Las condiciones de límite son difíciles de controlar. Aísle su procesamiento y no permita que se transfieran al resto del código. No necesitamos legiones de +1  y  -1  por todas partes. Fíjese en este ejemplo de FIT: if (level + 1 < tags.length) { parts = new Parse(body, tags, level + 1, offset + endTag); body = null; } level+1  aparece dos veces. Es una condición de límite que debe encapsularse en una variable con un nombre como  nextLevel . int nextLevel = level + 1; if(nextLevel < tags.length) { parts = new Parse(body, tags, nextLevel, offset + endTag); body = null; } G34: Las funciones sólo deben descender un nivel de abstracción Las instrucciones de una función deben crearse en el mismo nivel de abstracción, un nivel por debajo de la operación descrita por el nombre de la función. Puede que sea la heurística más difícil de interpretar y aplicar. Aunque la idea es simple, como humanos nos cuesta mezclar niveles de abstracción. Fíjese en el siguiente código de FitNesse: public String render() throws Exception { 384