F2: Argumentos de salida Los argumentos de salida son ilógicos. El lector espera que los argumentos sean entradas, no salidas. Si su función tiene que cambiar el estado de algo, haga que cambie el estado del objeto en el que se invoca (véase el capítulo 3). F3: Argumentos de indicador Los argumentos booleanos declaran abiertamente que la función hace más de una cosa. Resultan confusos y deben eliminarse (véase el capítulo 3). F4: Función muerta Los métodos que nunca se invocan deben descartarse. La presencia de código muerto es innecesaria. No tema eliminar la función. Su sistema de control de código fuente la recordará. General G1: Varios lenguajes en un archivo de código Los modernos entornos de programación actuales permiten incluir varios lenguajes diferentes en el mismo archivo de código. Por ejemplo, un archivo de Java puede contener fragmentos de XML, HTML, YAML, JavaDoc, JavaScript, y similares. Además de HTML, un archivo JSP podría incluir Java, sintaxis de biblioteca de etiquetas, comentarios en español, Javadoc, XML, JavaScript, etc. Resulta confuso en el mejor de los casos y un desastre en el peor. Lo ideal sería que el archivo de código incluyera un solo lenguaje pero, en realidad, seguramente tendremos que usar más de uno. Debemos intentar minimizar la cantidad y el alcance de los lenguajes adicionales en nuestros 363