556 PARTE CUATRO  ADMINISTRACIÓN DE PROYECTOS DE SOFTWARE Una vez comprendidos los objetivos y el ámbito del producto, se consideran soluciones al- ternativas. Aunque se analizan muy pocos detalles, las alternativas permiten a los gerentes y  profesionales seleccionar un “mejor” enfoque, dadas las restricciones impuestas por fechas de entrega, restricciones presupuestales, disponibilidad de personal, interfaces técnicas y muchos otros factores. 24.1.3  El proceso Un proceso de software (capítulos 2 y 3) proporciona el marco conceptual desde el cual puede establecerse un plan completo para el desarrollo de software. Un pequeño número de activida-des de marco conceptual se aplica a todos los proyectos de software, sin importar su tamaño o complejidad. Algunos conjuntos de diferentes tareas (tareas, hitos, productos operativos y pun-tos de aseguramiento de calidad) permiten que las actividades del marco conceptual se adapten a las características del proyecto de software y a los requerimientos del equipo del proyecto. Finalmente, las actividades sombrilla (como el aseguramiento de la calidad del software, la ad-ministración de configuración del software y las mediciones) recubren el modelo de proceso. Las actividades sombrilla son independientes de cualquier actividad del marco conceptual y ocurren a lo largo del proceso. 24.1.4  El proyecto Los proyectos de software se planean y controlan debido a una razón principal: es la única forma conocida para manejar la complejidad. E incluso así, los equipos de software todavía batallan. En un estudio de 250 grandes proyectos de software desarrollados entre 1998 y 2004, Capers Jones [Jon04] encontró que “alrededor de 25 se consideraron exitosos por haber logrado sus objetivos de calendario, costo y calidad. Aproximadamente 50 tuvieron demoras o excesos por abajo de 35 por ciento, mientras que más o menos 175 experimentaron grandes demoras y ex-cesos, o se dieron por concluidos sin completarse”. Aunque actualmente la tasa de éxito para los proyectos de software puede haber mejorado un poco, la tasa de falla de proyecto sigue siendo mucho más alta de lo que debiera. 1 Para evitar el fracaso del proyecto, un gerente de proyecto de software y los ingenieros de  software que construyan el producto deben evitar un conjunto de señales de advertencia comu-nes, entender los factores de éxito cruciales que conducen a una buena administración del pro-yecto y desarrollar un enfoque de sentido común para planificar, monitorear y controlar el  proyecto. Cada uno de estos temas se estudia en la sección 24.5 y en los capítulos que siguen.  24.2 E L PERSONAL En un estudio publicado por el IEEE [Cur88], se preguntó a los vicepresidentes de ingeniería de  tres grandes compañías tecnológicas cuál era el elemento más importante para el éxito de un proyecto de software. Ellos respondieron de la siguiente manera:  VP 1: Supongo que, si tienes que elegir una cosa que sea la más importante en nuestro  ambiente, diría que no son las herramientas que usamos, es el personal.  VP 2: El ingrediente más importante que fue exitoso en este proyecto fue tener gente inte- ligente [...] en mi opinión, muy pocas cosas más importan [...] La cosa más importante que Quienes se adhieren a la filosofía de  proceso ágil (capítulo 3) argumentan que su proceso es más esbelto que otros. Esto puede ser cierto, pero todavía tienen un proceso, y la ingeniería de software ágil todavía requiere disciplina.CONSEJO 1 Con estas estadísticas, es razonable preguntar cómo sigue creciendo exponencialmente el impacto de las   computadoras. Parte de la respuesta es que un número sustancial de estos proyectos “fallidos” estuvieron mal  concebidos desde el inicio. Los clientes pierden interés rápidamente (porque lo que pidieron en realidad no era tan importante como pensaron la primera vez) y los proyectos se cancelan. 24Pressman(553-570).indd   55624Pressman(553-570).indd   556 19/1/10   23:34:4119/1/10   23:34:41