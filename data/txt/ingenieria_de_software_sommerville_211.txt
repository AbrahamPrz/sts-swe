194 capítulo 7 ■ diseño e implementación librerías de lenguaje de programación. sin embargo, los costos y la presión por fechas significaban que este enfoque se volvería cada vez más inviable, sobre todo para siste-mas comerciales y basados en internet. en consecuencia, surgió un enfoque al desarrollo basado en la reutilización del software existente y ahora se emplea generalmente para sistemas empresariales, software científico y, cada vez más, en ingeniería de sistemas embebidos. la reutilización de software es posible en algunos niveles diferentes: 1. el nivel de abstracción en este nivel no se reutiliza el software directamente, sino más bien se utiliza el conocimiento de abstracciones exitosas en el diseño de su software. los patrones de diseño y los arquitectónicos (tratados en el capítulo 6) son vías de representación del conocimiento abstracto para la reutilización. 2. el nivel objeto en este nivel se reutilizan directamente los objetos de una librería en vez de escribir uno mismo en código. para implementar este tipo de reutilización, se deben encontrar librerías adecuadas y descubrir si los objetos y métodos ofrecen la funcionalidad que se necesita. por ejemplo, si usted requiere procesar mensajes de correo en un programa java, tiene que usar objetos y métodos de una librería javamail. 3. el nivel componente los componentes son colecciones de objetos y clases de objetos que operan en conjunto para brindar funciones y servicios relacionados. con frecuencia se debe adaptar y extender el componente al agregar por cuenta pro-pia cierto código. un ejemplo de reutilización a nivel componente es donde usted construye su interfaz de usuario mediante un marco. éste es un conjunto de clases de objetos generales que aplica manipulación de eventos, gestión de despliegue, etcétera. agrega conexiones a los datos a desplegar y escribe el código para definir detalles de despliegue específicos, como plantilla de la pantalla y colores. 4. el nivel sistema en este nivel se reutilizan sistemas de aplicación completos. usualmente esto implica cierto tipo de configuración de dichos sistemas. puede hacerse al agregar y modificar el código (si reutiliza una línea de producto de soft-ware) o al usar la interfaz de configuración característica del sistema. la mayoría de los sistemas comerciales se diseñan ahora de esta forma, donde se adapta y reutilizan sistemas cots (comerciales) genéricos. a veces este enfoque puede incluir la reuti-lización de muchos sistemas diferentes e integrarlos para crear un nuevo sistema. al reutilizar el software existente, es factible desarrollar nuevos sistemas más rápi-damente, con menos riesgos de desarrollo y también costos menores. puesto que el soft-ware reutilizado se probó en otras aplicaciones, debe ser más confiable que el software nuevo. sin embargo, existen costos asociados con la reutilización: 1. los costos del tiempo empleado en la búsqueda del software para reutilizar y valorar si cubre sus necesidades o no. es posible que deba poner a prueba el software para asegurarse de que funcionará en su entorno, especialmente si éste es diferente de su entorno de desarrollo. 2. donde sea aplicable, los costos por comprar el software reutilizable. para sistemas comerciales grandes, dichos costos suelen ser muy elevados. m07_sommerville_ingenieria_1ed_se_176-204.indd  194m07_sommerville_ingenieria_1ed_se_176-204.indd  194 3/18/11  4:50:13 pm3/18/11  4:50:13 pm