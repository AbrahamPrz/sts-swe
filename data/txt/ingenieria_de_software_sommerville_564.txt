20.2 ■ patrones arquitectónicos 547 20.2 patrones arquitectónicos los patrones arquitectónicos, que se explicaron en el capítulo 6, son descripciones abs- tractas estilizadas de buenas prácticas de diseño. contienen conocimiento acerca de la organización de las arquitecturas del sistema, cuándo deben usarse dichas arquitecturas, y sus ventajas y desventajas. con todo, no se debe pensar en un patrón arquitectónico como si se tratara de un diseño genérico a representarse mediante casos. en vez de ello, el patrón se usa para comprender una arquitectura y, como punto de partida, en la crea-ción de su propio diseño arquitectónico específico. como se esperaría, las diferencias entre software embebido e interactivo significan que, para los sistemas embebidos, se utilizan diferentes patrones arquitectónicos, en vez de los patrones arquitectónicos expuestos en el capítulo 6. los patrones de los siste-mas embebidos son orientados a procesos más que orientados a objetos o componentes. en esta sección se analizan tres patrones arquitectónicos de tiempo real que se emplean comúnmente: 1. observar y reaccionar este patrón se utiliza cuando un conjunto de sensores se monitorizan y despliegan de manera rutinaria. en el momento en que los sensores indican que sucedió cierto evento (por ejemplo, una llamada entrante en un teléfono celular), el sistema reacciona iniciando un proceso para manejar dicho evento. 2. control ambiental este patrón se emplea cuando un sistema incluye sensores que proporcionan información sobre el entorno y los actuadores que pueden cambiar el entorno. en respuesta a los cambios ambientales detectados por el sensor, se envían señales de control a los actuadores del sistema. 3. segmentación de proceso ( process pipeline) este patrón se usa al transformarse datos de una representación a otra antes de que puedan procesarse. la transforma-ción se implementa como una secuencia de pasos de procesamiento, que pueden realizarse de manera concurrente. esto permite un procesamiento de datos muy rápido, debido a que un núcleo o procesador separado puede ejecutar cada trans-formación. desde luego, los patrones pueden combinarse y usted percibirá con frecuencia más de uno de ellos en un solo sistema. por ejemplo, cuando se usa el patrón control ambiental, es muy común que los actuadores se monitoricen mediante el patrón observar y reaccionar. en caso de falla de un actuador, el sistema puede reaccionar desplegando un java en tiempo real el lenguaje de programación java se modificó de varias formas para adecuarlo al desarrollo de sistemas de tiempo real. tales modificaciones comprenden comunicaciones asíncronas; la adición de tiempo, incluido tiempo absoluto y relativo; un nuevo modelo de hilo donde los hilos no pueden interrumpirse por la recolección de basura; y un nuevo modelo de gestión de memoria, el cual evita las demoras impredecibles que pueden resultar de la recolección de basura. http://www.softwareengineering-9.com/web/rts/java.html m20_sommerville_ingenieria_1ed_se_537-564.indd  547m20_sommerville_ingenieria_1ed_se_537-564.indd  547 3/18/11  5:05:49 pm3/18/11  5:05:49 pm